$AUTH_TYPE
$DOCUMENT_ROOT
$GATEWAY_INTERFACE
$GLOBALS
$HTTP_ACCEPT
$HTTP_ACCEPT_CHARSET
$HTTP_ACCEPT_ENCODING
$HTTP_ACCEPT_LANGUAGE
$HTTP_CONNECTION
$HTTP_HOST
$HTTP_REFERER
$HTTP_USER_AGENT
$PATH_TRANSLATED
$PHP_AUTH_PW
$PHP_AUTH_USER
$PHP_SELF
$QUERY_STRING
$REMOTE_ADDR
$REMOTE_HOST
$REMOTE_PORT
$REQUEST_METHOD
$REQUEST_URI
$SCRIPT_FILENAME
$SCRIPT_NAME
$SERVER_ADMIN
$SERVER_NAME
$SERVER_PORT
$SERVER_PROTOCOL
$SERVER_SIGNATURE
$SERVER_SOFTWARE
$_COOKIE
$_ENV
$_FILES
$_GET
$_POST
$_REQUEST
$_SERVER
$_SESSION
$argc
$argv
$php_errormsg
DomAttribute->name(void) Returns name of attribute (bool)
DomAttribute->specified(void) Checks if attribute is specified (bool)
DomAttribute->value(void) Returns value of attribute (bool)
DomDocument->add_root [deprecated](string name) >DomDocument-&#62;add_root [deprecated]&nbsp;--&nbsp; Adds a root node (resource)
DomDocument->create_attribute(string name, string value) Create new attribute (object)
DomDocument->create_cdata_section(string content) Create new cdata node (string)
DomDocument->create_comment(string content) Create new comment node (object)
DomDocument->create_element(string name) Create new element node (object)
DomDocument->create_element_ns(string uri, string name [, string prefix]) Create new element node with an associated namespace (object)
DomDocument->create_entity_reference(string content)  (object)
DomDocument->create_processing_instruction(string content) Creates new PI node (string)
DomDocument->create_text_node(string content) Create new text node (object)
DomDocument->doctype(void) Returns the document type (object)
DomDocument->document_element(void) Returns root element node (object)
DomDocument->dump_file(string filename [, bool compressionmode [, bool format]]) Dumps the internal XML tree back into a file (string)
DomDocument->dump_mem([bool format [, string encoding]]) Dumps the internal XML tree back into a string (string)
DomDocument->get_element_by_id(string id) Searches for an element with a certain id (object)
DomDocument->get_elements_by_tagname(string name)  (array)
DomDocument->html_dump_mem(void) Dumps the internal XML tree back into a string as HTML (string)
DomDocument->xinclude(void) Substitutes XIncludes in a DomDocument Object. (int)
DomDocumentType->entities(void) Returns list of entities (array)
DomDocumentType->internal_subset(void) Returns internal subset (bool)
DomDocumentType->name(void) Returns name of document type (string)
DomDocumentType->notations(void) Returns list of notations (array)
DomDocumentType->public_id(void) Returns public id of document type (string)
DomDocumentType->system_id(void) Returns system id of document type (string)
DomElement->get_attribute(string name) Returns value of attribute (object)
DomElement->get_attribute_node(object attr) Returns value of attribute (object)
DomElement->get_elements_by_tagname(string name) Gets elements by tagname (bool)
DomElement->has_attribute(string name) Checks to see if attribute exists (bool)
DomElement->remove_attribute(string name) Removes attribute (bool)
DomElement->set_attribute(string name, string value) Adds new attribute (bool)
DomElement->tagname(void) Returns name of element (string)
DomNode->add_namespace(string uri, string prefix) Adds a namespace declaration to a node. (bool)
DomNode->append_child(object newnode) Adds new child at the end of the children (object)
DomNode->append_sibling(object newnode) Adds new sibling to a node (object)
DomNode->attributes(void) Returns list of attributes (array)
DomNode->child_nodes(void) Returns children of node (array)
DomNode->clone_node(void) Clones a node (object)
DomNode->dump_node(void) Dumps a single node (string)
DomNode->first_child(void) Returns first child of node (bool)
DomNode->get_content(void) Gets content of node (string)
DomNode->has_attributess(void) Checks if node has attributes (bool)
DomNode->has_child_nodes(void) Checks if node has children (bool)
DomNode->insert_before(object newnode, object refnode) Inserts new node as child (object)
DomNode->is_blank_node(void) Checks if node is blank (bool)
DomNode->last_child(void) Returns last child of node (object)
DomNode->next_sibling(void) Returns the next sibling of node (object)
DomNode->node_name(void) Returns name of node (string)
DomNode->node_type(void) Returns type of node (int)
DomNode->node_value(void) Returns value of a node (string)
DomNode->owner_document(void) Returns the document this node belongs to (object)
DomNode->parent_node(void) Returns the parent of the node (object)
DomNode->prefix(void) Returns name space prefix of node (string)
DomNode->previous_sibling(void) Returns the previous sibling of node (object)
DomNode->remove_child(object oldchild) Removes child from list of children (object)
DomNode->replace_child(object oldnode, object newnode) Replaces a child (object)
DomNode->replace_node(object newnode) Replaces node (object)
DomNode->set_content(void) Sets content of node (bool)
DomNode->set_name(void) Sets name of node (bool)
DomNode->set_namespace(string uri [, string prefix]) Sets namespace of a node. (void)
DomNode->unlink_node(void) Deletes node (object)
DomProcessingInstruction->data(void) Returns data of pi node (string)
DomProcessingInstruction->target(void) Returns target of pi node (string)
DomXsltStylesheet->process(object DomDocument [, array xslt_parameters [, bool param_is_xpath]]) Applies the XSLT-Transformation on a DomDocument Object. (object)
DomXsltStylesheet->result_dump_file(object DomDocument, string filename) Dumps the result from a XSLT-Transformation into a file (string)
DomXsltStylesheet->result_dump_mem(object DomDocument) Dumps the result from a XSLT-Transformation back into a string (string)
FrenchToJD(int month, int day, int year) Converts a date from the French Republican Calendar to a Julian Day Count (int)
GregorianToJD(int month, int day, int year) Converts a Gregorian date to Julian Day Count (int)
JDDayOfWeek(int julianday, int mode) Returns the day of the week (mixed)
JDMonthName(int julianday, int mode) Returns a month name (string)
JDToFrench(int juliandaycount) Converts a Julian Day Count to the French Republican Calendar (string)
JDToGregorian(int julianday) Converts Julian Day Count to Gregorian date (string)
JDToJewish(int julianday) Converts a Julian Day Count to the Jewish Calendar (string)
JDToJulian(int julianday) Converts a Julian Day Count to a Julian Calendar Date (string)
JewishToJD(int month, int day, int year) Converts a date in the Jewish Calendar to Julian Day Count (int)
JulianToJD(int month, int day, int year) Converts a Julian Calendar date to Julian Day Count (int)
OCIBindByName(int stmt, string ph_name, mixed & variable, int length [, int type]) Bind a PHP variable to an Oracle Placeholder (bool)
OCICancel(int stmt) Cancel reading from cursor (bool)
OCICollAssignElem(object collection, string ndx, string val) Coming soon (bool)
OCICommit(int connection) Commits outstanding transactions (bool)
OCIDefineByName(int stmt, string Column-Name, mixed variable [, int type]) Use a PHP variable for the define-step during a SELECT (bool)
OCIError([int stmt|conn|global]) Return the last error of stmt|conn|global (array)
Ora_Bind(int cursor, string PHP variable name, string SQL parameter name, int length [, int type]) bind a PHP variable to an Oracle parameter (int)
Ora_Close(int cursor) close an Oracle cursor (int)
Ora_CommitOn(int conn) enable automatic commit (int)
Ora_Do(int conn, string query) Parse, Exec, Fetch (int)
Ora_Fetch(int cursor) fetch a row of data from a cursor (int)
Ora_Fetch_Into(int cursor, array result [, int flags]) Fetch a row into the specified result array (int)
Ora_Rollback(int connection) roll back transaction (int)
SWFAction(string script) Creates a new Action. (new)
SWFBitmap(string filename [, int alphafilename]) Loads Bitmap object (new)
SWFBitmap->getHeight(void) Returns the bitmap's height. (int)
SWFBitmap->getWidth(void) Returns the bitmap's width. (int)
SWFDisplayItem(void) Creates a new displayitem object. (new)
SWFDisplayItem->Rotate(float ddegrees) Rotates in relative coordinates. (void)
SWFDisplayItem->addColor([int red [, int green [, int blue [, int a]]]]) Adds the given color to this item's color transform. (void)
SWFDisplayItem->move(int dx, int dy) Moves object in relative coordinates. (void)
SWFDisplayItem->moveTo(int x, int y) Moves object in global coordinates. (void)
SWFDisplayItem->multColor([int red [, int green [, int blue [, int a]]]]) Multiplies the item's color transform. (void)
SWFDisplayItem->remove(void) Removes the object from the movie (void)
SWFDisplayItem->rotateTo(float degrees) Rotates the object in global coordinates. (void)
SWFDisplayItem->scale(int dx, int dy) Scales the object in relative coordinates. (void)
SWFDisplayItem->scaleTo(int x, int y) Scales the object in global coordinates. (void)
SWFDisplayItem->setDepth(float depth) Sets z-order (void)
SWFDisplayItem->setName(string name) Sets the object's name (void)
SWFDisplayItem->setRatio(float ratio) Sets the object's ratio. (void)
SWFDisplayItem->skewX(float ddegrees) Sets the X-skew. (void)
SWFDisplayItem->skewXTo(float degrees) Sets the X-skew. (void)
SWFDisplayItem->skewY(float ddegrees) Sets the Y-skew. (void)
SWFDisplayItem->skewYTo(float degrees) Sets the Y-skew. (void)
SWFFill(void) Loads SWFFill object (new)
SWFFill->moveTo(int x, int y) Moves fill origin (void)
SWFFill->rotateTo(float degrees) Sets fill's rotation (void)
SWFFill->scaleTo(int x, int y) Sets fill's scale (void)
SWFFill->skewXTo(float x) Sets fill x-skew (void)
SWFFill->skewYTo(float y) Sets fill y-skew (void)
SWFFont(string filename) Loads a font definition (new)
SWFGradient(void) Creates a gradient object (new)
SWFGradient->addEntry(float ratio, int red, int green, int blue [, int a]) Adds an entry to the gradient list. (void)
SWFMorph(void) Creates a new SWFMorph object. (new)
SWFMorph->getshape1(void) Gets a handle to the starting shape (mixed)
SWFMorph->getshape2(void) Gets a handle to the ending shape (mixed)
SWFMovie(void) Creates a new movie object, representing an SWF version 4 movie. (new)
SWFMovie->add(ressource instance) Adds any type of data to a movie. (void)
SWFMovie->nextframe(void) Moves to the next frame of the animation. (void)
SWFMovie->output(void) Dumps your lovingly prepared movie out. (void)
SWFMovie->save(string filename) Saves your movie in a file. (void)
SWFMovie->setbackground(int red, int green, int blue) Sets the background color. (void)
SWFMovie->setdimension(int width, int height) Sets the movie's width and height. (void)
SWFMovie->setframes(string numberofframes) Sets the total number of frames in the animation. (void)
SWFMovie->setrate(int rate) Sets the animation's frame rate. (void)
SWFMovie->streammp3(string mp3FileName) Streams a MP3 file. (void)
SWFShape(void) Creates a new shape object. (new)
SWFShape->addFill(int red, int green, int blue [, int a]) Adds a solid fill to the shape. (void)
SWFShape->drawCurve(int controldx, int controldy, int anchordx, int anchordy) Draws a curve (relative). (void)
SWFShape->drawCurveTo(int controlx, int controly, int anchorx, int anchory) Draws a curve. (void)
SWFShape->drawLine(int dx, int dy) Draws a line (relative). (void)
SWFShape->drawLineTo(int x, int y) Draws a line. (void)
SWFShape->movePen(int dx, int dy) Moves the shape's pen (relative). (void)
SWFShape->movePenTo(int x, int y) Moves the shape's pen. (void)
SWFShape->setLeftFill(swfgradient fill) Sets left rasterizing color. (void)
SWFShape->setLine(int width [, int red [, int green [, int blue [, int a]]]]) Sets the shape's line style. (void)
SWFShape->setRightFill(swfgradient fill) Sets right rasterizing color. (void)
SWFSprite(void) Creates a movie clip (a sprite) (new)
SWFSprite->nextframe(void) Moves to the next frame of the animation. (void)
SWFSprite->remove(ressource object) Removes an object to a sprite (void)
SWFSprite->setframes(int numberofframes) Sets the total number of frames in the animation. (void)
SWFText(void) Creates a new SWFText object. (new)
SWFText->addString(string string) Draws a string (void)
SWFText->getWidth(string string) Computes string's width (void)
SWFText->moveTo(int x, int y) Moves the pen (void)
SWFText->setColor(int red, int green, int blue [, int a]) Sets the current font color (void)
SWFText->setFont(string font) Sets the current font (void)
SWFText->setHeight(int height) Sets the current font height (void)
SWFText->setSpacing(float spacing) Sets the current font spacing (void)
SWFTextField([int flags]) Creates a text field object (new)
SWFTextField->addstring(string string) Concatenates the given string to the text field (void)
SWFTextField->align(int alignement) Sets the text field alignment (void)
SWFTextField->setFont(string font) Sets the text field font (void)
SWFTextField->setHeight(int height) Sets the font height of this text field font. (void)
SWFTextField->setLeftMargin(int width) Sets the left margin width of the text field. (void)
SWFTextField->setLineSpacing(int height) Sets the line spacing of the text field. (void)
SWFTextField->setMargins(int left, int right) Sets the margins width of the text field. (void)
SWFTextField->setbounds(int width, int height) Sets the text field width and height (void)
SWFTextField->setcolor(int red, int green, int blue [, int a]) Sets the color of the text field. (void)
SWFTextField->setindentation(int width) Sets the indentation of the first line. (void)
SWFTextField->setname(string name) Sets the variable name (void)
SWFTextField->setrightMargin(int width) Sets the right margin width of the text field. (void)
SWFbutton(void) Creates a new Button. (new)
SWFbutton->addAction(ressource action, int flags) Adds an action (void)
SWFbutton->addShape(ressource shape, int flags) Adds a shape to a button (void)
SWFbutton->setAction(ressource action) Sets the action (void)
SWFbutton->setHit(ressource shape) Alias for addShape(shape, SWFBUTTON_HIT) (void)
SWFbutton->setOver(ressource shape) Alias for addShape(shape, SWFBUTTON_OVER) (void)
SWFbutton->setUp(ressource shape) Alias for addShape(shape, SWFBUTTON_UP) (void)
SWFbutton->setdown(ressource shape) Alias for addShape(shape, SWFBUTTON_DOWN)) (void)
abs(mixed number) Absolute value (mixed)
acos(float arg) Arc cosine (float)
acosh(float arg) Inverse hyperbolic cosine (float)
addcslashes(string str, string charlist) Quote string with slashes in a C style (string)
addslashes(string str) Quote string with slashes (string)
aggregate(object object, string class_name) dynamic class and object aggregation of methods and properties (void)
aggregate_info(object object) returns an associative array of the methods and properties from each class that has been aggregated to the object. (array)
aggregate_methods(object object, string class_name) dynamic class and object aggregation of methods (void)
aggregate_methods_by_list(object object, string class_name, array methods_list [, bool exclude]) selective dynamic class methods aggregation to an object (void)
aggregate_methods_by_regexp(object object, string class_name, string regexp [, bool exclude]) selective class methods aggregation to an object using a regular expression (void)
aggregate_properties(object object, string class_name) dynamic aggregation of  class properties to an object (void)
aggregate_properties_by_list(object object, string class_name, array properties_list [, bool exclude]) selective dynamic class properties aggregation to an object (void)
aggregate_properties_by_regexp(object object, string class_name, string regexp [, bool exclude]) selective class properties aggregation to an object using a regular expression (void)
aggregation_info(?) Alias for aggregate_info() (?)
apache_child_terminate(void) Terminate apache process after this request (bool)
apache_lookup_uri(string filename) Perform a partial request for the specified URI and return all info about it (object)
apache_note(string note_name [, string note_value]) Get and set apache request notes (string)
apache_request_headers(void) Fetch all HTTP request headers (array)
apache_response_headers(void) Fetch all HTTP response headers (array)
apache_setenv(string variable, string value [, bool walk_to_top]) Set an Apache subprocess_env variable (int)
array([mixed ...]) Create an array (array)
array_change_key_case(array input [, int case]) Returns an array with all string keys lowercased or uppercased (array)
array_chunk(array input, int size [, bool preserve_keys]) Split an array into chunks (array)
array_count_values(array input) Counts all the values of an array (array)
array_diff(array array1, array array2 [, array ...]) Computes the difference of arrays (array)
array_diff_assoc(array array1, array array2 [, array ...]) Computes the difference of arrays with additional index check (array)
array_fill(int start_index, int num, mixed value) Fill an array with values (array)
array_filter(array input [, callback function]) Filters elements of an array using a callback function (array)
array_flip(array trans) Exchanges all keys with their associated values in an array (array)
array_intersect(array array1, array array2 [, array ...]) Computes the intersection of arrays (array)
array_intersect_assoc(array array1, array array2 [, array ...]) Computes the intersection of arrays with additional index check (array)
array_key_exists(mixed key, array search) Checks if the given key or index exists in the array (bool)
array_keys(array input [, mixed search_value]) Return all the keys of an array (array)
array_map(mixed callback, array arr1 [, array ...]) Applies the callback to the elements of the given arrays (array)
array_merge(array array1, array array2 [, array ...]) Merge two or more arrays (array)
array_merge_recursive(array array1, array array2 [, array ...]) Merge two or more arrays recursively (array)
array_multisort(array ar1 [, mixed arg [, mixed ... [, array ...]]]) Sort multiple or multi-dimensional arrays (bool)
array_pad(array input, int pad_size, mixed pad_value) Pad array to the specified length with a value (array)
array_pop(array array) Pop the element off the end of array (mixed)
array_push(array array, mixed var [, mixed ...]) Push one or more elements onto the end of array (int)
array_rand(array input [, int num_req]) Pick one or more random entries out of an array (mixed)
array_reduce(array input, callback function [, int initial]) Iteratively reduce the array to a single value using a callback function (mixed)
array_reverse(array array [, bool preserve_keys]) Return an array with elements in reverse order (array)
array_search(mixed needle, array haystack [, bool strict]) Searches the array for a given value and returns the corresponding key if successful (mixed)
array_shift(array array) Shift an element off the beginning of array (mixed)
array_slice(array array, int offset [, int length]) Extract a slice of the array (array)
array_splice(array input, int offset [, int length [, array replacement]]) Remove a portion of the array and replace it with something else (array)
array_sum(array array) Calculate the sum of values in an array. (mixed)
array_unique(array array) Removes duplicate values from an array (array)
array_unshift(array array, mixed var [, mixed ...]) Prepend one or more elements to the beginning of array (int)
array_values(array input) Return all the values of an array (array)
array_walk(array array, callback function [, mixed userdata]) Apply a user function to every member of an array (int)
arsort(array array [, int sort_flags]) Sort an array in reverse order and maintain index association (void)
ascii2ebcdic(string ascii_str) Translate string from ASCII to EBCDIC (int)
asin(float arg) Arc sine (float)
asinh(float arg) Inverse hyperbolic sine (float)
asort(array array [, int sort_flags]) Sort an array and maintain index association (void)
aspell_check(int dictionary_link, string word) Check a word [deprecated] (bool)
aspell_check_raw(int dictionary_link, string word) Check a word without changing its case or trying to trim it [deprecated] (bool)
aspell_new(string master [, string personal]) Load a new dictionary [deprecated] (int)
aspell_suggest(int dictionary_link, string word) Suggest spellings of a word [deprecated] (array)
assert(mixed assertion) Checks if assertion is FALSE (int)
assert_options(int what [, mixed value]) Set/get the various assert flags (mixed)
atan(float arg) Arc tangent (float)
atan2(float y, float x) arc tangent of two variables (float)
atanh(float arg) Inverse hyperbolic tangent (float)
base64_decode(string encoded_data) Decodes data encoded with MIME base64 (string)
base64_encode(string data) Encodes data with MIME base64 (string)
base_convert(string number, int frombase, int tobase) Convert a number between arbitrary bases (string)
basename(string path [, string suffix]) Returns filename component of path (string)
bcadd(string left_operand, string right_operand [, int scale]) Add two arbitrary precision numbers (string)
bccomp(string left_operand, string right_operand [, int scale]) Compare two arbitrary precision numbers (int)
bcdiv(string left_operand, string right_operand [, int scale]) Divide two arbitrary precision numbers (string)
bcmod(string left_operand, string modulus) Get modulus of an arbitrary precision number (string)
bcmul(string left_operand, string right_operand [, int scale]) Multiply two arbitrary precision number (string)
bcpow(string x, int y [, int scale]) Raise an arbitrary precision number to another (string)
bcpowmod(string x, string y, string modulus [, int scale]) Raise an arbitrary precision number to another, reduced by a specified modulus. (string)
bcscale(int scale) Set default scale parameter for all bc math functions (string)
bcsqrt(string operand [, int scale]) Get the square root of an arbitrary precision number (string)
bcsub(string left_operand, string right_operand [, int scale]) Subtract one arbitrary precision number from another (string)
bin2hex(string str) Convert binary data into hexadecimal representation (string)
bind_textdomain_codeset(string domain, string codeset) Specify the character encoding in which the messages from the DOMAIN message catalog will be returned (string)
bindec(string binary_string) Binary to decimal (int)
bindtextdomain(string domain, string directory) Sets the path for a domain (string)
bzclose(resource bz) Close a bzip2 file pointer (int)
bzcompress(string source [, int blocksize [, int workfactor]]) Compress a string into bzip2 encoded data (string)
bzdecompress(string source [, int small]) Decompresses bzip2 encoded data (string)
bzerrno(resource bz) Returns a bzip2 error number (int)
bzerror(resource bz) Returns the bzip2 error number and error string in an array (array)
bzerrstr(resource bz) Returns a bzip2 error string (string)
bzflush(resource bz) Force a write of all buffered data (int)
bzopen(string filename, string mode) Open a bzip2 compressed file (resource)
bzread(resource bz [, int length]) Binary safe bzip2 file read (string)
bzwrite(resource bz, string data [, int length]) Binary safe bzip2 file write (int)
cal_days_in_month(int calendar, int month, int year) Return the number of days in a month for a given year and calendar (int)
cal_from_jd(int jd, int calendar) Converts from Julian Day Count to a supported calendar (array)
cal_info([int calendar]) Returns information about a particular calendar (array)
cal_to_jd(int calendar, int month, int day, int year) Converts from a supported calendar to Julian Day Count (int)
call_user_func(callback function [, mixed parameter [, mixed ...]]) Call a user function given by the first parameter (mixed)
call_user_func_array(callback function [, array paramarr]) Call a user function given with an array of parameters (mixed)
call_user_method(string method_name, object obj [, mixed parameter [, mixed ...]]) Call a user method on an specific object [deprecated] (mixed)
call_user_method_array(string method_name, object obj [, array paramarr]) Call a user method given with an array of parameters [deprecated] (mixed)
ccvs_add(string session, string invoice, string argtype, string argval) Add data to a transaction (string)
ccvs_auth(string session, string invoice) Perform credit authorization test on a transaction (string)
ccvs_command(string session, string type, string argval) Performs a command which is peculiar to a single protocol, and thus is not available in the general CCVS API (string)
ccvs_count(string session, string type) Find out how many transactions of a given type are stored in the system (int)
ccvs_delete(string session, string invoice) Delete a transaction (string)
ccvs_done(string sess) Terminate CCVS engine and do cleanup work (string)
ccvs_init(string name) Initialize CCVS for use (string)
ccvs_lookup(string session, string invoice, int inum) Look up an item of a particular type in the database # (string)
ccvs_new(string session, string invoice) Create a new, blank transaction (string)
ccvs_report(string session, string type) Return the status of the background communication process (string)
ccvs_return(string session, string invoice) Transfer funds from the merchant to the credit card holder (string)
ccvs_reverse(string session, string invoice) Perform a full reversal on an already-processed authorization (string)
ccvs_sale(string session, string invoice) Transfer funds from the credit card holder to the merchant (string)
ccvs_status(string session, string invoice) Check the status of an invoice (string)
ccvs_textvalue(string session) Get text return value for previous function call (string)
ccvs_void(string session, string invoice) Perform a full reversal on a completed transaction (string)
ceil(float value) Round fractions up (float)
chdir(string directory) Change directory (bool)
checkdate(int month, int day, int year) Validate a gregorian date (bool)
checkdnsrr(string host [, string type]) Check DNS records corresponding to a given Internet host name or IP address (int)
chgrp(string filename, mixed group) Changes file group (int)
chmod(string filename, int mode) Changes file mode (int)
chop(?) Alias of rtrim() (?)
chown(string filename, mixed user) Changes file owner (int)
chr(int ascii) Return a specific character (string)
chroot(string directory) Change the root directory (bool)
chunk_split(string body [, int chunklen [, string end]]) Split a string into smaller chunks (string)
class_exists(string class_name) Checks if the class has been defined (bool)
clearstatcache(void) Clears file status cache (void)
closedir(resource dir_handle) close directory handle (void)
closelog(void) Close connection to system logger (int)
com_addref(void) Increases the components reference counter. (void)
com_get(resource com_object, string property) Gets the value of a COM Component's property (mixed)
com_invoke(resource com_object, string function_name [, mixed function parameters, ...]) Calls a COM component's method. (mixed)
com_isenum(object com_module) Grabs an IEnumVariant (void)
com_load(string module_name [, string server_name [, int codepage]]) Creates a new reference to a COM component (string)
com_load_typelib(string typelib_name [, int case_insensitive]) Loads a Typelib (void)
com_propget(?) Alias of com_get() (?)
com_propput(?) Alias of com_set() (?)
com_propset(?) Alias of com_set() (?)
com_release(void) Decreases the components reference counter. (void)
com_set(resource com_object, string property, mixed value) Assigns a value to a COM component's property (void)
compact(mixed varname [, mixed ...]) Create array containing variables and their values (array)
connection_aborted(void) Returns TRUE if client disconnected (int)
connection_status(void) Returns connection status bitfield (int)
connection_timeout(void) Return TRUE if script timed out (bool)
constant(string name) Returns the value of a constant (mixed)
convert_cyr_string(string str, string from, string to) Convert from one Cyrillic character set to another (string)
copy(string source, string dest) Copies file (int)
cos(float arg) Cosine (float)
cosh(float arg) Hyperbolic cosine (float)
count(mixed var) Count elements in a variable (int)
count_chars(string string [, int mode]) Return information about characters used in a string (mixed)
cpdf_add_annotation(int pdf_document, float llx, float lly, float urx, float ury, string title, string content [, int mode]) Adds annotation (void)
cpdf_add_outline(int pdf_document, string text) Adds bookmark for current page (void)
cpdf_arc(int pdf_document, float x-coor, float y-coor, float radius, float start, float end [, int mode]) Draws an arc (void)
cpdf_begin_text(int pdf_document) Starts text section (void)
cpdf_circle(int pdf_document, float x-coor, float y-coor, float radius [, int mode]) Draw a circle (void)
cpdf_clip(int pdf_document) Clips to current path (void)
cpdf_close(int pdf_document) Closes the pdf document (void)
cpdf_closepath(int pdf_document) Close path (void)
cpdf_closepath_fill_stroke(int pdf_document) Close, fill and stroke current path (void)
cpdf_closepath_stroke(int pdf_document) Close path and draw line along path (void)
cpdf_continue_text(int pdf_document, string text) Output text in next line (void)
cpdf_curveto(int pdf_document, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode]) Draws a curve (void)
cpdf_end_text(int pdf_document) Ends text section (void)
cpdf_fill(int pdf_document) Fill current path (void)
cpdf_fill_stroke(int pdf_document) Fill and stroke current path (void)
cpdf_finalize(int pdf_document) Ends document (void)
cpdf_finalize_page(int pdf_document, int page_number) Ends page (void)
cpdf_global_set_document_limits(int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects) Sets document limits for any pdf document (void)
cpdf_import_jpeg(int pdf_document, string file name, float x-coor, float y-coor, float angle, float width, float height, float x-scale, float y-scale [, int mode]) Opens a JPEG image (int)
cpdf_lineto(int pdf_document, float x-coor, float y-coor [, int mode]) Draws a line (void)
cpdf_moveto(int pdf_document, float x-coor, float y-coor [, int mode]) Sets current point (void)
cpdf_newpath(int pdf_document) Starts a new path (void)
cpdf_open(int compression [, string filename]) Opens a new pdf document (int)
cpdf_output_buffer(int pdf_document) Outputs the pdf document in memory buffer (void)
cpdf_page_init(int pdf_document, int page_number, int orientation, float height, float width [, float unit]) Starts new page (void)
cpdf_place_inline_image(int pdf_document, int image, float x-coor, float y-coor, float angle, float width, float height [, int mode]) Places an image on the page (void)
cpdf_rect(int pdf_document, float x-coor, float y-coor, float width, float height [, int mode]) Draw a rectangle (void)
cpdf_restore(int pdf_document) Restores formerly saved environment (void)
cpdf_rlineto(int pdf_document, float x-coor, float y-coor [, int mode]) Draws a line (void)
cpdf_rmoveto(int pdf_document, float x-coor, float y-coor [, int mode]) Sets current point (void)
cpdf_rotate(int pdf_document, float angle) Sets rotation (void)
cpdf_rotate_text(int pdfdoc, float angle) Sets text rotation angle (void)
cpdf_save(int pdf_document) Saves current environment (void)
cpdf_save_to_file(int pdf_document, string filename) Writes the pdf document into a file (void)
cpdf_scale(int pdf_document, float x-scale, float y-scale) Sets scaling (void)
cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode]) Sets hyperlink (void)
cpdf_set_char_spacing(int pdf_document, float space) Sets character spacing (void)
cpdf_set_creator(string creator) Sets the creator field in the pdf document (void)
cpdf_set_current_page(int pdf_document, int page_number) Sets current page (void)
cpdf_set_font(int pdf_document, string font name, float size, string encoding) Select the current font face and size (void)
cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir) Sets directories to search when using external fonts (void)
cpdf_set_font_map_file(int pdfdoc, string filename) Sets fontname to filename translation map when using external fonts (void)
cpdf_set_horiz_scaling(int pdf_document, float scale) Sets horizontal scaling of text (void)
cpdf_set_keywords(string keywords) Sets the keywords field of the pdf document (void)
cpdf_set_leading(int pdf_document, float distance) Sets distance between text lines (void)
cpdf_set_page_animation(int pdf_document, int transition, float duration) Sets duration between pages (void)
cpdf_set_subject(string subject) Sets the subject field of the pdf document (void)
cpdf_set_text_matrix(int pdf_document, array matrix) Sets the text matrix (void)
cpdf_set_text_pos(int pdf_document, float x-coor, float y-coor [, int mode]) Sets text position (void)
cpdf_set_text_rendering(int pdf_document [, int mode]) Determines how text is rendered (void)
cpdf_set_text_rise(int pdf_document, float value) Sets the text rise (void)
cpdf_set_title(string title) Sets the title field of the pdf document (void)
cpdf_set_viewer_preferences(int pdfdoc, array preferences) How to show the document in the viewer (void)
cpdf_set_word_spacing(int pdf_document, float space) Sets spacing between words (void)
cpdf_setdash(int pdf_document, float white, float black) Sets dash pattern (void)
cpdf_setflat(int pdf_document, float value) Sets flatness (void)
cpdf_setgray(int pdf_document, float gray_value) Sets drawing and filling color to gray value (void)
cpdf_setgray_fill(int pdf_document, float value) Sets filling color to gray value (void)
cpdf_setgray_stroke(int pdf_document, float gray_value) Sets drawing color to gray value (void)
cpdf_setlinecap(int pdf_document, int value) Sets linecap parameter (void)
cpdf_setlinejoin(int pdf_document, int value) Sets linejoin parameter (void)
cpdf_setlinewidth(int pdf_document, float width) Sets line width (void)
cpdf_setmiterlimit(int pdf_document, float value) Sets miter limit (void)
cpdf_setrgbcolor(int pdf_document, float red_value, float green_value, float blue_value) Sets drawing and filling color to rgb color value (void)
cpdf_setrgbcolor_fill(int pdf_document, float red_value, float green_value, float blue_value) Sets filling color to rgb color value (void)
cpdf_setrgbcolor_stroke(int pdf_document, float red_value, float green_value, float blue_value) Sets drawing color to rgb color value (void)
cpdf_show(int pdf_document, string text) Output text at current position (void)
cpdf_show_xy(int pdf_document, string text, float x-coor, float y-coor [, int mode]) Output text at position (void)
cpdf_stringwidth(int pdf_document, string text) Returns width of text in current font (float)
cpdf_stroke(int pdf_document) Draw line along path (void)
cpdf_text(int pdf_document, string text, float x-coor, float y-coor [, int mode [, float orientation [, int alignmode]]]) Output text with parameters (void)
cpdf_translate(int pdf_document, float x-coor, float y-coor [, int mode]) Sets origin of coordinate system (void)
crack_check([resource dictionary, string password]) Performs an obscure check with the given password (bool)
crack_closedict([resource dictionary]) Closes an open CrackLib dictionary (bool)
crack_getlastmessage(void) Returns the message from the last obscure check (string)
crack_opendict(string dictionary) Opens a new CrackLib dictionary (resource)
crc32(string str) Calculates the crc32 polynomial of a string (int)
create_function(string args, string code) Create an anonymous (lambda-style) function (string)
crypt(string str [, string salt]) One-way string encryption (hashing) (string)
ctype_alnum(string text) Check for alphanumeric character(s) (bool)
ctype_alpha(string text) Check for alphabetic character(s) (bool)
ctype_cntrl(string text) Check for control character(s) (bool)
ctype_digit(string text) Check for numeric character(s) (bool)
ctype_graph(string text) Check for any printable character(s) except space (bool)
ctype_lower(string text) Check for lowercase character(s) (bool)
ctype_print(string text) Check for printable character(s) (bool)
ctype_punct(string text) Check for any printable character which is not whitespace or an alphanumeric character (bool)
ctype_space(string text) Check for whitespace character(s) (bool)
ctype_upper(string text) Check for uppercase character(s) (bool)
ctype_xdigit(string text) Check for character(s) representing a hexadecimal digit (bool)
curl_close(resource ch) Close a CURL session (void)
curl_errno(resource ch) Return the last error number (int)
curl_error(resource ch) Return a string containing the last error for the current session (string)
curl_exec(resource ch) Perform a CURL session (bool)
curl_getinfo(resource ch [, int opt]) Get information regarding a specific transfer (string)
curl_init([string url]) Initialize a CURL session (resource)
curl_setopt(resource ch, string option, mixed value) Set an option for a CURL transfer (bool)
curl_version(void) Return the current CURL version (string)
current(array array) Return the current element in an array (mixed)
cybercash_base64_decode(string inbuff) base64 decode data for Cybercash (string)
cybercash_base64_encode(string inbuff) base64 encode data for Cybercash (string)
cybercash_decr(string wmk, string sk, string inbuff) Cybercash decrypt (array)
cybercash_encr(string wmk, string sk, string inbuff) Cybercash encrypt (array)
cybermut_creerformulairecm(string url_CM, string version, string TPE, string montant, string ref_commande, string texte_libre, string url_retour, string url_retour_ok, string url_retour_err, string langue, string code_societe, string texte_bouton) Generate HTML form of request for payment (string)
cybermut_creerreponsecm(string phrase) Generate the acknowledgement of delivery of the confirmation of payment (string)
cybermut_testmac(string code_MAC, string version, string TPE, string cdate, string montant, string ref_commande, string texte_libre, string code-retour) Make sure that there no was data diddling contained in the received message of confirmation (bool)
cyrus_authenticate(resource connection [, string mechlist [, string service [, string user [, int minssf [, int maxssf]]]]]) Authenticate against a Cyrus IMAP server (bool)
cyrus_bind(resource connection, array callbacks) Bind callbacks to a Cyrus IMAP connection (bool)
cyrus_close(resource connection) Close connection to a Cyrus IMAP server (bool)
cyrus_connect([string host [, string port [, int flags]]]) Connect to a Cyrus IMAP server (resource)
cyrus_query(resource connection, string query) Send a query to a Cyrus IMAP server (bool)
cyrus_unbind(resource connection, string trigger_name) Unbind ... (bool)
date(string format [, int timestamp]) Format a local time/date (string)
dba_close(resource handle) Close database (void)
dba_delete(string key, resource handle) Delete entry specified by key (bool)
dba_exists(string key, resource handle) Check whether key exists (bool)
dba_fetch(string key [, int skip, resource handle]) Fetch data specified by key (string)
dba_firstkey(resource handle) Fetch first key (string)
dba_handlers(void) List handlers available (array)
dba_insert(string key, string value, resource handle) Insert entry (bool)
dba_list(void) List all open database files (array)
dba_nextkey(resource handle) Fetch next key (string)
dba_open(string path, string mode, string handler [, ...]) Open database (resource)
dba_optimize(resource handle) Optimize database (bool)
dba_popen(string path, string mode, string handler [, ...]) Open database persistently (resource)
dba_replace(string key, string value, resource handle) Replace or insert entry (bool)
dba_sync(resource handle) Synchronize database (bool)
dbase_add_record(int dbase_identifier, array record) Add a record to a dBase database (bool)
dbase_close(int dbase_identifier) Close a dBase database (bool)
dbase_create(string filename, array fields) Creates a dBase database (int)
dbase_delete_record(int dbase_identifier, int record) Deletes a record from a dBase database (bool)
dbase_get_record(int dbase_identifier, int record) Gets a record from a dBase database (array)
dbase_get_record_with_names(int dbase_identifier, int record) Gets a record from a dBase database as an associative array (array)
dbase_numfields(int dbase_identifier) Find out how many fields are in a dBase database (int)
dbase_numrecords(int dbase_identifier) Find out how many records are in a dBase database (int)
dbase_open(string filename, int flags) Opens a dBase database (int)
dbase_pack(int dbase_identifier) Packs a dBase database (bool)
dbase_replace_record(int dbase_identifier, array record, int dbase_record_number) Replace a record in a dBase database (bool)
dblist(void) Describes the DBM-compatible library being used (string)
dbmclose(resource dbm_identifier) Closes a dbm database (bool)
dbmdelete(resource dbm_identifier, string key) Deletes the value for a key from a DBM database (bool)
dbmexists(resource dbm_identifier, string key) Tells if a value exists for a key in a DBM database (bool)
dbmfetch(resource dbm_identifier, string key) Fetches a value for a key from a DBM database (string)
dbmfirstkey(resource dbm_identifier) Retrieves the first key from a DBM database (string)
dbminsert(resource dbm_identifier, string key, string value) Inserts a value for a key in a DBM database (int)
dbmnextkey(resource dbm_identifier, string key) Retrieves the next key from a DBM database (string)
dbmopen(string filename, string flags) Opens a DBM database (resource)
dbmreplace(resource dbm_identifier, string key, string value) Replaces the value for a key in a DBM database (int)
dbplus_add(resource relation, array tuple) Add a tuple to a relation (int)
dbplus_aql(string query [, string server [, string dbpath]]) Perform AQL query (resource)
dbplus_chdir([string newdir]) Get/Set database virtual current directory (string)
dbplus_close(resource relation) Close a relation (int)
dbplus_curr(resource relation, array tuple) Get current tuple from relation (int)
dbplus_errcode(int errno) Get error string for given errorcode or last error (string)
dbplus_errno(void) Get error code for last operation (int)
dbplus_find(resource relation, array constraints, mixed tuple) Set a constraint on a relation (int)
dbplus_first(resource relation, array tuple) Get first tuple from relation (int)
dbplus_flush(resource relation) Flush all changes made on a relation (int)
dbplus_freealllocks(void) Free all locks held by this client (int)
dbplus_freelock(resource relation, string tname) Release write lock on tuple (int)
dbplus_freerlocks(resource relation) Free all tuple locks on given relation (int)
dbplus_getlock(resource relation, string tname) Get a write lock on a tuple (int)
dbplus_getunique(resource relation, int uniqueid) Get a id number unique to a relation (int)
dbplus_info(resource relation, string key, array ) ??? (int)
dbplus_last(resource relation, array tuple) Get last tuple from relation (int)
dbplus_lockrel(resource relation) Request write lock on relation (int)
dbplus_next(resource relation, array ) Get next tuple from relation (int)
dbplus_open(string name) Open relation file (resource)
dbplus_prev(resource relation, array tuple) Get previous tuple from relation (int)
dbplus_rchperm(resource relation, int mask, string user, string group) Change relation permissions (int)
dbplus_rcreate(string name, mixed domlist [, bool overwrite]) Creates a new DB++ relation (resource)
dbplus_rcrtexact(string name, resource relation, bool overwrite) Creates an exact but empty copy of a relation including indices (resource)
dbplus_rcrtlike(string name, resource relation, int flag) Creates an empty copy of a relation with default indices (resource)
dbplus_resolve(string relation_name) Resolve host information for relation (int)
dbplus_restorepos(resource relation, array tuple) ??? (int)
dbplus_rkeys(resource relation, mixed domlist) Specify new primary key for a relation (resource)
dbplus_ropen(string name) Open relation file local (resource)
dbplus_rquery(string query, string dbpath) Perform local (raw) AQL query (int)
dbplus_rrename(resource relation, string name) Rename a relation (int)
dbplus_rsecindex(resource relation, mixed domlist, int type) Create a new secondary index for a relation (resource)
dbplus_runlink(resource relation) Remove relation from filesystem (int)
dbplus_rzap(resource relation) Remove all tuples from relation (int)
dbplus_savepos(resource relation) ??? (int)
dbplus_setindex(resource relation, string idx_name) ??? (int)
dbplus_setindexbynumber(resource relation, int idx_number) ??? (int)
dbplus_sql(string query, string server, string dbpath) Perform SQL query (resource)
dbplus_tcl(int sid, string script) Execute TCL code on server side (int)
dbplus_tremove(resource relation, array tuple [, array current]) Remove tuple and return new current tuple (int)
dbplus_undo(resource relation) ??? (int)
dbplus_undoprepare(resource relation) ??? (int)
dbplus_unlockrel(resource relation) Give up write lock on relation (int)
dbplus_unselect(resource relation) Remove a constraint from relation (int)
dbplus_update(resource relation, array old, array new) Update specified tuple in relation (int)
dbplus_xlockrel(resource relation) Request exclusive lock on relation (int)
dbplus_xunlockrel(resource relation) Free exclusive lock on relation (int)
dbx_close(object link_identifier) Close an open connection/database (bool)
dbx_compare(array row_a, array row_b, string column_key [, int flags]) Compare two rows for sorting purposes (int)
dbx_connect(mixed module, string host, string database, string username, string password [, int persistent]) Open a connection/database (object)
dbx_error(object link_identifier) Report the error message of the latest function call in the module (not just in the connection) (string)
dbx_escape_string(object link_identifier, string text) Escape a string so it can safely be used in an sql-statement. (string)
dbx_query(object link_identifier, string sql_statement [, long flags]) Send a query and fetch all results (if any) (object)
dbx_sort(object result, string user_compare_function) Sort a result from a dbx_query by a custom sort function (bool)
dcgettext(string domain, string message, int category) Overrides the domain for a single lookup (string)
dcngettext(string domain, string msgid1, string msgid2, int n, int category) Plural version of dcgettext (string)
deaggregate(object object [, string class_name]) Removes the aggregated methods and properties from an object (void)
debug_backtrace(void) Generates a backtrace (array)
debugger_off(void) Disable internal PHP debugger (PHP 3) (int)
debugger_on(string address) Enable internal PHP debugger (PHP 3) (int)
decbin(int number) Decimal to binary (string)
dechex(int number) Decimal to hexadecimal (string)
decoct(int number) Decimal to octal (string)
define(string name, mixed value [, bool case_insensitive]) Defines a named constant. (bool)
define_syslog_variables(void) Initializes all syslog related constants (void)
defined(string name) Checks whether a given named constant exists (bool)
deg2rad(float number) Converts the number in degrees to the radian equivalent (float)
delete(string file) See unlink() or unset() (void)
dgettext(string domain, string message) Override the current domain (string)
die(?) Alias of exit() (?)
dio_close(resource fd) Closes the file descriptor given by fd (void)
dio_fcntl(resource fd, int cmd [, mixed arg]) Performs a c library fcntl on fd (mixed)
dio_open(string filename, int flags [, int mode]) Opens a new filename with specified permissions of flags and creation permissions of mode (resource)
dio_read(resource fd [, int n]) Reads n bytes from fd and returns them, if n is not specified, reads 1k block (string)
dio_seek(resource fd, int pos, int whence) Seeks to pos on fd from whence (int)
dio_stat(resource fd) Gets stat information about the file descriptor fd (array)
dio_tcsetattr(resource fd, array options) Sets terminal attributes and baud rate for a serial port ()
dio_truncate(resource fd, int offset) Truncates file descriptor fd to offset bytes (bool)
dio_write(resource fd, string data [, int len]) Writes data to fd with optional truncation at length (int)
dirname(string path) Returns directory name component of path (string)
disk_free_space(string directory) Returns available space in directory (float)
disk_total_space(string directory) Returns the total size of a directory (float)
diskfreespace(?) Alias of disk_free_space() (?)
dl(string library) Loads a PHP extension at runtime (int)
dngettext(string domain, string msgid1, string msgid2, int n) Plural version of dgettext (string)
dns_check_record(string host [, string type]) Synonym for checkdnsrr() (int)
dns_get_mx(string hostname, array mxhosts [, array &weight]) Synonym for getmxrr() (int)
dns_get_record(string hostname [, int type [, array &authns, array &addtl]]) Fetch DNS Resource Records associated with a hostname (array)
domxml_new_doc(string version) Creates new empty XML document (object)
domxml_open_file(string filename) Creates a DOM object from XML file (object)
domxml_open_mem(string str) Creates a DOM object of an XML document (object)
domxml_version(void) Get XML library version (string)
domxml_xmltree(string str) Creates a tree of PHP objects from an XML document (object)
domxml_xslt_stylesheet(string xsl document) Creates a DomXsltStylesheet Object from a xml document in a string. (object)
domxml_xslt_stylesheet_doc(object DocDocument Object) Creates a DomXsltStylesheet Object from a DomDocument Object. (object)
domxml_xslt_stylesheet_file(string xsl file) Creates a DomXsltStylesheet Object from a xsl document in a file. (object)
dotnet_load(string assembly_name [, string datatype_name [, int codepage]]) Loads a DOTNET module (int)
doubleval(?) Alias of floatval() (?)
each(array array) Return the current key and value pair from an array and advance the array cursor (array)
easter_date([int year]) Get UNIX timestamp for midnight on Easter of a given year (int)
easter_days([int year [, int method]]) Get number of days after March 21 on which Easter falls for a given year (int)
ebcdic2ascii(string ebcdic_str) Translate string from EBCDIC to ASCII (int)
echo(string arg1 [, string argn...]) Output one or more strings (void)
empty(mixed var) Determine whether a variable is set (bool)
end(array array) Set the internal pointer of an array to its last element (mixed)
ereg(string pattern, string string [, array regs]) Regular expression match (bool)
ereg_replace(string pattern, string replacement, string string) Replace regular expression (string)
eregi(string pattern, string string [, array regs]) case insensitive regular expression match (bool)
eregi_replace(string pattern, string replacement, string string) replace regular expression case insensitive (string)
error_log(string message [, int message_type [, string destination [, string extra_headers]]]) send an error message somewhere (int)
error_reporting([int level]) set which PHP errors are reported (int)
escapeshellarg(string arg) escape a string to be used as a shell argument (string)
escapeshellcmd(string command) escape shell metacharacters (string)
eval(string code_str) Evaluate a string as PHP code (mixed)
exec(string command [, array output [, int return_var]]) Execute an external program (string)
exif_imagetype(string filename) Determine the type of an image (int)
exif_read_data(string filename [, string sections [, bool arrays [, bool thumbnail]]]) Read the EXIF headers from JPEG or TIFF. This way you can read meta data generated by digital cameras. (array)
exif_thumbnail(string filename [, int &width [, int &height [, int &imagetype]]]) Retrieve the embedded thumbnail of a TIFF or JPEG image (string)
exit([string status]) Output a message and terminate the current script (void)
exp(float arg) Calculates the exponent of e (the Neperian or Natural logarithm base) (float)
explode(string separator, string string [, int limit]) Split a string by string (array)
expm1(float number) Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero (float)
extension_loaded(string name) Find out whether an extension is loaded (bool)
extract(array var_array [, int extract_type [, string prefix]]) Import variables into the current symbol table from an array (int)
ezmlm_hash(string addr) Calculate the hash value needed by EZMLM (int)
fbsql_affected_rows([resource link_identifier]) Get number of affected rows in previous FrontBase operation (int)
fbsql_autocommit(resource link_identifier [, bool OnOff]) Enable or disable autocommit (bool)
fbsql_change_user(string user, string password [, string database [, resource link_identifier]]) Change logged in user of the active connection (resource)
fbsql_close([resource link_identifier]) Close FrontBase connection (bool)
fbsql_commit([resource link_identifier]) Commits a transaction to the database (bool)
fbsql_connect([string hostname [, string username [, string password]]]) Open a connection to a FrontBase Server (resource)
fbsql_create_blob(string blob_data [, resource link_identifier]) Create a BLOB (string)
fbsql_create_clob(string clob_data [, resource link_identifier]) Create a CLOB (string)
fbsql_create_db(string database name [, resource link_identifier]) Create a FrontBase database (bool)
fbsql_data_seek(resource result_identifier, int row_number) Move internal result pointer (bool)
fbsql_database(resource link_identifier [, string database]) Get or set the database name used with a connection (string)
fbsql_database_password(resource link_identifier [, string database_password]) Sets or retrieves the password for a FrontBase database (string)
fbsql_db_query(string database, string query [, resource link_identifier]) Send a FrontBase query (resource)
fbsql_db_status(string database_name [, resource link_identifier]) Get the status for a given database (int)
fbsql_drop_db(string database_name [, resource link_identifier]) Drop (delete) a FrontBase database (bool)
fbsql_errno([resource link_identifier]) Returns the numerical value of the error message from previous FrontBase operation (int)
fbsql_error([resource link_identifier]) Returns the text of the error message from previous FrontBase operation (string)
fbsql_fetch_array(resource result [, int result_type]) Fetch a result row as an associative array, a numeric array, or both (array)
fbsql_fetch_assoc(resource result) Fetch a result row as an associative array (array)
fbsql_fetch_field(resource result [, int field_offset]) Get column information from a result and return as an object (object)
fbsql_fetch_lengths([resource result]) Get the length of each output in a result (array)
fbsql_fetch_object(resource result [, int result_type]) Fetch a result row as an object (object)
fbsql_fetch_row(resource result) Get a result row as an enumerated array (array)
fbsql_field_flags(resource result, int field_offset) Get the flags associated with the specified field in a result (string)
fbsql_field_len(resource result, int field_offset) Returns the length of the specified field (int)
fbsql_field_name(resource result, int field_index) Get the name of the specified field in a result (string)
fbsql_field_seek(resource result, int field_offset) Set result pointer to a specified field offset (bool)
fbsql_field_table(resource result, int field_offset) Get name of the table the specified field is in (string)
fbsql_field_type(resource result, int field_offset) Get the type of the specified field in a result (string)
fbsql_free_result(resource result) Free result memory (bool)
fbsql_get_autostart_info([resource link_identifier]) No description given yet (array)
fbsql_hostname(resource link_identifier [, string host_name]) Get or set the host name used with a connection (string)
fbsql_insert_id([resource link_identifier]) Get the id generated from the previous INSERT operation (int)
fbsql_list_dbs([resource link_identifier]) List databases available on a FrontBase server (resource)
fbsql_list_fields(string database_name, string table_name [, resource link_identifier]) List FrontBase result fields (resource)
fbsql_list_tables(string database [, resource link_identifier]) List tables in a FrontBase database (resource)
fbsql_next_result(resource result_id) Move the internal result pointer to the next result (bool)
fbsql_num_fields(resource result) Get number of fields in result (int)
fbsql_num_rows(resource result) Get number of rows in result (int)
fbsql_password(resource link_identifier [, string password]) Get or set the user password used with a connection (string)
fbsql_pconnect([string hostname [, string username [, string password]]]) Open a persistent connection to a FrontBase Server (resource)
fbsql_query(string query [, resource link_identifier]) Send a FrontBase query (resource)
fbsql_read_blob(string blob_handle [, resource link_identifier]) Read a BLOB from the database (string)
fbsql_read_clob(string clob_handle [, resource link_identifier]) Read a CLOB from the database (string)
fbsql_result(resource result, int row [, mixed field]) Get result data (mixed)
fbsql_rollback([resource link_identifier]) Rollback a transaction to the database (bool)
fbsql_select_db(string database_name [, resource link_identifier]) Select a FrontBase database (bool)
fbsql_set_lob_mode(resource result, string database_name) Set the LOB retrieve mode for a FrontBase result set (bool)
fbsql_set_transaction(resource link_identifier, int Locking, int Isolation) Set the transaction locking and isolation (void)
fbsql_start_db(string database_name [, resource link_identifier]) Start a database on local or remote server (bool)
fbsql_stop_db(string database_name [, resource link_identifier]) Stop a database on local or remote server (bool)
fbsql_tablename(resource result, int i) Get table name of field (string)
fbsql_username(resource link_identifier [, string username]) Get or set the host user used with a connection (string)
fbsql_warnings([bool OnOff]) Enable or disable FrontBase warnings (bool)
fclose(resource handle) Closes an open file pointer (bool)
fdf_add_doc_javascript(resource fdfdoc, string script_name, string script_code) Adds javascript code to the FDF document (bool)
fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename) Adds a template into the FDF document (bool)
fdf_close(resource fdf_document) Close an FDF document (bool)
fdf_create(void) Create a new FDF document (resource)
fdf_enum_values(resource fdfdoc, callback function [, mixed userdata]) Call a user defined function for each document value (bool)
fdf_errno(void) Return error code for last fdf operation (int)
fdf_error([int error_code]) Return error description for fdf error code (string)
fdf_get_ap(resource fdf_document, string field, int face, string filename) Get the appearance of a field (bool)
fdf_get_attachment(resource fdf_document, string fieldname, string savepath) Extracts uploaded file embedded in the FDF (array)
fdf_get_encoding(resource fdf_document) Get the value of the /Encoding key (string)
fdf_get_file(resource fdf_document) Get the value of the /F key (string)
fdf_get_flags(void) Gets the flags of a field ()
fdf_get_opt(resource fdfdof, string fieldname [, int element]) Gets a value from the opt array of a field (mixed)
fdf_get_status(resource fdf_document) Get the value of the /STATUS key (string)
fdf_get_value(resource fdf_document, string fieldname [, int which]) Get the value of a field (string)
fdf_get_version([resource fdf_document]) Gets version number for FDF api or file (string)
fdf_header(void) Sets FDF-specific output headers (bool)
fdf_next_field_name(resource fdf_document [, string fieldname]) Get the next field name (string)
fdf_open(string filename) Open a FDF document (resource)
fdf_open_string(string fdf_data) Read a FDF document from a string (resource)
fdf_remove_item(resource fdfdoc, string fieldname, int item) Sets target frame for form (bool)
fdf_save(resource fdf_document [, string filename]) Save a FDF document (bool)
fdf_save_string(resource fdf_document) Returns the FDF document as a string (string)
fdf_set_ap(resource fdf_document, string field_name, int face, string filename, int page_number) Set the appearance of a field (bool)
fdf_set_encoding(resource fdf_document, string encoding) Sets FDF character encoding (bool)
fdf_set_file(resource fdf_document, string url [, string target_frame]) Set PDF document to display FDF data in (bool)
fdf_set_flags(resource fdf_document, string fieldname, int whichFlags, int newFlags) Sets a flag of a field (bool)
fdf_set_javascript_action(resource fdf_document, string fieldname, int trigger, string script) Sets an javascript action of a field (bool)
fdf_set_opt(resource fdf_document, string fieldname, int element, string str1, string str2) Sets an option of a field (bool)
fdf_set_status(resource fdf_document, string status) Set the value of the /STATUS key (bool)
fdf_set_submit_form_action(resource fdf_document, string fieldname, int trigger, string script, int flags) Sets a submit form action of a field (bool)
fdf_set_target_frame(resource fdf_document, string frame_name) Set target frame for form display (bool)
fdf_set_value(resource fdf_document, string fieldname, mixed value [, int isName]) Set the value of a field (bool)
fdf_set_version(resource fdf_document, string version) Sets version number for a FDF file (string)
feof(resource handle) Tests for end-of-file on a file pointer (bool)
fflush(resource handle) Flushes the output to a file (bool)
fgetc(resource handle) Gets character from file pointer (string)
fgetcsv(resource handle, int length [, string delimiter [, string enclosure]]) Gets line from file pointer and parse for CSV fields (array)
fgets(resource handle [, int length]) Gets line from file pointer (string)
fgetss(resource handle, int length [, string allowable_tags]) Gets line from file pointer and strip HTML tags (string)
file(string filename [, int use_include_path [, resource context]]) Reads entire file into an array (array)
file_exists(string filename) Checks whether a file or directory exists (bool)
file_get_contents(string filename [, int use_include_path [, resource context]]) Reads entire file into a string (string)
file_put_contents(string filename, string data [, int flags [, resource context]]) Write a string to a file (int)
fileatime(string filename) Gets last access time of file (int)
filectime(string filename) Gets inode change time of file (int)
filegroup(string filename) Gets file group (int)
fileinode(string filename) Gets file inode (int)
filemtime(string filename) Gets file modification time (int)
fileowner(string filename) Gets file owner (int)
fileperms(string filename) Gets file permissions (int)
filepro(string directory) Read and verify the map file (bool)
filepro_fieldcount(void) Find out how many fields are in a filePro database (int)
filepro_fieldname(int field_number) Gets the name of a field (string)
filepro_fieldtype(int field_number) Gets the type of a field (string)
filepro_fieldwidth(int field_number) Gets the width of a field (int)
filepro_retrieve(int row_number, int field_number) Retrieves data from a filePro database (string)
filepro_rowcount(void) Find out how many rows are in a filePro database (int)
filesize(string filename) Gets file size (int)
filetype(string filename) Gets file type (string)
floatval(mixed var) Get float value of a variable (float)
flock(resource handle, int operation [, int &wouldblock]) Portable advisory file locking (bool)
floor(float value) Round fractions down (float)
flush(void) Flush the output buffer (void)
fmod(float x, float y) Returns the floating point remainder (modulo) of the division of the arguments (float)
fnmatch(string pattern, string string [, int flags]) Match filename against a  pattern (array)
fopen(string filename, string mode [, int use_include_path [, resource zcontext]]) Opens file or URL (resource)
fpassthru(resource handle) Output all remaining data on a file pointer (int)
fprintf(resource handle, string format [, mixed args]) Write a formatted string to a stream (int)
fputs(?) Alias of fwrite() (?)
fread(resource handle, int length) Binary-safe file read (string)
fribidi_log2vis(string str, string direction, int charset) Convert a logical string to a visual one (string)
fscanf(resource handle, string format [, string var1]) Parses input from a file according to a format (mixed)
fseek(resource handle, int offset [, int whence]) Seeks on a file pointer (int)
fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]]) Open Internet or Unix domain socket connection (int)
fstat(resource handle) Gets information about a file using an open file pointer (array)
ftell(resource handle) Tells file pointer read/write position (int)
ftok(string pathname, string proj) Convert a pathname and a project identifier to a System V IPC key (int)
ftp_cdup(resource ftp_stream) Changes to the parent directory (bool)
ftp_chdir(resource ftp_stream, string directory) Changes directories on a FTP server (bool)
ftp_chmod(resource ftp_stream, int mode, string filename) Set permissions on a file via FTP (string)
ftp_close(resource ftp_stream) Closes an FTP connection (void)
ftp_connect(string host [, int port [, int timeout]]) Opens an FTP connection (resource)
ftp_delete(resource ftp_stream, string path) Deletes a file on the FTP server (bool)
ftp_exec(resource ftp_stream, string command) Requests execution of a program on the FTP server (bool)
ftp_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos]) Downloads a file from the FTP server and saves to an open file (bool)
ftp_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos]) Uploads from an open file to the FTP server (bool)
ftp_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos]) Downloads a file from the FTP server (bool)
ftp_get_option(resource ftp_stream, int option) Retrieves various runtime behaviours of the current FTP stream (mixed)
ftp_login(resource ftp_stream, string username, string password) Logs in to an FTP connection (bool)
ftp_mdtm(resource ftp_stream, string remote_file) Returns the last modified time of the given file (int)
ftp_mkdir(resource ftp_stream, string directory) Creates a directory (string)
ftp_nb_continue(resource ftp_stream) Continues retrieving/sending a file (non-blocking) (bool)
ftp_nb_fget(resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos]) Retrieves a file from the FTP server and writes it to an open file (non-blocking) (bool)
ftp_nb_fput(resource ftp_stream, string remote_file, resource handle, int mode [, int startpos]) Stores a file from an open file to the FTP server (non-blocking) (bool)
ftp_nb_get(resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos]) Retrieves a file from the FTP server and writes it to a local file (non-blocking) (bool)
ftp_nb_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos]) Stores a file on the FTP server (non-blocking) (bool)
ftp_nlist(resource ftp_stream, string directory) Returns a list of files in the given directory (array)
ftp_pasv(resource ftp_stream, bool pasv) Turns passive mode on or off (bool)
ftp_put(resource ftp_stream, string remote_file, string local_file, int mode [, int startpos]) Uploads a file to the FTP server (bool)
ftp_pwd(resource ftp_stream) Returns the current directory name (string)
ftp_quit(?) Alias of ftp_close() (?)
ftp_raw(resource ftp_stream, string command) Sends an arbitrary command to an FTP server (array)
ftp_rawlist(resource ftp_stream, string directory) Returns a detailed list of files in the given directory (array)
ftp_rename(resource ftp_stream, string from, string to) Renames a file on the FTP server (bool)
ftp_rmdir(resource ftp_stream, string directory) Removes a directory (bool)
ftp_set_option(resource ftp_stream, int option, mixed value) Set miscellaneous runtime FTP options (bool)
ftp_site(resource ftp_stream, string cmd) Sends a SITE command to the server (bool)
ftp_size(resource ftp_stream, string remote_file) Returns the size of the given file (int)
ftp_ssl_connect(string host [, int port [, int timeout]]) Opens an Secure SSL-FTP connection (resource)
ftp_systype(resource ftp_stream) Returns the system type identifier of the remote FTP server (string)
ftruncate(resource handle, int size) Truncates a file to a given length (bool)
func_get_arg(int arg_num) Return an item from the argument list (mixed)
func_get_args(void) Returns an array comprising a function's argument list (array)
func_num_args(void) Returns the number of arguments passed to the function (int)
function_exists(string function_name) Return TRUE if the given function has been defined (bool)
fwrite(resource handle, string string [, int length]) Binary-safe file write (int)
gd_info(void) Retrieve information about the currently installed GD library (array)
get_browser([string user_agent]) Tells what the user's browser is capable of (object)
get_cfg_var(string varname) Gets the value of a PHP configuration option (string)
get_class(object obj) Returns the name of the class of an object (string)
get_class_methods(mixed class_name) Returns an array of class methods' names (array)
get_class_vars(string class_name) Returns an array of default properties of the class (array)
get_current_user(void) Gets the name of the owner of the current PHP script (string)
get_declared_classes(void) Returns an array with the name of the defined classes (array)
get_defined_constants(void) Returns an associative array with the names of all the constants and their values (array)
get_defined_functions(void) Returns an array of all defined functions (array)
get_defined_vars(void) Returns an array of all defined variables (array)
get_extension_funcs(string module_name) Returns an array with the names of the functions of a module (array)
get_html_translation_table(int table [, int quote_style]) Returns the translation table used by htmlspecialchars() and htmlentities() (array)
get_included_files(void) Returns an array with the names of included or required files (array)
get_loaded_extensions(void) Returns an array with the names of all modules compiled and loaded (array)
get_magic_quotes_gpc(void) Gets the current active configuration setting of magic quotes gpc (int)
get_magic_quotes_runtime(void) Gets the current active configuration setting of magic_quotes_runtime (int)
get_meta_tags(string filename [, int use_include_path]) Extracts all meta tag content attributes from a file and returns an array (array)
get_object_vars(object obj) Returns an associative array of object properties (array)
get_parent_class(mixed obj) Retrieves the parent class name for object or class (string)
get_required_files(?) Alias of get_included_files() (?)
get_resource_type(resource handle) Returns the resource type (string)
getallheaders(void) Fetch all HTTP request headers (array)
getcwd(void) gets the current working directory (string)
getdate([int timestamp]) Get date/time information (array)
getenv(string varname) Gets the value of an environment variable (string)
gethostbyaddr(string ip_address) Get the Internet host name corresponding to a given IP address (string)
gethostbyname(string hostname) Get the IP address corresponding to a given Internet host name (string)
gethostbynamel(string hostname) Get a list of IP addresses corresponding to a given Internet host name (array)
getimagesize(string filename [, array imageinfo]) Get the size of an image (array)
getlastmod(void) Gets time of last page modification (int)
getmxrr(string hostname, array mxhosts [, array weight]) Get MX records corresponding to a given Internet host name (int)
getmygid(void) Get PHP script owner's GID (int)
getmyinode(void) Gets the inode of the current script (int)
getmypid(void) Gets PHP's process ID (int)
getmyuid(void) Gets PHP script owner's UID (int)
getopt(string options) Gets options from the command line argument list (string)
getprotobyname(string name) Get protocol number associated with protocol name (int)
getprotobynumber(int number) Get protocol name associated with protocol number (string)
getrandmax(void) Show largest possible random value (int)
getrusage([int who]) Gets the current resource usages (array)
getservbyname(string service, string protocol) Get port number associated with an Internet service and protocol (int)
getservbyport(int port, string protocol) Get Internet service which corresponds to port and protocol (string)
gettext(string message) Lookup a message in the current domain (string)
gettimeofday(void) Get current time (array)
gettype(mixed var) Get the type of a variable (string)
glob(string pattern [, int flags]) Find pathnames matching a pattern (array)
gmdate(string format [, int timestamp]) Format a GMT/UTC date/time (string)
gmmktime([int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]]) Get UNIX timestamp for a GMT date (int)
gmp_abs(resource a) Absolute value (resource)
gmp_add(resource a, resource b) Add numbers (resource)
gmp_and(resource a, resource b) Logical AND (resource)
gmp_clrbit(resource &a, int index) Clear bit (resource)
gmp_cmp(resource a, resource b) Compare numbers (int)
gmp_com(resource a) Calculates one's complement of a (resource)
gmp_div(?) Alias of gmp_div_q() (?)
gmp_div_q(resource a, resource b [, int round]) Divide numbers (resource)
gmp_div_qr(resource n, resource d [, int round]) Divide numbers and get quotient and remainder (array)
gmp_div_r(resource n, resource d [, int round]) Remainder of the division of numbers (resource)
gmp_divexact(resource n, resource d) Exact division of numbers (resource)
gmp_fact(int a) Factorial (resource)
gmp_gcd(resource a, resource b) Calculate GCD (resource)
gmp_gcdext(resource a, resource b) Calculate GCD and multipliers (array)
gmp_hamdist(resource a, resource b) Hamming distance (int)
gmp_init(mixed number) Create GMP number (resource)
gmp_intval(resource gmpnumber) Convert GMP number to integer (int)
gmp_invert(resource a, resource b) Inverse by modulo (resource)
gmp_jacobi(resource a, resource p) Jacobi symbol (int)
gmp_legendre(resource a, resource p) Legendre symbol (int)
gmp_mod(resource n, resource d) Modulo operation (resource)
gmp_mul(resource a, resource b) Multiply numbers (resource)
gmp_neg(resource a) Negate number (resource)
gmp_or(resource a, resource b) Logical OR (resource)
gmp_perfect_square(resource a) Perfect square check (bool)
gmp_popcount(resource a) Population count (int)
gmp_pow(resource base, int exp) Raise number into power (resource)
gmp_powm(resource base, resource exp, resource mod) Raise number into power with modulo (resource)
gmp_prob_prime(resource a [, int reps]) Check if number is "probably prime" (int)
gmp_random(int limiter) Random number (resource)
gmp_scan0(resource a, int start) Scan for 0 (int)
gmp_scan1(resource a, int start) Scan for 1 (int)
gmp_setbit(resource &a, int index [, bool set_clear]) Set bit (resource)
gmp_sign(resource a) Sign of number (int)
gmp_sqrt(resource a) Square root (resource)
gmp_sqrtrm(resource a) Square root with remainder (array)
gmp_strval(resource gmpnumber [, int base]) Convert GMP number to string (string)
gmp_sub(resource a, resource b) Subtract numbers (resource)
gmp_xor(resource a, resource b) Logical XOR (resource)
gmstrftime(string format [, int timestamp]) Format a GMT/UTC time/date according to locale settings (string)
gzclose(resource zp) Close an open gz-file pointer (int)
gzcompress(string data [, int level]) Compress a string (string)
gzdeflate(string data [, int level]) Deflate a string (string)
gzencode(string data [, int level [, int encoding_mode]]) Create a gzip compressed string (string)
gzeof(resource zp) Test for end-of-file on a gz-file pointer (int)
gzfile(string filename [, int use_include_path]) Read entire gz-file into an array (array)
gzgetc(resource zp) Get character from gz-file pointer (string)
gzgets(resource zp, int length) Get line from file pointer (string)
gzgetss(resource zp, int length [, string allowable_tags]) Get line from gz-file pointer and strip HTML tags (string)
gzinflate(string data [, int length]) Inflate a deflated string (string)
gzopen(string filename, string mode [, int use_include_path]) Open gz-file (resource)
gzpassthru(resource zp) Output all remaining data on a gz-file pointer (int)
gzputs(?) Alias for gzwrite() (?)
gzread(resource zp, int length) Binary-safe gz-file read (string)
gzrewind(resource zp) Rewind the position of a gz-file pointer (int)
gzseek(resource zp, int offset) Seek on a gz-file pointer (int)
gztell(resource zp) Tell gz-file pointer read/write position (int)
gzuncompress(string data [, int length]) Uncompress a deflated string (string)
gzwrite(resource zp, string string [, int length]) Binary-safe gz-file write (int)
header(string string [, bool replace [, int http_response_code]]) Send a raw HTTP header (int)
headers_sent([string &file [, int &line]]) Checks if or where headers have been sent (bool)
hebrev(string hebrew_text [, int max_chars_per_line]) Convert logical Hebrew text to visual text (string)
hebrevc(string hebrew_text [, int max_chars_per_line]) Convert logical Hebrew text to visual text with newline conversion (string)
hexdec(string hex_string) Hexadecimal to decimal (int)
highlight_file(string filename [, bool return]) Syntax highlighting of a file (mixed)
highlight_string(string str [, bool return]) Syntax highlighting of a string (mixed)
html_entity_decode(string string [, int quote_style [, string charset]]) Convert all HTML entities to their applicable characters (string)
htmlentities(string string [, int quote_style [, string charset]]) Convert all applicable characters to HTML entities (string)
htmlspecialchars(string string [, int quote_style [, string charset]]) Convert special characters to HTML entities (string)
hw_Array2Objrec(array object_array) convert attributes from object array to object record (string)
hw_Children(int connection, int objectID) object ids of children (array)
hw_ChildrenObj(int connection, int objectID) object records of children (array)
hw_Close(int connection) closes the Hyperwave connection (int)
hw_Connect(string host, int port, string username, string password) opens a connection (int)
hw_Deleteobject(int connection, int object_to_delete) deletes object (int)
hw_DocByAnchor(int connection, int anchorID) object id object belonging to anchor (int)
hw_DocByAnchorObj(int connection, int anchorID) object record object belonging to anchor (string)
hw_Document_Attributes(int hw_document) object record of hw_document (string)
hw_Document_BodyTag(int hw_document) body tag of hw_document (string)
hw_Document_Content(int hw_document) returns content of hw_document (string)
hw_Document_SetContent(int hw_document, string content) sets/replaces content of hw_document (string)
hw_Document_Size(int hw_document) size of hw_document (int)
hw_EditText(int connection, int hw_document) retrieve text document (int)
hw_Error(int connection) error number (int)
hw_ErrorMsg(int connection) returns error message (string)
hw_Free_Document(int hw_document) frees hw_document (int)
hw_GetAnchors(int connection, int objectID) object ids of anchors of document (array)
hw_GetAnchorsObj(int connection, int objectID) object records of anchors of document (array)
hw_GetAndLock(int connection, int objectID) return bject record and lock object (string)
hw_GetChildColl(int connection, int objectID) object ids of child collections (array)
hw_GetChildCollObj(int connection, int objectID) object records of child collections (array)
hw_GetChildDocColl(int connection, int objectID) object ids of child documents of collection (array)
hw_GetChildDocCollObj(int connection, int objectID) object records of child documents of collection (array)
hw_GetObject(?) object record (?)
hw_GetObjectByQuery(int connection, string query, int max_hits) search object (array)
hw_GetObjectByQueryColl(int connection, int objectID, string query, int max_hits) search object in collection (array)
hw_GetObjectByQueryCollObj(int connection, int objectID, string query, int max_hits) search object in collection (array)
hw_GetObjectByQueryObj(int connection, string query, int max_hits) search object (array)
hw_GetParents(int connection, int objectID) object ids of parents (array)
hw_GetParentsObj(int connection, int objectID) object records of parents (array)
hw_GetRemote(int connection, int objectID) Gets a remote document (int)
hw_GetSrcByDestObj(int connection, int objectID) Returns anchors pointing at object (array)
hw_GetText(int connection, int objectID [, mixed rootID/prefix]) retrieve text document (int)
hw_Identify(string username, string password) identifies as user (int)
hw_InCollections(int connection, array object_id_array, array collection_id_array, int return_collections) check if object ids in collections (array)
hw_Info(int connection) info about connection (string)
hw_InsColl(int connection, int objectID, array object_array) insert collection (int)
hw_InsDoc(int connection, int parentID, string object_record, string text) insert document (int)
hw_InsertDocument(int connection, int parent_id, int hw_document) upload any document (int)
hw_InsertObject(int connection, string object_rec, string parameter) inserts an object record (int)
hw_Modifyobject(int connection, int object_to_change, array remove, array add, int mode) modifies object record (int)
hw_New_Document(string object_record, string document_data, int document_size) create new document (int)
hw_Output_Document(int hw_document) prints hw_document (int)
hw_PipeDocument(int connection, int objectID) retrieve any document (int)
hw_Root() root object id (int)
hw_Unlock(int connection, int objectID) unlock object (int)
hw_Who(int connection) List of currently logged in users (int)
hw_api->checkin(array parameter) Checks in an object (object)
hw_api->checkout(array parameter) Checks out an object (object)
hw_api->children(array parameter) Returns children of an object (array)
hw_api->content(array parameter) Returns content of an object (object)
hw_api->copy(array parameter) Copies physically (object)
hw_api->dbstat(array parameter) Returns statistics about database server (object)
hw_api->dcstat(array parameter) Returns statistics about document cache server (object)
hw_api->dstanchors(array parameter) Returns a list of all destination anchors (object)
hw_api->dstofsrcanchors(array parameter) Returns destination of a source anchor (object)
hw_api->find(array parameter) Search for objects (array)
hw_api->ftstat(array parameter) Returns statistics about fulltext server (object)
hw_api->hwstat(array parameter) Returns statistics about Hyperwave server (object)
hw_api->identify(array parameter) Log into Hyperwave Server (object)
hw_api->info(array parameter) Returns information about server configuration (object)
hw_api->insert(array parameter) Inserts a new object (object)
hw_api->insertanchor(array parameter) Inserts a new object of type anchor (object)
hw_api->insertcollection(array parameter) Inserts a new object of type collection (object)
hw_api->insertdocument(array parameter) Inserts a new object of type document (object)
hw_api->link(array parameter) Creates a link to an object (object)
hw_api->lock(array parameter) Locks an object (object)
hw_api->move(array parameter) Moves object between collections (object)
hw_api->object(array parameter) Retrieve attribute information (object)
hw_api->objectbyanchor(array parameter) Returns the object an anchor belongs to (object)
hw_api->parents(array parameter) Returns parents of an object (array)
hw_api->remove(array parameter) Delete an object (object)
hw_api->replace(array parameter) Replaces an object (object)
hw_api->setcommitedversion(array parameter) Commits version other than last version (object)
hw_api->srcanchors(array parameter) Returns a list of all source anchors (object)
hw_api->srcsofdst(array parameter) Returns source of a destination object (object)
hw_api->unlock(array parameter) Unlocks a locked object (object)
hw_api->user(array parameter) Returns the own user object (object)
hw_api->userlist(array parameter) Returns a list of all logged in users (object)
hw_api_attribute([string name [, string value]]) Creates instance of class hw_api_attribute (object)
hw_api_attribute->key(void ) Returns key of the attribute (string)
hw_api_attribute->langdepvalue(string language) Returns value for a given language (string)
hw_api_attribute->value(void ) Returns value of the attribute (string)
hw_api_attribute->values(void ) Returns all values of the attribute (array)
hw_api_content(string content, string mimetype) Create new instance of class hw_api_content (string)
hw_api_content->mimetype(void ) Returns mimetype (string)
hw_api_content->read(string buffer, integer len) Read content (string)
hw_api_error->count(void ) Returns number of reasons (int)
hw_api_error->reason(void ) Returns reason of error (object)
hw_api_object(array parameter) Creates a new instance of class hw_api_object (object)
hw_api_object->assign(array parameter) Clones object (object)
hw_api_object->attreditable(array parameter) Checks whether an attribute is editable (bool)
hw_api_object->count(array parameter) Returns number of attributes (int)
hw_api_object->insert(object attribute) Inserts new attribute (bool)
hw_api_object->remove(string name) Removes attribute (bool)
hw_api_object->title(array parameter) Returns the title attribute (string)
hw_api_object->value(string name) Returns value of attribute (string)
hw_api_reason->description(void ) Returns description of reason (string)
hw_api_reason->type(void ) Returns type of reason (object)
hw_changeobject(int link, int objid, array attributes) Changes attributes of an object (obsolete) (void)
hw_connection_info(int link) Prints information about the connection to Hyperwave server (void)
hw_cp(int connection, array object_id_array, int destination_id) Copies objects (int)
hw_dummy(int link, int id, int msgid) Hyperwave dummy function (string)
hw_getrellink(int link, int rootid, int sourceid, int destid) Get link from source to dest relative to rootid (string)
hw_getremotechildren(int connection, string object_record) Gets children of remote document (int)
hw_getusername(int connection) name of currently logged in user (string)
hw_insertanchors(int hwdoc, array anchorecs, array dest [, array urlprefixes]) Inserts only anchors into text (string)
hw_mapid(int connection, int server_id, int object_id) Maps global id on virtual local id (int)
hw_mv(int connection, array object_id_array, int source_id, int destination_id) Moves objects (int)
hw_objrec2array(string object_record [, array format]) Convert attributes from object record to object array (array)
hw_pConnect(string host, int port, string username, string password) make a persistent database connection (int)
hw_setlinkroot(int link, int rootid) Set the id to which links are calculated (void)
hw_stat(int link) Returns status string (string)
hwapi_hgcsp(string hostname [, int port]) Returns object of class hw_api (object)
hypot(float num1, float num2) Returns sqrt( num1*num1 + num2*num2) (float)
ibase_blob_add(int blob_id, string data) Add data into created blob (int)
ibase_blob_cancel(int blob_id) Cancel creating blob (int)
ibase_blob_close(int blob_id) Close blob (int)
ibase_blob_create([int link_identifier]) Create blob for adding data (int)
ibase_blob_echo(string blob_id_str) Output blob contents to browser (int)
ibase_blob_get(int blob_id, int len) Get len bytes data from open blob (string)
ibase_blob_import([int link_identifier, int file_id]) Create blob, copy file in it, and close it (string)
ibase_blob_info(string blob_id_str) Return blob length and other useful info (object)
ibase_blob_open(string blob_id) Open blob for retrieving data parts (int)
ibase_close([int connection_id]) Close a connection to an InterBase database (int)
ibase_commit([int link_identifier, int trans_number]) Commit a transaction (int)
ibase_connect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]]) Open a connection to an InterBase database (int)
ibase_errmsg(void) Returns error messages (string)
ibase_execute(int query [, int bind_args]) Execute a previously prepared query (int)
ibase_fetch_object(int result_id) Get an object from a InterBase database (object)
ibase_fetch_row(int result_identifier) Fetch a row from an InterBase database (array)
ibase_field_info(int result, int field_number) Get information about a field (array)
ibase_free_query(int query) Free memory allocated by a prepared query (int)
ibase_free_result(int result_identifier) Free a result set (int)
ibase_num_fields(int result_id) Get the number of fields in a result set (int)
ibase_pconnect(string database [, string username [, string password [, string charset [, int buffers [, int dialect [, string role]]]]]]) Creates an persistent connection to an InterBase database (int)
ibase_prepare([int link_identifier, string query]) Prepare a query for later binding of parameter placeholders and execution (int)
ibase_query([int link_identifier, string query [, int bind_args]]) Execute a query on an InterBase database (int)
ibase_rollback([int link_identifier, int trans_number]) Rolls back a transaction (int)
ibase_timefmt(string format [, int columntype]) Sets the format of timestamp, date and time type columns returned from queries (int)
ibase_trans([int trans_args [, int link_identifier]]) Begin a transaction (int)
iconv(string in_charset, string out_charset, string str) Convert string to requested character encoding (string)
iconv_get_encoding([string type]) Get current setting for character encoding conversion (array)
iconv_set_encoding(string type, string charset) Set current setting for character encoding conversion (bool)
ifx_affected_rows(int result_id) Get number of rows affected by a query (int)
ifx_blobinfile_mode(int mode) Set the default blob mode for all select queries (void)
ifx_byteasvarchar(int mode) Set the default byte mode (void)
ifx_close([int link_identifier]) Close Informix connection (int)
ifx_connect([string database [, string userid [, string password]]]) Open Informix server connection (int)
ifx_copy_blob(int bid) Duplicates the given blob object (int)
ifx_create_blob(int type, int mode, string param) Creates an blob object (int)
ifx_create_char(string param) Creates an char object (int)
ifx_do(int result_id) Execute a previously prepared SQL-statement (int)
ifx_error(void) Returns error code of last Informix call (string)
ifx_errormsg([int errorcode]) Returns error message of last Informix call (string)
ifx_fetch_row(int result_id [, mixed position]) Get row as enumerated array (array)
ifx_fieldproperties(int result_id) List of SQL fieldproperties (array)
ifx_fieldtypes(int result_id) List of Informix SQL fields (array)
ifx_free_blob(int bid) Deletes the blob object (int)
ifx_free_char(int bid) Deletes the char object (int)
ifx_free_result(int result_id) Releases resources for the query (int)
ifx_get_blob(int bid) Return the content of a blob object (int)
ifx_get_char(int bid) Return the content of the char object (int)
ifx_getsqlca(int result_id) Get the contents of sqlca.sqlerrd[0..5] after a query (array)
ifx_htmltbl_result(int result_id [, string html_table_options]) Formats all rows of a query into a HTML table (int)
ifx_nullformat(int mode) Sets the default return value on a fetch row (void)
ifx_num_fields(int result_id) Returns the number of columns in the query (int)
ifx_num_rows(int result_id) Count the rows already fetched from a query (int)
ifx_pconnect([string database [, string userid [, string password]]]) Open persistent Informix connection (int)
ifx_prepare(string query, int conn_id [, int cursor_def, mixed blobidarray]) Prepare an SQL-statement for execution (int)
ifx_query(string query, int link_identifier [, int cursor_type [, mixed blobidarray]]) Send Informix query (int)
ifx_textasvarchar(int mode) Set the default text mode (void)
ifx_update_blob(int bid, string content) Updates the content of the blob object (bool)
ifx_update_char(int bid, string content) Updates the content of the char object (int)
ifxus_close_slob(int bid) Deletes the slob object (int)
ifxus_create_slob(int mode) Creates an slob object and opens it (int)
ifxus_free_slob(int bid) Deletes the slob object (int)
ifxus_open_slob(long bid, int mode) Opens an slob object (int)
ifxus_read_slob(long bid, long nbytes) Reads nbytes of the slob object (int)
ifxus_seek_slob(long bid, int mode, long offset) Sets the current file or seek position (int)
ifxus_tell_slob(long bid) Returns the current file or seek position (int)
ifxus_write_slob(long bid, string content) Writes a string into the slob object (int)
ignore_user_abort([int setting]) Set whether a client disconnect should abort script execution (int)
image2wbmp(resource image [, string filename [, int threshold]]) Output image to browser or file (int)
image_type_to_mime_type(int imagetype) Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype (string)
imagealphablending(resource image, bool blendmode) Set the blending mode for an image (int)
imagearc(resource image, int cx, int cy, int w, int h, int s, int e, int color) Draw a partial ellipse (int)
imagechar(resource image, int font, int x, int y, string c, int color) Draw a character horizontally (int)
imagecharup(resource image, int font, int x, int y, string c, int color) Draw a character vertically (int)
imagecolorallocate(resource image, int red, int green, int blue) Allocate a color for an image (int)
imagecolorallocatealpha(resource image, int red, int green, int blue, int alpha) Allocate a color for an image (int)
imagecolorat(resource image, int x, int y) Get the index of the color of a pixel (int)
imagecolorclosest(resource image, int red, int green, int blue) Get the index of the closest color to the specified color (int)
imagecolorclosestalpha(resource image, int red, int green, int blue, int alpha) Get the index of the closest color to the specified color + alpha (int)
imagecolorclosesthwb(resource image, int red, int green, int blue) Get the index of the color which has the hue, white and blackness nearest to the given color (int)
imagecolordeallocate(resource image, int color) De-allocate a color for an image (int)
imagecolorexact(resource image, int red, int green, int blue) Get the index of the specified color (int)
imagecolorexactalpha(resource image, int red, int green, int blue, int alpha) Get the index of the specified color + alpha (int)
imagecolorresolve(resource image, int red, int green, int blue) Get the index of the specified color or its closest possible alternative (int)
imagecolorresolvealpha(resource image, int red, int green, int blue, int alpha) Get the index of the specified color + alpha or its closest possible alternative (int)
imagecolorset(resource image, int index, int red, int green, int blue) Set the color for the specified palette index (bool)
imagecolorsforindex(resource image, int index) Get the colors for an index (array)
imagecolorstotal(resource image) Find out the number of colors in an image's palette (int)
imagecolortransparent(resource image [, int color]) Define a color as transparent (int)
imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h) Copy part of an image (int)
imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) Copy and merge part of an image (int)
imagecopymergegray(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct) Copy and merge part of an image with gray scale (int)
imagecopyresampled(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH) Copy and resize part of an image with resampling (int)
imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH) Copy and resize part of an image (int)
imagecreate(int x_size, int y_size) Create a new palette based image (resource)
imagecreatefromgd(string filename) Create a new image from GD file or URL (resource)
imagecreatefromgd2(string filename) Create a new image from GD2 file or URL (resource)
imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height) Create a new image from a given part of GD2 file or URL (resource)
imagecreatefromgif(string filename) Create a new image from file or URL (resource)
imagecreatefromjpeg(string filename) Create a new image from file or URL (resource)
imagecreatefrompng(string filename) Create a new image from file or URL (resource)
imagecreatefromstring(string image) Create a new image from the image stream in the string (resource)
imagecreatefromwbmp(string filename) Create a new image from file or URL (resource)
imagecreatefromxbm(string filename) Create a new image from file or URL (resource)
imagecreatefromxpm(string filename) Create a new image from file or URL (resource)
imagecreatetruecolor(int x_size, int y_size) Create a new true color image (resource)
imagedashedline(resource image, int x1, int y1, int x2, int y2, int color) Draw a dashed line (int)
imagedestroy(resource image) Destroy an image (int)
imageellipse(resource image, int cx, int cy, int w, int h, int color) Draw an ellipse (int)
imagefill(resource image, int x, int y, int color) Flood fill (int)
imagefilledarc(resource image, int cx, int cy, int w, int h, int s, int e, int color, int style) Draw a partial ellipse and fill it (int)
imagefilledellipse(resource image, int cx, int cy, int w, int h, int color) Draw a filled ellipse (int)
imagefilledpolygon(resource image, array points, int num_points, int color) Draw a filled polygon (int)
imagefilledrectangle(resource image, int x1, int y1, int x2, int y2, int color) Draw a filled rectangle (int)
imagefilltoborder(resource image, int x, int y, int border, int color) Flood fill to specific color (int)
imagefontheight(int font) Get font height (int)
imagefontwidth(int font) Get font width (int)
imageftbbox(int size, int angle, string font_file, string text [, array extrainfo]) Give the bounding box of a text using fonts via freetype2 (array)
imagefttext(resource image, int size, int angle, int x, int y, int col, string font_file, string text [, array extrainfo]) Write text to the image using fonts using FreeType 2 (array)
imagegammacorrect(resource image, float inputgamma, float outputgamma) Apply a gamma correction to a GD image (int)
imagegd(resource image [, string filename]) Output GD image to browser or file (int)
imagegd2(resource image [, string filename [, int chunk_size [, int type]]]) Output GD2 image (int)
imagegif(resource image [, string filename]) Output image to browser or file (int)
imageinterlace(resource image [, int interlace]) Enable or disable interlace (int)
imageistruecolorcreate(resource image) Finds whether an image is a truecolor image. (bool)
imagejpeg(resource image [, string filename [, int quality]]) Output image to browser or file (int)
imageline(resource image, int x1, int y1, int x2, int y2, int color) Draw a line (int)
imageloadfont(string file) Load a new font (int)
imagepalettecopy(resource destination, resource source) Copy the palette from one image to another (int)
imagepng(resource image [, string filename]) Output a PNG image to either the browser or a file (int)
imagepolygon(resource image, array points, int num_points, int color) Draw a polygon (int)
imagepsbbox(string text, int font, int size [, int space [, int tightness [, float angle]]]) Give the bounding box of a text rectangle using PostScript Type1 fonts (array)
imagepscopyfont(int fontindex) Make a copy of an already loaded font for further modification (int)
imagepsencodefont(int font_index, string encodingfile) Change the character encoding vector of a font (int)
imagepsextendfont(int font_index, float extend) Extend or condense a font (bool)
imagepsfreefont(int fontindex) Free memory used by a PostScript Type 1 font (void)
imagepsloadfont(string filename) Load a PostScript Type 1 font from file (int)
imagepsslantfont(int font_index, float slant) Slant a font (bool)
imagepstext(resource image, string text, int font, int size, int foreground, int background, int x, int y [, int space [, int tightness [, float angle [, int antialias_steps]]]]) To draw a text string over an image using PostScript Type1 fonts (array)
imagerectangle(resource image, int x1, int y1, int x2, int y2, int col) Draw a rectangle (int)
imagerotate(resource src_im, float angle, int bgd_color) Rotate an image with a given angle (ressource)
imagesavealpha(resource image, bool saveflag) Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images. (bool)
imagesetbrush(resource image, resource brush) Set the brush image for line drawing (int)
imagesetpixel(resource image, int x, int y, int color) Set a single pixel (int)
imagesetstyle(resource image, array style) Set the style for line drawing (int)
imagesetthickness(resource image, int thickness) Set the thickness for line drawing (void)
imagesettile(resource image, resource tile) Set the tile image for filling (int)
imagestring(resource image, int font, int x, int y, string s, int col) Draw a string horizontally (int)
imagestringup(resource image, int font, int x, int y, string s, int col) Draw a string vertically (int)
imagesx(resource image) Get image width (int)
imagesy(resource image) Get image height (int)
imagetruecolortopalette(resource image, bool dither, int ncolors) Convert a true color image to a palette image (void)
imagettfbbox(int size, int angle, string fontfile, string text) Give the bounding box of a text using TrueType fonts (array)
imagettftext(resource image, int size, int angle, int x, int y, int color, string fontfile, string text) Write text to the image using TrueType fonts (array)
imagetypes(void) Return the image types supported by this PHP build (int)
imagewbmp(resource image [, string filename [, int foreground]]) Output image to browser or file (int)
imap_8bit(string string) Convert an 8bit string to a quoted-printable string (string)
imap_alerts(void) This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset (array)
imap_append(resource imap_stream, string mbox, string message [, string options]) Append a string message to a specified mailbox (bool)
imap_base64(string text) Decode BASE64 encoded text (string)
imap_binary(string string) Convert an 8bit string to a base64 string (string)
imap_body(resource imap_stream, int msg_number [, int options]) Read the message body (string)
imap_bodystruct(resource stream_id, int msg_no, int section) Read the structure of a specified body section of a specific message (object)
imap_check(resource imap_stream) Check current mailbox (object)
imap_clearflag_full(resource stream, string sequence, string flag, string options) Clears flags on messages (bool)
imap_close(resource imap_stream [, int flag]) Close an IMAP stream (bool)
imap_createmailbox(resource imap_stream, string mbox) Create a new mailbox (bool)
imap_delete(int imap_stream, int msg_number [, int options]) Mark a messge for deletion from current mailbox (bool)
imap_deletemailbox(resource imap_stream, string mbox) Delete a mailbox (bool)
imap_errors(void) This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset. (array)
imap_expunge(resource imap_stream) Delete all messages marked for deletion (bool)
imap_fetch_overview(resource imap_stream, string sequence [, int options]) Read an overview of the information in the headers of the given message (array)
imap_fetchbody(resource imap_stream, int msg_number, string part_number [, flags options]) Fetch a particular section of the body of the message (string)
imap_fetchheader(resource imap_stream, int msgno, int options) Returns header for a message (string)
imap_fetchstructure(resource imap_stream, int msg_number [, int options]) Read the structure of a particular message (object)
imap_get_quota(resource imap_stream, string quota_root) Retrieve the quota level settings, and usage statics per mailbox (array)
imap_get_quotaroot(resource imap_stream, string quota_root) Retrieve the quota settings per user (array)
imap_getmailboxes(resource imap_stream, string ref, string pattern) Read the list of mailboxes, returning detailed information on each one (array)
imap_getsubscribed(resource imap_stream, string ref, string pattern) List all the subscribed mailboxes (array)
imap_header(?) Alias of imap_headerinfo() (?)
imap_headerinfo(resource imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost]]]) Read the header of the message (object)
imap_headers(resource imap_stream) Returns headers for all messages in a mailbox (array)
imap_last_error(void) This function returns the last IMAP error (if any) that occurred during this page request (string)
imap_list(resource imap_stream, string ref, string pattern) Read the list of mailboxes (array)
imap_listmailbox(?) Alias of imap_list() (?)
imap_listscan(resource imap_stream, string ref, string pattern, string content) Read the list of mailboxes, takes a string to search for in the text of the mailbox (array)
imap_listsubscribed(?) Alias of imap_lsub() (?)
imap_lsub(resource imap_stream, string ref, string pattern) List all the subscribed mailboxes (array)
imap_mail(string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]]) Send an email message (string)
imap_mail_compose(array envelope, array body) Create a MIME message based on given envelope and body sections (string)
imap_mail_copy(resource imap_stream, string msglist, string mbox [, int options]) Copy specified messages to a mailbox (bool)
imap_mail_move(resource imap_stream, string msglist, string mbox [, int options]) Move specified messages to a mailbox (bool)
imap_mailboxmsginfo(resource imap_stream) Get information about the current mailbox (object)
imap_mime_header_decode(string text) Decode MIME header elements (array)
imap_msgno(resource imap_stream, int uid) This function returns the message sequence number for the given UID (int)
imap_num_msg(resource imap_stream) Gives the number of messages in the current mailbox (int)
imap_num_recent(resource imap_stream) Gives the number of recent messages in current mailbox (int)
imap_open(string mailbox, string username, string password [, int options]) Open an IMAP stream to a mailbox (resource)
imap_ping(resource imap_stream) Check if the IMAP stream is still active (bool)
imap_qprint(string string) Convert a quoted-printable string to an 8 bit string (string)
imap_renamemailbox(resource imap_stream, string old_mbox, string new_mbox) Rename an old mailbox to new mailbox (bool)
imap_reopen(resource imap_stream, string mailbox [, string options]) Reopen IMAP stream to new mailbox (bool)
imap_rfc822_parse_adrlist(string address, string default_host) Parses an address string (array)
imap_rfc822_parse_headers(string headers [, string defaulthost]) Parse mail headers from a string (object)
imap_rfc822_write_address(string mailbox, string host, string personal) Returns a properly formatted email address given the mailbox, host, and personal info. (string)
imap_scanmailbox(?) Alias of imap_listscan() (?)
imap_search(resource imap_stream, string criteria, int options) This function returns an array of messages matching the given search criteria (array)
imap_set_quota(resource imap_stream, string quota_root, int quota_limit) Sets a quota for a given mailbox (bool)
imap_setacl(resource stream_id, string mailbox, string id, string rights) Sets the ACL for a giving mailbox (bool)
imap_setflag_full(resource stream, string sequence, string flag, string options) Sets flags on messages (bool)
imap_sort(resource stream, int criteria, int reverse [, int options [, string search_criteria]]) Sort an array of message headers (array)
imap_status(resource imap_stream, string mailbox, int options) This function returns status information on a mailbox other than the current one (object)
imap_subscribe(resource imap_stream, string mbox) Subscribe to a mailbox (bool)
imap_thread(resource stream_id [, int options]) Return threaded by REFERENCES tree (array)
imap_uid(resource imap_stream, int msgno) This function returns the UID for the given message sequence number (int)
imap_undelete(resource imap_stream, int msg_number) Unmark the message which is marked deleted (bool)
imap_unsubscribe(string imap_stream, string mbox) Unsubscribe from a mailbox (bool)
imap_utf7_decode(string text) Decodes a modified UTF-7 encoded string. (string)
imap_utf7_encode(string data) Converts ISO-8859-1 string to modified UTF-7 text. (string)
imap_utf8(string mime_encoded_text) Converts MIME-encoded text to UTF-8 (string)
implode(string glue, array pieces) Join array elements with a string (string)
import_request_variables(string types [, string prefix]) Import GET/POST/Cookie variables into the global scope (bool)
in_array(mixed needle, array haystack [, bool strict]) Return TRUE if a value exists in an array (bool)
ingres_autocommit([resource link]) Switch autocommit on or off (bool)
ingres_close([resource link]) Close an Ingres II database connection (bool)
ingres_commit([resource link]) Commit a transaction (bool)
ingres_connect([string database [, string username [, string password]]]) Open a connection to an Ingres II database (resource)
ingres_fetch_array([int result_type [, resource link]]) Fetch a row of result into an array (array)
ingres_fetch_object([int result_type [, resource link]]) Fetch a row of result into an object. (object)
ingres_fetch_row([resource link]) Fetch a row of result into an enumerated array (array)
ingres_field_length(int index [, resource link]) Get the length of a field (int)
ingres_field_name(int index [, resource link]) Get the name of a field in a query result. (string)
ingres_field_nullable(int index [, resource link]) Test if a field is nullable (bool)
ingres_field_precision(int index [, resource link]) Get the precision of a field (int)
ingres_field_scale(int index [, resource link]) Get the scale of a field (int)
ingres_field_type(int index [, resource link]) Get the type of a field in a query result (string)
ingres_num_fields([resource link]) Get the number of fields returned by the last query (int)
ingres_num_rows([resource link]) Get the number of rows affected or returned by the last query (int)
ingres_pconnect([string database [, string username [, string password]]]) Open a persistent connection to an Ingres II database (resource)
ingres_query(string query [, resource link]) Send a SQL query to Ingres II (bool)
ingres_rollback([resource link]) Roll back a transaction (bool)
ini_alter(?) Alias of ini_set() (?)
ini_get(string varname) Gets the value of a configuration option (string)
ini_get_all([string extension]) Gets all configuration options (array)
ini_restore(string varname) Restores the value of a configuration option (string)
ini_set(string varname, string newvalue) Sets the value of a configuration option (string)
intval(mixed var [, int base]) Get integer value of a variable (int)
ip2long(string ip_address) Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address. (int)
iptcembed(string iptcdata, string jpeg_file_name [, int spool]) Embed binary IPTC data into a JPEG image (array)
iptcparse(string iptcblock) Parse a binary IPTC http://www.iptc.org/ block into single tags. (array)
ircg_channel_mode(resource connection, string channel, string mode_spec, string nick) Set channel mode flags for user (bool)
ircg_disconnect(resource connection, string reason) Close connection to server (bool)
ircg_fetch_error_msg(resource connection) Returns the error from previous IRCG operation (array)
ircg_get_username(resource connection) Get username for connection (string)
ircg_html_encode(string html_string) Encodes HTML preserving output (bool)
ircg_ignore_add(resource connection, string nick) Add a user to your ignore list on a server (bool)
ircg_ignore_del(resource connection, string nick) Remove a user from your ignore list on a server (bool)
ircg_is_conn_alive(resource connection) Check connection status (bool)
ircg_join(resource connection, string channel [, string key]) Join a channel on a connected server (bool)
ircg_kick(resource connection, string channel, string nick, string reason) Kick a user out of a channel on server (bool)
ircg_lookup_format_messages(string name) Check for the existence of a format message set (bool)
ircg_msg(resource connection, string recipient, string message [, boolean suppress]) Send message to channel or user on server (bool)
ircg_nick(resource connection, string nick) Change nickname on server (bool)
ircg_nickname_escape(string nick) Encode special characters in nickname to be IRC-compliant (string)
ircg_nickname_unescape(string nick) Decodes encoded nickname (string)
ircg_notice(resource connection, string , string message) Send a notice to a user on server (bool)
ircg_part(resource connection, string channel) Leave a channel on server (bool)
ircg_pconnect(string username [, string server_ip [, int server_port [, string msg_format [, array ctcp_messages [, array user_settings]]]]]) Connect to an IRC server (resource)
ircg_register_format_messages(string name, array messages) Register a format message set (bool)
ircg_set_current(resource connection) Set current connection for output (bool)
ircg_set_file(resource connection, string path) Set logfile for connection (bool)
ircg_set_on_die(resource connection, string host, int port, string data) Set action to be executed when connection dies (bool)
ircg_topic(resource connection, string channel, string new_topic) Set topic for channel on server (bool)
ircg_whois(resource connection, string nick) Query server for user information (bool)
is_a(object object, string class_name) Returns TRUE if the object is of this class or has this class as one of its parents (bool)
is_array(mixed var) Finds whether a variable is an array (bool)
is_bool(mixed var) Finds out whether a variable is a boolean (bool)
is_callable(mixed var [, bool syntax_only [, string callable_name]]) Find out whether the argument is a valid callable construct (bool)
is_dir(string filename) Tells whether the filename is a directory (bool)
is_double(?) Alias of is_float() (?)
is_executable(string filename) Tells whether the filename is executable (bool)
is_file(string filename) Tells whether the filename is a regular file (bool)
is_finite(float val)  (bool)
is_float(mixed var) Finds whether a variable is a float (bool)
is_infinite(float val)  (bool)
is_int(mixed var) Find whether a variable is an integer (bool)
is_integer(?) Alias of is_int() (?)
is_link(string filename) Tells whether the filename is a symbolic link (bool)
is_long(?) Alias of is_int() (?)
is_nan(float val)  (bool)
is_null(mixed var) Finds whether a variable is NULL (bool)
is_numeric(mixed var) Finds whether a variable is a number or a numeric string (bool)
is_object(mixed var) Finds whether a variable is an object (bool)
is_readable(string filename) Tells whether the filename is readable (bool)
is_real(?) Alias of is_float() (?)
is_resource(mixed var) Finds whether a variable is a resource (bool)
is_scalar(mixed var) Finds whether a variable is a scalar (bool)
is_string(mixed var) Finds whether a variable is a string (bool)
is_subclass_of(object object, string class_name) Returns TRUE if the object has this class as one of its parents (bool)
is_uploaded_file(string filename) Tells whether the file was uploaded via HTTP POST (bool)
is_writable(string filename) Tells whether the filename is writable (bool)
is_writeable(?) Alias of is_writable() (?)
isset(mixed var [, mixed var [, ...]]) Determine whether a variable is set (bool)
java_last_exception_clear(void) Clear last Java exception (void)
java_last_exception_get(void) Get last Java exception (exception)
jdtounix(int jday) Convert Julian Day to UNIX timestamp (int)
join(?) Alias for implode() (?)
jpeg2wbmp(string jpegname, string wbmpname, int d_height, int d_width, int threshold) Convert JPEG image file to WBMP image file (int)
key(array array) Fetch a key from an associative array (mixed)
krsort(array array [, int sort_flags]) Sort an array by key in reverse order (int)
ksort(array array [, int sort_flags]) Sort an array by key (int)
lcg_value(void) Combined linear congruential generator (float)
ldap_8859_to_t61(string value) Translate 8859 characters to t61 characters (string)
ldap_add(resource link_identifier, string dn, array entry) Add entries to LDAP directory (bool)
ldap_bind(resource link_identifier [, string bind_rdn [, string bind_password]]) Bind to LDAP directory (bool)
ldap_close(resource link_identifier) Close link to LDAP server (bool)
ldap_compare(resource link_identifier, string dn, string attribute, string value) Compare value of attribute found in entry specified with DN (bool)
ldap_connect([string hostname [, int port]]) Connect to an LDAP server (resource)
ldap_count_entries(resource link_identifier, resource result_identifier) Count the number of entries in a search (int)
ldap_delete(resource link_identifier, string dn) Delete an entry from a directory (bool)
ldap_dn2ufn(string dn) Convert DN to User Friendly Naming format (string)
ldap_err2str(int errno) Convert LDAP error number into string error message (string)
ldap_errno(resource link_identifier) Return the LDAP error number of the last LDAP command (int)
ldap_error(resource link_identifier) Return the LDAP error message of the last LDAP command (string)
ldap_explode_dn(string dn, int with_attrib) Splits DN into its component parts (array)
ldap_first_attribute(resource link_identifier, resource result_entry_identifier, int ber_identifier) Return first attribute (string)
ldap_first_entry(resource link_identifier, resource result_identifier) Return first result id (resource)
ldap_first_reference(resource link, resource result) Return first reference (resource)
ldap_free_result(resource result_identifier) Free result memory (bool)
ldap_get_attributes(resource link_identifier, resource result_entry_identifier) Get attributes from a search result entry (array)
ldap_get_dn(resource link_identifier, resource result_entry_identifier) Get the DN of a result entry (string)
ldap_get_entries(resource link_identifier, resource result_identifier) Get all result entries (array)
ldap_get_option(resource link_identifier, int option, mixed retval) Get the current value for given option (bool)
ldap_get_values(resource link_identifier, resource result_entry_identifier, string attribute) Get all values from a result entry (array)
ldap_get_values_len(resource link_identifier, resource result_entry_identifier, string attribute) Get all binary values from a result entry (array)
ldap_list(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Single-level search (resource)
ldap_mod_add(resource link_identifier, string dn, array entry) Add attribute values to current attributes (bool)
ldap_mod_del(resource link_identifier, string dn, array entry) Delete attribute values from current attributes (bool)
ldap_mod_replace(resoure link_identifier, string dn, array entry) Replace attribute values with new ones (bool)
ldap_modify(resource link_identifier, string dn, array entry) Modify an LDAP entry (bool)
ldap_next_attribute(resource link_identifier, resource result_entry_identifier, resource ber_identifier) Get the next attribute in result (string)
ldap_next_entry(resource link_identifier, resource result_entry_identifier) Get next result entry (resource)
ldap_next_reference(resource link, resource entry) Get next reference (resource)
ldap_parse_reference(resource link, resource entry, array referrals) Extract information from reference entry (bool)
ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals) Extract information from result (bool)
ldap_read(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Read an entry (resource)
ldap_rename(resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn) Modify the name of an entry (bool)
ldap_search(resource link_identifier, string base_dn, string filter [, array attributes [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]]) Search LDAP tree (resource)
ldap_set_option(resource link_identifier, int option, mixed newval) Set the value of the given option (bool)
ldap_set_rebind_proc(resource link, string callback) Set a callback function to do re-binds on referral chasing. (bool)
ldap_sort(resource link, resource result, string sortfilter) Sort LDAP result entries (bool)
ldap_start_tls(resource link) Start TLS (bool)
ldap_t61_to_8859(string value) Translate t61 characters to 8859 characters (string)
ldap_unbind(resource link_identifier) Unbind from LDAP directory (bool)
levenshtein(string str1, string str2) Calculate Levenshtein distance between two strings (int)
link(string target, string link) Create a hard link (int)
linkinfo(string path) Gets information about a link (int)
list(mixed ...) Assign variables as if they were an array (void)
localeconv(void) Get numeric formatting information (array)
localtime([int timestamp [, bool is_associative]]) Get the local time (array)
log(float arg [, float base]) Natural logarithm (float)
log10(float arg) Base-10 logarithm (float)
log1p(float number) Returns log(1 + number), computed in a way that accurate even when the val ue of number is close to zero (float)
long2ip(int proper_address) Converts an (IPv4) Internet network address into a string in Internet standard dotted format (string)
lstat(string filename) Gives information about a file or symbolic link (array)
ltrim(string str [, string charlist]) Strip whitespace from the beginning of a string (string)
mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]]) send mail (bool)
mailparse_determine_best_xfer_encoding(resource fp) Figures out the best way of encoding the content read from the file pointer fp, which must be seek-able (int)
mailparse_msg_create(void) Returns a handle that can be used to parse a message (int)
mailparse_msg_extract_part(resource rfc2045, string msgbody [, string callbackfunc]) Extracts/decodes a message section.  If callbackfunc is not specified, the contents will be sent to "stdout" (void)
mailparse_msg_extract_part_file(resource rfc2045, string filename [, string callbackfunc]) Extracts/decodes a message section, decoding the transfer encoding (string)
mailparse_msg_free(resource rfc2045buf) Frees a handle allocated by mailparse_msg_crea (void)
mailparse_msg_get_part(resource rfc2045, string mimesection) Returns a handle on a given section in a mimemessage (int)
mailparse_msg_get_part_data(resource rfc2045) Returns an associative array of info about the message (array)
mailparse_msg_get_structure(resource rfc2045) Returns an array of mime section names in the supplied message (array)
mailparse_msg_parse(resource rfc2045buf, string data) Incrementally parse data into buffer (void)
mailparse_msg_parse_file(string filename) Parse file and return a resource representing the structure (resource)
mailparse_rfc822_parse_addresses(string addresses) Parse addresses and returns a hash containing that data (array)
mailparse_stream_encode(resource sourcefp, resource destfp, string encoding) Streams data from source file pointer, apply encoding and write to destfp (bool)
mailparse_uudecode_all(resource fp) Scans the data from fp and extract each embedded uuencoded file. Returns an array listing filename information (array)
main(?) Dummy for main() (?)
max(mixed arg1, mixed arg2, mixed argn) Find highest value (number)
mb_convert_case(string str, int mode [, string encoding]) Perform case folding on a string (string)
mb_convert_encoding(string str, string to-encoding [, mixed from-encoding]) Convert character encoding (string)
mb_convert_kana(string str, string option [, mixed encoding]) Convert "kana" one from another ("zen-kaku" ,"han-kaku" and more) (string)
mb_convert_variables(string to-encoding, mixed from-encoding, mixed vars) Convert character code in variable(s) (string)
mb_decode_mimeheader(string str) Decode string in MIME header field (string)
mb_decode_numericentity(string str, array convmap [, string encoding]) Decode HTML numeric string reference to character (string)
mb_detect_encoding(string str [, mixed encoding-list]) Detect character encoding (string)
mb_detect_order([mixed encoding-list]) Set/Get character encoding detection order (array)
mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]]) Encode string for MIME header (string)
mb_encode_numericentity(string str, array convmap [, string encoding]) Encode character to HTML numeric string reference (string)
mb_ereg(string pattern, string string [, array regs]) Regular expression match with multibyte support (int)
mb_ereg_match(string pattern, string string [, string option]) Regular expression match for multibyte string (bool)
mb_ereg_replace(string pattern, string replacement, string string [, array option]) Replace regular expression with multibyte support (string)
mb_ereg_search([string pattern [, string option]]) Multibyte regular expression match for predefined multibyte string (bool)
mb_ereg_search_getpos(void) Returns start point for next regular expression match (array)
mb_ereg_search_getregs(void) Retrive the result from the last multibyte regular expression match (array)
mb_ereg_search_init(string string [, string pattern [, string option]]) Setup string and regular expression for multibyte regular expression match (array)
mb_ereg_search_pos([string pattern [, string option]]) Return position and length of matched part of multibyte regular expression for predefined multibyte string (array)
mb_ereg_search_regs([string pattern [, string option]]) Returns the matched part of multibyte regular expression (array)
mb_ereg_search_setpos(void) Set start point of next regular expression match (array)
mb_eregi(string pattern, string string [, array regs]) Regular expression match ignoring case with multibyte support (int)
mb_eregi_replace(string pattern, string replace, string string) Replace regular expression with multibyte support ignoring case (string)
mb_get_info([string type]) Get internal settings of mbstring (string)
mb_http_input([string type]) Detect HTTP input character encoding (string)
mb_http_output([string encoding]) Set/Get HTTP output character encoding (string)
mb_internal_encoding([string encoding]) Set/Get internal character encoding (string)
mb_language([string language]) Set/Get current language (string)
mb_output_handler(string contents, int status) Callback function converts character encoding in output buffer (string)
mb_parse_str(string encoded_string [, array result]) Parse GET/POST/COOKIE data and set global variable (bool)
mb_preferred_mime_name(string encoding) Get MIME charset string (string)
mb_regex_encoding([string encoding]) Returns current encoding for multibyte regex as string (string)
mb_regex_set_options([string options]) Set/Get the default options for mbregex functions (string)
mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameter]]) Send encoded mail. (bool)
mb_split(string pattern, string string [, int limit]) Split multibyte string using regular expression (array)
mb_strcut(string str, int start [, int length [, string encoding]]) Get part of string (string)
mb_strimwidth(string str, int start, int width, string trimmarker [, string encoding]) Get truncated string with specified width (string)
mb_strlen(string str [, string encoding]) Get string length (string)
mb_strpos(string haystack, string needle [, int offset [, string encoding]]) Find position of first occurrence of string in a string (int)
mb_strrpos(string haystack, string needle [, string encoding]) Find position of last occurrence of a string in a string (int)
mb_strtolower(string str [, string encoding]) Make a string lowercase (string)
mb_strtoupper(string str [, string encoding]) Make a string uppercase (string)
mb_strwidth(string str [, string encoding]) Return width of string (int)
mb_substitute_character([mixed substrchar]) Set/Get substitution character (mixed)
mb_substr(string str, int start [, int length [, string encoding]]) Get part of string (string)
mb_substr_count(string haystack, string needle [, string encoding]) Count the number of substring occurrences (int)
mcal_append_event(int mcal_stream) Store a new event into an MCAL calendar (int)
mcal_close(int mcal_stream, int flags) Close an MCAL stream (int)
mcal_create_calendar(int stream, string calendar) Create a new MCAL calendar (string)
mcal_date_compare(int a_year, int a_month, int a_day, int b_year, int b_month, int b_day) Compares two dates (int)
mcal_date_valid(int year, int month, int day) Returns TRUE if the given year, month, day is a valid date (int)
mcal_day_of_week(int year, int month, int day) Returns the day of the week of the given date (int)
mcal_day_of_year(int year, int month, int day) Returns the day of the year of the given date (int)
mcal_days_in_month(int month, int leap_year) Returns the number of days in a month (int)
mcal_delete_calendar(int stream, string calendar) Delete an MCAL calendar (string)
mcal_delete_event(int mcal_stream [, int event_id]) Delete an event from an MCAL calendar (int)
mcal_event_add_attribute(int stream, string attribute, string value) Adds an attribute and a value to the streams global event structure (void)
mcal_event_init(int stream) Initializes a streams global event structure (int)
mcal_event_set_alarm(int stream, int alarm) Sets the alarm of the streams global event structure (int)
mcal_event_set_category(int stream, string category) Sets the category of the streams global event structure (int)
mcal_event_set_class(int stream, int class) Sets the class of the streams global event structure (int)
mcal_event_set_description(int stream, string description) Sets the description of the streams global event structure (int)
mcal_event_set_end(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]]) Sets the end date and time of the streams global event structure (int)
mcal_event_set_recur_daily(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure (int)
mcal_event_set_recur_monthly_mday(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure (int)
mcal_event_set_recur_monthly_wday(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure (int)
mcal_event_set_recur_none(int stream) Sets the recurrence of the streams global event structure (int)
mcal_event_set_recur_weekly(int stream, int year, int month, int day, int interval, int weekdays) Sets the recurrence of the streams global event structure (int)
mcal_event_set_recur_yearly(int stream, int year, int month, int day, int interval) Sets the recurrence of the streams global event structure (int)
mcal_event_set_start(int stream, int year, int month [, int day [, int hour [, int min [, int sec]]]]) Sets the start date and time of the streams global event structure (int)
mcal_event_set_title(int stream, string title) Sets the title of the streams global event structure (int)
mcal_expunge(int stream) Deletes all events marked for being expunged. (int)
mcal_fetch_current_stream_event(int stream) Returns an object containing the current streams event structure (object)
mcal_fetch_event(int mcal_stream, int event_id [, int options]) Fetches an event from the calendar stream (object)
mcal_is_leap_year(int year) Returns if the given year is a leap year or not (int)
mcal_list_alarms(int mcal_stream [, int begin_year [, int begin_month [, int begin_day [, int end_year [, int end_month [, int end_day]]]]]]) Return a list of events that has an alarm triggered at the given datetime (array)
mcal_list_events(int mcal_stream, object begin_date [, object end_date]) Return a list of IDs for a date or a range of dates (array)
mcal_next_recurrence(int stream, int weekstart, array next) Returns the next recurrence of the event (int)
mcal_open(string calendar, string username, string password [, int options]) Opens up an MCAL connection (int)
mcal_popen(string calendar, string username, string password [, int options]) Opens up a persistent MCAL connection (int)
mcal_rename_calendar(int stream, string old_name, string new_name) Rename an MCAL calendar (string)
mcal_reopen(string calendar [, int options]) Reopens an MCAL connection (int)
mcal_snooze(int id) Turn off an alarm for an event (int)
mcal_store_event(int mcal_stream) Modify an existing event in an MCAL calendar (int)
mcal_time_valid(int hour, int minutes, int seconds) Returns TRUE if the given year, month, day is a valid time (int)
mcal_week_of_year(int day, int month, int year) Returns the week number of the given date (int)
mcrypt_cbc(int cipher, string key, string data, int mode [, string iv]) Encrypt/decrypt data in CBC mode (string)
mcrypt_cfb(int cipher, string key, string data, int mode, string iv) Encrypt/decrypt data in CFB mode (string)
mcrypt_create_iv(int size, int source) Create an initialization vector (IV) from a random source (string)
mcrypt_decrypt(string cipher, string key, string data, string mode [, string iv]) Decrypts crypttext with given parameters (string)
mcrypt_ecb(int cipher, string key, string data, int mode) Encrypt/decrypt data in ECB mode (string)
mcrypt_enc_get_algorithms_name(resource td) Returns the name of the opened algorithm (string)
mcrypt_enc_get_block_size(resource td) Returns the blocksize of the opened algorithm (int)
mcrypt_enc_get_iv_size(resource td) Returns the size of the IV of the opened algorithm (int)
mcrypt_enc_get_key_size(resource td) Returns the maximum supported keysize of the opened mode (int)
mcrypt_enc_get_modes_name(resource td) Returns the name of the opened mode (string)
mcrypt_enc_get_supported_key_sizes(resource td) Returns an array with the supported keysizes of the opened algorithm (array)
mcrypt_enc_is_block_algorithm(resource td) Checks whether the algorithm of the opened mode is a block algorithm (bool)
mcrypt_enc_is_block_algorithm_mode(resource td) Checks whether the encryption of the opened mode works on blocks (bool)
mcrypt_enc_is_block_mode(resource td) Checks whether the opened mode outputs blocks (bool)
mcrypt_enc_self_test(resource td) This function runs a self test on the opened module (bool)
mcrypt_encrypt(string cipher, string key, string data, string mode [, string iv]) Encrypts plaintext with given parameters (string)
mcrypt_generic(resource td, string data) This function encrypts data (string)
mcrypt_generic_deinit(resource td) This function deinitializes an encryption module (bool)
mcrypt_generic_end(resource td) This function terminates encryption (bool)
mcrypt_generic_init(resource td, string key, string iv) This function initializes all buffers needed for encryption (int)
mcrypt_get_block_size(int cipher) Get the block size of the specified cipher (int)
mcrypt_get_cipher_name(int cipher) Get the name of the specified cipher (string)
mcrypt_get_iv_size(resource td) Returns the size of the IV belonging to a specific cipher/mode combination (int)
mcrypt_get_key_size(int cipher) Get the key size of the specified cipher (int)
mcrypt_list_algorithms([string lib_dir]) Get an array of all supported ciphers (array)
mcrypt_list_modes([string lib_dir]) Get an array of all supported modes (array)
mcrypt_module_close(resource td) Close the mcrypt module (bool)
mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir]) Returns the blocksize of the specified algorithm (int)
mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir]) Returns the maximum supported keysize of the opened mode (int)
mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir]) Returns an array with the supported keysizes of the opened algorithm (array)
mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir]) This function checks whether the specified algorithm is a block algorithm (bool)
mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir]) This function returns if the the specified module is a block algorithm or not (bool)
mcrypt_module_is_block_mode(string mode [, string lib_dir]) This function returns if the the specified mode outputs blocks or not (bool)
mcrypt_module_open(string algorithm, string algorithm_directory, string mode, string mode_directory) Opens the module of the algorithm and the mode to be used (resource)
mcrypt_module_self_test(string algorithm [, string lib_dir]) This function runs a self test on the specified module (bool)
mcrypt_ofb(int cipher, string key, string data, int mode, string iv) Encrypt/decrypt data in OFB mode (string)
mcve_adduser(resource conn, string admin_password, int usersetup) Add an MCVE user using usersetup structure (int)
mcve_adduserarg(resource usersetup, int argtype, string argval) Add a value to user configuration structure (int)
mcve_bt(resource conn, string username, string password) Get unsettled batch totals (int)
mcve_checkstatus(resource conn, int identifier) Check to see if a transaction has completed (int)
mcve_chkpwd(resource conn, string username, string password) Verify Password (int)
mcve_chngpwd(resource conn, string admin_password, string new_password) Change the system administrator's password (int)
mcve_completeauthorizations(resource conn, int &array) Number of complete authorizations in queue, returning an array of their identifiers (int)
mcve_connect(resource conn) Establish the connection to MCVE (int)
mcve_connectionerror(resource conn) Get a textual representation of why a connection failed (string)
mcve_deleteresponse(resource conn, int identifier) Delete specified transaction from MCVE_CONN structure (bool)
mcve_deletetrans(resource conn, int identifier) Delete specified transaction from MCVE_CONN structure (bool)
mcve_deleteusersetup(resource usersetup) Deallocate data associated with usersetup structure (void)
mcve_deluser(resource conn, string admin_password, string username) Delete an MCVE user account (int)
mcve_destroyconn(resource conn) Destroy the connection and MCVE_CONN structure (void)
mcve_destroyengine(void) Free memory associated with IP/SSL connectivity (void)
mcve_disableuser(resource conn, string admin_password, string username) Disable an active MCVE user account (int)
mcve_edituser(resource conn, string admin_password, int usersetup) Edit MCVE user using usersetup structure (int)
mcve_enableuser(resource conn, string admin_password, string username) Enable an inactive MCVE user account (int)
mcve_force(resiurce conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum) Send a FORCE to MCVE. (typically, a phone-authorization) (int)
mcve_getcell(resource conn, int identifier, string column, int row) Get a specific cell from a comma delimited response by column name (string)
mcve_getcellbynum(resource conn, int identifier, int column, int row) Get a specific cell from a comma delimited response by column number (string)
mcve_getcommadelimited(resource conn, int identifier) Get the RAW comma delimited data returned from MCVE (string)
mcve_getheader(resource conn, int identifier, int column_num) Get the name of the column in a comma-delimited response (string)
mcve_getuserarg(resource usersetup, int argtype) Grab a value from usersetup structure (string)
mcve_getuserparam(resource conn, long identifier, int key) Get a user response parameter (string)
mcve_gft(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate) Audit MCVE for Failed transactions (int)
mcve_gl(int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate) Audit MCVE for settled transactions (int)
mcve_gut(resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate) Audit MCVE for Unsettled Transactions (int)
mcve_initconn(void) Create and initialize an MCVE_CONN structure (resource)
mcve_initengine(string location) Ready the client for IP/SSL Communication (int)
mcve_initusersetup(void) Initialize structure to store user data (resource)
mcve_iscommadelimited(resource conn, int identifier) Checks to see if response is comma delimited (int)
mcve_liststats(resource conn, string admin_password) List statistics for all users on MCVE system (int)
mcve_listusers(resource conn, string admin_password) List all users on MCVE system (int)
mcve_maxconntimeout(resource conn, int secs) The maximum amount of time the API will attempt a connection to MCVE (bool)
mcve_monitor(resource conn) Perform communication with MCVE (send/receive data) Non-blocking (int)
mcve_numcolumns(resource conn, int identifier) Number of columns returned in a comma delimited response (int)
mcve_numrows(resource conn, int identifier) Number of rows returned in a comma delimited response (int)
mcve_override(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum) Send an OVERRIDE to MCVE (int)
mcve_parsecommadelimited(resource conn, int identifier) Parse the comma delimited response so mcve_getcell, etc will work (int)
mcve_ping(resource conn) Send a ping request to MCVE (int)
mcve_preauth(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum) Send a PREAUTHORIZATION to MCVE (int)
mcve_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum) Complete a PREAUTHORIZATION... Ready it for settlement (int)
mcve_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum) Audit MCVE for a list of transactions in the outgoing queue (int)
mcve_responseparam(resource conn, long identifier, string key) Get a custom response parameter (string)
mcve_return(int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum) Issue a RETURN or CREDIT to MCVE (int)
mcve_returncode(resource conn, int identifier) Grab the exact return code from the transaction (int)
mcve_returnstatus(resource conn, int identifier) Check to see if the transaction was successful (int)
mcve_sale(resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum) Send a SALE to MCVE (int)
mcve_setblocking(resource conn, int tf) Set blocking/non-blocking mode for connection (int)
mcve_setdropfile(resource conn, string directory) Set the connection method to Drop-File (int)
mcve_setip(resource conn, string host, int port) Set the connection method to IP (int)
mcve_setssl(resource conn, string host, int port) Set the connection method to SSL (int)
mcve_settimeout(resource conn, int seconds) Set maximum transaction time (per trans) (int)
mcve_settle(resource conn, string username, string password, string batch) Issue a settlement command to do a batch deposit (int)
mcve_text_avs(string code) Get a textual representation of the return_avs (string)
mcve_text_code(string code) Get a textual representation of the return_code (string)
mcve_text_cv(int code) Get a textual representation of the return_cv (string)
mcve_transactionauth(resource conn, int identifier) Get the authorization number returned for the transaction (alpha-numeric) (string)
mcve_transactionavs(resource conn, int identifier) Get the Address Verification return status (int)
mcve_transactionbatch(resource conn, int identifier) Get the batch number associated with the transaction (int)
mcve_transactioncv(resource conn, int identifier) Get the CVC2/CVV2/CID return status (int)
mcve_transactionid(resource conn, int identifier) Get the unique system id for the transaction (int)
mcve_transactionitem(resource conn, int identifier) Get the ITEM number in the associated batch for this transaction (int)
mcve_transactionssent(resource conn) Check to see if outgoing buffer is clear (int)
mcve_transactiontext(resource conn, int identifier) Get verbiage (text) return from MCVE or processing institution (string)
mcve_transinqueue(resource conn) Number of transactions in client-queue (int)
mcve_transnew(resource conn) Start a new transaction (int)
mcve_transparam(resource conn, long identifier, int key) Add a parameter to a transaction (int)
mcve_transsend(resource conn, long identifier) Finalize and send the transaction (int)
mcve_ub(resource conn, string username, string password) Get a list of all Unsettled batches (int)
mcve_uwait(long microsecs) Wait x microsecs (int)
mcve_verifyconnection(resource conn, int tf) Set whether or not to PING upon connect to verify connection (bool)
mcve_verifysslcert(resource conn, int tf) Set whether or not to verify the server ssl certificate (bool)
mcve_void(resource conn, string username, string password, int sid, int ptrannum) VOID a transaction in the settlement queue (int)
md5(string str [, bool raw_output]) Calculate the md5 hash of a string (string)
md5_file(string filename [, bool raw_output]) Calculates the md5 hash of a given filename (string)
mdecrypt_generic(resource td, string data) Decrypt data (string)
metaphone(string str) Calculate the metaphone key of a string (string)
method_exists(object object, string method_name) Checks if the class method exists (bool)
mhash(int hash, string data [, string key]) Compute hash (string)
mhash_count(void) Get the highest available hash id (int)
mhash_get_block_size(int hash) Get the block size of the specified hash (int)
mhash_get_hash_name(int hash) Get the name of the specified hash (string)
mhash_keygen_s2k(int hash, string password, string salt, int bytes) Generates a key (string)
microtime(void) Return current UNIX timestamp with microseconds (string)
mime_content_type(string filename) Detect MIME Content-type for a file (string)
min(number arg1, number arg2 [, ...]) Find lowest value (number)
ming_setcubicthreshold(int threshold) Set cubic threshold (?) (void)
ming_setscale(int scale) Set scale (?) (void)
ming_useswfversion(int version) Use SWF version (?) (void)
mkdir(string pathname [, int mode]) Makes directory (int)
mktime([int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]]) Get UNIX timestamp for a date (int)
money_format(string format, float number) Formats a number as a currency string (string)
move_uploaded_file(string filename, string destination) Moves an uploaded file to a new location (bool)
msession_connect(string host, string port) Connect to msession server (bool)
msession_count(void) Get session count (int)
msession_create(string session) Create a session (bool)
msession_destroy(string name) Destroy a session (bool)
msession_disconnect(void) Close connection to msession server (void)
msession_find(string name, string value) Find value (array)
msession_get(string session, string name, string value) Get value from session (string)
msession_get_array(string session) Get array of ... ? (array)
msession_getdata(string session) Get data ... ? (string)
msession_inc(string session, string name) Increment value in session (string)
msession_list(void) List ... ? (array)
msession_listvar(string name) List sessions with variable (array)
msession_lock(string name) Lock a session (int)
msession_plugin(string session, string val [, string param]) Call an escape function within the msession personality plugin (string)
msession_randstr(int param) Get random string (string)
msession_set(string session, string name, string value) Set value in session (bool)
msession_set_array(string session, array tuples) Set array of ... (bool)
msession_setdata(string session, string value) Set data  ... ? (bool)
msession_timeout(string session [, int param]) Set/get session timeout (int)
msession_uniq(int param) Get uniq id (string)
msession_unlock(string session, int key) Unlock a session (int)
msg_get_queue(int key [, int perms]) Create or attach to a message queue (int)
msg_receive(int queue, int desiredmsgtype, int msgtype, int maxsize, mixed message [, bool unserialize [, int flags [, int errorcode]]]) Receive a message from a message queue (bool)
msg_remove_queue(int queue) Destroy a message queue (bool)
msg_send(int queue, int msgtype, mixed message [, bool serialize [, bool blocking [, int errorcode]]]) Send a message to a message queue (bool)
msg_set_queue(int queue, array data) Set information in the message queue data structure (bool)
msg_stat_queue(int queue) Returns information from the message queue data structure (array)
msql(string database, string query, int link_identifier) Send mSQL query (int)
msql_affected_rows(int query_identifier) Returns number of affected rows (int)
msql_close(int link_identifier) Close mSQL connection (int)
msql_connect([string hostname [, string server [, string username [, string password]]]]) Open mSQL connection (int)
msql_create_db(string database_name [, int link_identifier]) Create mSQL database (int)
msql_createdb(string database name [, int link_identifier]) Create mSQL database (int)
msql_data_seek(int query_identifier, int row_number) Move internal row pointer (int)
msql_dbname(int query_identifier, int i) Get current mSQL database name (string)
msql_drop_db(string database_name, int link_identifier) Drop (delete) mSQL database (int)
msql_dropdb(?) Drop (delete) mSQL database (?)
msql_error([int link_identifier]) Returns error message of last msql call (string)
msql_fetch_array(int query_identifier [, int result_type]) Fetch row as array (int)
msql_fetch_field(int query_identifier, int field_offset) Get field information (object)
msql_fetch_object(int query_identifier [, int result_type]) Fetch row as object (int)
msql_fetch_row(int query_identifier) Get row as enumerated array (array)
msql_field_seek(int query_identifier, int field_offset) Set field offset (int)
msql_fieldflags(int query_identifier, int i) Get field flags (string)
msql_fieldlen(int query_identifier, int i) Get field length (int)
msql_fieldname(int query_identifier, int field) Get field name (string)
msql_fieldtable(int query_identifier, int field) Get table name for field (int)
msql_fieldtype(int query_identifier, int i) Get field type (string)
msql_free_result(int query_identifier) Free result memory (int)
msql_freeresult(?) Free result memory (?)
msql_list_dbs(void) List mSQL databases on server (int)
msql_list_fields(string database, string tablename) List result fields (int)
msql_list_tables(string database) List tables in an mSQL database (int)
msql_listdbs(?) List mSQL databases on server (?)
msql_listfields(?) List result fields (?)
msql_listtables(?) List tables in an mSQL database (?)
msql_num_fields(int query_identifier) Get number of fields in result (int)
msql_num_rows(int query_identifier) Get number of rows in result (int)
msql_numfields(int query_identifier) Get number of fields in result (int)
msql_numrows(void) Get number of rows in result (int)
msql_pconnect([string server [, string username [, string password]]]) Open persistent mSQL connection (int)
msql_query(string query, int link_identifier) Send mSQL query (int)
msql_regcase(?) Make regular expression for case insensitive match (?)
msql_result(int query_identifier, int i, mixed field) Get result data (int)
msql_select_db(string database_name, int link_identifier) Select mSQL database (int)
msql_selectdb(?) Select mSQL database (?)
msql_tablename(int query_identifier, int field) Get table name of field (string)
mssql_bind(int stmt, string param_name, mixed var, int type [, int is_output [, int is_null [, int maxlen]]]) Adds a parameter to a stored procedure or a remote stored procedure (int)
mssql_close([int link_identifier]) Close MS SQL Server connection (int)
mssql_connect([string servername [, string username [, string password]]]) Open MS SQL server connection (int)
mssql_data_seek(int result_identifier, int row_number) Move internal row pointer (int)
mssql_execute(int stmt) Executes a stored procedure on a MS SQL server database (int)
mssql_fetch_array(int result) Fetch row as array (array)
mssql_fetch_assoc(int result_id [, int result_type]) Returns an associative array of the current row in the result set specified by result_id (array)
mssql_fetch_batch(string result_index) Returns the next batch of records (int)
mssql_fetch_field(int result [, int field_offset]) Get field information (object)
mssql_fetch_object(int result) Fetch row as object (object)
mssql_fetch_row(int result) Get row as enumerated array (array)
mssql_field_length(int result [, int offset]) Get the length of a field (int)
mssql_field_name(int result [, int offset]) Get the name of a field (int)
mssql_field_seek(int result, int field_offset) Set field offset (int)
mssql_field_type(int result [, int offset]) Get the type of a field (string)
mssql_free_result(int result) Free result memory (int)
mssql_free_statement(int statement) Free statement memory (int)
mssql_get_last_message(void) Returns the last message from server (over min_message_severity?) (string)
mssql_guid_string(string binary [, int short_format]) Converts a 16 byte binary GUID to a string (string)
mssql_init(string sp_name [, int conn_id]) Initializes a stored procedure or a remote stored procedure (int)
mssql_min_error_severity(int severity) Sets the lower error severity (void)
mssql_min_message_severity(int severity) Sets the lower message severity (void)
mssql_next_result(int result_id) Move the internal result pointer to the next result (bool)
mssql_num_fields(int result) Get number of fields in result (int)
mssql_num_rows(string result) Get number of rows in result (int)
mssql_pconnect([string servername [, string username [, string password]]]) Open persistent MS SQL connection (int)
mssql_query(string query [, int link_identifier]) Send MS SQL query (int)
mssql_result(int result, int i, mixed field) Get result data (int)
mssql_rows_affected(int conn_id) Returns the number of records affected by the query (int)
mssql_select_db(string database_name [, int link_identifier]) Select MS SQL database (int)
mt_getrandmax(void) Show largest possible random value (int)
mt_rand([int min, int max]) Generate a better random value (int)
mt_srand(int seed) Seed the better random number generator (void)
muscat_close(resource muscat_handle) Shuts down the muscat session and releases any memory back to PHP. (int)
muscat_get(resource muscat_handle) Gets a line back from the core muscat API. (string)
muscat_give(resource muscat_handle, string string) Sends string to the core muscat API (int)
muscat_setup(int size [, string muscat_dir]) Creates a new muscat session and returns the handle. (resource)
muscat_setup_net(string muscat_host, int port) Creates a new muscat session and returns the handle. (resource)
mysql_affected_rows([resource link_identifier]) Get number of affected rows in previous MySQL operation (int)
mysql_change_user(string user, string password [, string database [, resource link_identifier]]) Change logged in user of the active connection (int)
mysql_client_encoding([resource link_identifier]) Returns the name of the character set (int)
mysql_close([resource link_identifier]) Close MySQL connection (bool)
mysql_connect([string server [, string username [, string password [, bool new_link [, int client_flags]]]]]) Open a connection to a MySQL Server (resource)
mysql_create_db(string database name [, resource link_identifier]) Create a MySQL database (bool)
mysql_data_seek(resource result_identifier, int row_number) Move internal result pointer (bool)
mysql_db_name(resource result, int row [, mixed field]) Get result data (string)
mysql_db_query(string database, string query [, resource link_identifier]) Send a MySQL query (resource)
mysql_drop_db(string database_name [, resource link_identifier]) Drop (delete) a MySQL database (bool)
mysql_errno([resource link_identifier]) Returns the numerical value of the error message from previous MySQL operation (int)
mysql_error([resource link_identifier]) Returns the text of the error message from previous MySQL operation (string)
mysql_escape_string(string unescaped_string) Escapes a string for use in a mysql_query. (string)
mysql_fetch_array(resource result [, int result_type]) Fetch a result row as an associative array, a numeric array, or both. (array)
mysql_fetch_assoc(resource result) Fetch a result row as an associative array (array)
mysql_fetch_field(resource result [, int field_offset]) Get column information from a result and return as an object (object)
mysql_fetch_lengths(resource result) Get the length of each output in a result (array)
mysql_fetch_object(resource result) Fetch a result row as an object (object)
mysql_fetch_row(resource result) Get a result row as an enumerated array (array)
mysql_field_flags(resource result, int field_offset) Get the flags associated with the specified field in a result (string)
mysql_field_len(resource result, int field_offset) Returns the length of the specified field (int)
mysql_field_name(resource result, int field_index) Get the name of the specified field in a result (string)
mysql_field_seek(resource result, int field_offset) Set result pointer to a specified field offset (int)
mysql_field_table(resource result, int field_offset) Get name of the table the specified field is in (string)
mysql_field_type(resource result, int field_offset) Get the type of the specified field in a result (string)
mysql_free_result(resource result) Free result memory (bool)
mysql_get_client_info(void) Get MySQL client info (string)
mysql_get_host_info([resource link_identifier]) Get MySQL host info (string)
mysql_get_proto_info([resource link_identifier]) Get MySQL protocol info (int)
mysql_get_server_info([resource link_identifier]) Get MySQL server info (string)
mysql_info([resource link_identifier]) Get information about the most recent query (string)
mysql_insert_id([resource link_identifier]) Get the ID generated from the previous INSERT operation (int)
mysql_list_dbs([resource link_identifier]) List databases available on a MySQL server (resource)
mysql_list_fields(string database_name, string table_name [, resource link_identifier]) List MySQL result fields (resource)
mysql_list_processes([resource link_identifier]) List MySQL processes (resource)
mysql_list_tables(string database [, resource link_identifier]) List tables in a MySQL database (resource)
mysql_num_fields(resource result) Get number of fields in result (int)
mysql_num_rows(resource result) Get number of rows in result (int)
mysql_pconnect([string server [, string username [, string password [, int client_flags]]]]) Open a persistent connection to a MySQL server (resource)
mysql_ping([resource link_identifier]) Ping a server connection or reconnect if there is no connection (bool)
mysql_query(string query [, resource link_identifier]) Send a MySQL query (resource)
mysql_real_escape_string(string unescaped_string [, resource link_identifier]) Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection. (string)
mysql_result(resource result, int row [, mixed field]) Get result data (mixed)
mysql_select_db(string database_name [, resource link_identifier]) Select a MySQL database (bool)
mysql_stat([resource link_identifier]) Get current system status (string)
mysql_tablename(resource result, int i) Get table name of field (string)
mysql_thread_id([resource link_identifier]) Return the current thread ID (int)
mysql_unbuffered_query(string query [, resource link_identifier]) Send an SQL query to MySQL, without fetching and buffering the result rows (resource)
natcasesort(array array) Sort an array using a case insensitive "natural order" algorithm (void)
natsort(array array) Sort an array using a "natural order" algorithm (void)
ncurses_addch(int ch) Add character at current position and advance cursor (int)
ncurses_addchnstr(string s, int n) Add attributed string with specified length at current position (int)
ncurses_addchstr(string s) Add attributed string at current position (int)
ncurses_addnstr(string s, int n) Add string with specified length at current position (int)
ncurses_addstr(string text) Output text at current position (int)
ncurses_assume_default_colors(int fg, int bg) Define default colors for color 0 (int)
ncurses_attroff(int attributes) Turn off the given attributes (int)
ncurses_attron(int attributes) Turn on the given attributes (int)
ncurses_attrset(int attributes) Set given attributes (int)
ncurses_baudrate(void) Returns baudrate of terminal (int)
ncurses_beep(void) Let the terminal beep (int)
ncurses_bkgd(int attrchar) Set background property for terminal screen (int)
ncurses_bkgdset(int attrchar) Control screen background (void)
ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner) Draw a border around the screen using attributed characters (int)
ncurses_can_change_color(void) Check if we can change terminals colors (bool)
ncurses_cbreak(void) Switch of input buffering (bool)
ncurses_clear(void) Clear screen (bool)
ncurses_clrtobot(void) Clear screen from current position to bottom (bool)
ncurses_clrtoeol(void) Clear screen from current position to end of line (bool)
ncurses_color_set(int pair) Set fore- and background color (int)
ncurses_curs_set(int visibility) Set cursor state (int)
ncurses_def_prog_mode(void) Saves terminals (program) mode (bool)
ncurses_def_shell_mode(void) Saves terminals (shell) mode (bool)
ncurses_define_key(string definition, int keycode) Define a keycode (int)
ncurses_delay_output(int milliseconds) Delay output on terminal using padding characters (int)
ncurses_delch(void) Delete character at current position, move rest of line left (bool)
ncurses_deleteln(void) Delete line at current position, move rest of screen up (bool)
ncurses_delwin(resource window) Delete a ncurses window (int)
ncurses_doupdate(void) Write all prepared refreshes to terminal (bool)
ncurses_echo(void) Activate keyboard input echo (bool)
ncurses_echochar(int character) Single character output including refresh (int)
ncurses_end(void) Stop using ncurses, clean up the screen (int)
ncurses_erase(void) Erase terminal screen (bool)
ncurses_erasechar(void) Returns current erase character (string)
ncurses_filter(void)  (int)
ncurses_flash(void) Flash terminal screen (visual bell) (bool)
ncurses_flushinp(void) Flush keyboard input buffer (bool)
ncurses_getch(void) Read a character from keyboard (int)
ncurses_getmouse(array mevent) Reads mouse event (bool)
ncurses_halfdelay(int tenth) Put terminal into halfdelay mode (int)
ncurses_has_colors(void) Check if terminal has colors (bool)
ncurses_has_ic(void) Check for insert- and delete-capabilities (bool)
ncurses_has_il(void) Check for line insert- and delete-capabilities (bool)
ncurses_has_key(int keycode) Check for presence of a function key on terminal keyboard (int)
ncurses_hline(int charattr, int n) Draw a horizontal line at current position using an attributed character and max. n characters long (int)
ncurses_inch(void) Get character and attribute at current position (string)
ncurses_init(void) Initialize ncurses (int)
ncurses_init_color(int color, int r, int g, int b) Set new RGB value for color (int)
ncurses_init_pair(int pair, int fg, int bg) Allocate a color pair (int)
ncurses_insch(int character) Insert character moving rest of line including character at current position (int)
ncurses_insdelln(int count) Insert lines before current line scrolling down (negative numbers delete and scroll up) (int)
ncurses_insertln(void) Insert a line, move rest of screen down (bool)
ncurses_insstr(string text) Insert string at current position, moving rest of line right (int)
ncurses_instr(string buffer) Reads string from terminal screen (int)
ncurses_isendwin(void) Ncurses is in endwin mode, normal screen output may be performed (bool)
ncurses_keyok(int keycode, bool enable) Enable or disable a keycode (int)
ncurses_killchar(void) Returns current line kill character (bool)
ncurses_longname(void) Returns terminals description (string)
ncurses_mouseinterval(int milliseconds) Set timeout for mouse button clicks (int)
ncurses_mousemask(int newmask, int oldmask) Sets mouse options (int)
ncurses_move(int y, int x) Move output position (int)
ncurses_mvaddch(int y, int x, int c) Move current position and add character (int)
ncurses_mvaddchnstr(int y, int x, string s, int n) Move position and add attrributed string with specified length (int)
ncurses_mvaddchstr(int y, int x, string s) Move position and add attributed string (int)
ncurses_mvaddnstr(int y, int x, string s, int n) Move position and add string with specified length (int)
ncurses_mvaddstr(int y, int x, string s) Move position and add string (int)
ncurses_mvcur(int old_y, int old_x, int new_y, int new_x) Move cursor immediately (int)
ncurses_mvdelch(int y, int x) Move position and delete character, shift rest of line left (int)
ncurses_mvgetch(int y, int x) Move position and get character at new position (int)
ncurses_mvhline(int y, int x, int attrchar, int n) Set new position and draw a horizontal line using an attributed character and max. n characters long (int)
ncurses_mvinch(int y, int x) Move position and get attributed character at new position (int)
ncurses_mvvline(int y, int x, int attrchar, int n) Set new position and draw a vertical line using an attributed character and max. n characters long (int)
ncurses_mvwaddstr(resource window, int y, int x, string text) Add string at new position in window (int)
ncurses_napms(int milliseconds) Sleep (int)
ncurses_newwin(int rows, int cols, int y, int x) Create a new window (int)
ncurses_nl(void) Translate newline and carriage return / line feed (bool)
ncurses_nocbreak(void) Switch terminal to cooked mode (bool)
ncurses_noecho(void) Switch off keyboard input echo (bool)
ncurses_nonl(void) Do not translate newline and carriage return / line feed (bool)
ncurses_noqiflush(void) Do not flush on signal characters (int)
ncurses_noraw(void) Switch terminal out of raw mode (bool)
ncurses_putp(string text)  (int)
ncurses_qiflush(void) Flush on signal characters (int)
ncurses_raw(void) Switch terminal into raw mode (bool)
ncurses_refresh(int ch) Refresh screen (int)
ncurses_resetty(void) Restores saved terminal state (bool)
ncurses_savetty(void) Saves terminal state (bool)
ncurses_scr_dump(string filename) Dump screen content to file (int)
ncurses_scr_init(string filename) Initialize screen from file dump (int)
ncurses_scr_restore(string filename) Restore screen from file dump (int)
ncurses_scr_set(string filename) Inherit screen from file dump (int)
ncurses_scrl(int count) Scroll window content up or down without changing current position (int)
ncurses_slk_attr(void) Returns current soft label key attribute (bool)
ncurses_slk_attroff(int intarg)  (int)
ncurses_slk_attron(int intarg)  (int)
ncurses_slk_attrset(int intarg)  (int)
ncurses_slk_clear(void) Clears soft labels from screen (bool)
ncurses_slk_color(int intarg) Sets color for soft label keys (int)
ncurses_slk_init(int format) Initializes soft label key functions (bool)
ncurses_slk_noutrefresh(void) Copies soft label keys to virtual screen (bool)
ncurses_slk_refresh(void) Copies soft label keys to screen (bool)
ncurses_slk_restore(void) Restores soft label keys (bool)
ncurses_slk_touch(void) Fources output when ncurses_slk_noutrefresh is performed (bool)
ncurses_standend(void) Stop using 'standout' attribute (int)
ncurses_standout(void) Start using 'standout' attribute (int)
ncurses_start_color(void) Start using colors (int)
ncurses_termattrs(void) Returns a logical OR of all attribute flags supported by terminal (bool)
ncurses_termname(void) Returns terminals (short)-name (string)
ncurses_timeout(int millisec) Set timeout for special key sequences (void)
ncurses_typeahead(int fd) Specify different filedescriptor for typeahead checking (int)
ncurses_ungetch(int keycode) Put a character back into the input stream (int)
ncurses_ungetmouse(array mevent) Pushes mouse event to queue (bool)
ncurses_use_default_colors(void) Assign terminal default colors to color id -1 (bool)
ncurses_use_env(bool flag) Control use of environment information about terminal size (void)
ncurses_use_extended_names(bool flag) Control use of extended names in terminfo descriptions (int)
ncurses_vidattr(int intarg)  (int)
ncurses_vline(int charattr, int n) Draw a vertical line at current position using an attributed character and max. n characters long (int)
ncurses_wrefresh(resource window) Refresh window on terminal screen (int)
next(array array) Advance the internal array pointer of an array (mixed)
ngettext(string msgid1, string msgid2, int n) Plural version of gettext (string)
nl2br(string string) Inserts HTML line breaks before all newlines in a string (string)
nl_langinfo(int item) Query language and locale information (string)
notes_body(string server, string mailbox, int msg_number) Open the message msg_number in the specified mailbox on the specified server (leave serv (array)
notes_copy_db(string from_database_name, string to_database_name) Create a note using form form_name (string)
notes_create_db(string database_name) Create a Lotus Notes database (bool)
notes_create_note(string database_name, string form_name) Create a note using form form_name (string)
notes_drop_db(string database_name) Drop a Lotus Notes database (bool)
notes_find_note(string database_name, string name [, string type]) Returns a note id found in database_name. Specify the name of the note. Leaving type bla (bool)
notes_header_info(string server, string mailbox, int msg_number) Open the message msg_number in the specified mailbox on the specified server (leave serv (object)
notes_list_msgs(string db) Returns the notes from a selected database_name (bool)
notes_mark_read(string database_name, string user_name, string note_id) Mark a note_id as read for the User user_name (string)
notes_mark_unread(string database_name, string user_name, string note_id) Mark a note_id as unread for the User user_name (string)
notes_nav_create(string database_name, string name) Create a navigator name, in database_name (bool)
notes_search(string database_name, string keywords) Find notes that match keywords in database_name (string)
notes_unread(string database_name, string user_name) Returns the unread note id's for the current User user_name (string)
notes_version(string database_name) Get the version Lotus Notes (string)
number_format(float number [, int decimals [, string dec_point [, string thousands_sep]]]) Format a number with grouped thousands (string)
ob_clean(void) Clean (erase) the output buffer (void)
ob_end_clean(void) Clean (erase) the output buffer and turn off output buffering (void)
ob_end_flush(void) Flush (send) the output buffer and turn off output buffering (void)
ob_flush(void) Flush (send) the output buffer (void)
ob_get_contents(void) Return the contents of the output buffer (string)
ob_get_length(void) Return the length of the output buffer (int)
ob_get_level(void) Return the nesting level of the output buffering mechanism (int)
ob_get_status([bool full_status]) Get status of output buffers (array)
ob_gzhandler(string buffer [, int mode]) ob_start callback function to gzip output buffer (string)
ob_iconv_handler(string contents, int status) Convert character encoding as output buffer handler (array)
ob_implicit_flush([int flag]) Turn implicit flush on/off (void)
ob_start([callback output_callback]) Turn on output buffering (void)
ocicollappend(object collection, object object) Coming soon (bool)
ocicollassign(object collection, object object) Coming soon (bool)
ocicollgetelem(object collection, string ndx) Coming soon (string)
ocicollmax(object collection) Coming soon (int)
ocicollsize(object collection) Coming soon (int)
ocicolltrim(object collection, int num) Coming soon (bool)
ocicolumnisnull(resource stmt, mixed column) Test whether a result column is NULL (bool)
ocicolumnname(int stmt, int col) Returns the name of a column (string)
ocicolumnprecision(int stmt, int col) Coming soon (int)
ocicolumnscale(int stmt, int col) Coming soon (int)
ocicolumnsize(int stmt, mixed column) Return result column size (int)
ocicolumntype(int stmt, int col) Returns the data type of a column (mixed)
ocicolumntyperaw(int stmt, int col) Coming soon (mixed)
ociexecute(int statement [, int mode]) Execute a statement (int)
ocifetch(int statement) Fetches the next row into result-buffer (bool)
ocifetchinto(int stmt, array &result [, int mode]) Fetches the next row into result-array (int)
ocifetchstatement(resource stmt, array & variable) Fetch all rows of result data into an array (int)
ocifreecollection(object lob) Coming soon (bool)
ocifreecursor(int stmt) Free all resources associated with a cursor (int)
ocifreedesc(object lob) Deletes a large object descriptor (bool)
ocifreestatement(resource stmt) Free all resources associated with a statement (bool)
ociinternaldebug(int onoff) Enables or disables internal debug output (void)
ociloadlob(object lob) Coming soon (string)
ocilogoff(resource connection) Disconnects from Oracle server (bool)
ocilogon(string username, string password [, string db]) Establishes a connection to Oracle (int)
ocinewcollection(int conn, string tdo [, string shema]) Coming soon (bool)
ocinewcursor(resource conn) Return a new cursor (Statement-Handle) (resource)
ocinewdescriptor(int connection [, int type]) Initialize a new empty LOB or FILE descriptor (string)
ocinlogon(string username, string password [, string db]) Establishes a new connection to Oracle (int)
ocinumcols(resource stmt) Return the number of result columns in a statement (int)
ociparse(int conn, string query) Parse a query and return an Oracle statement (int)
ociplogon(string username, string password [, string db]) Connect to an Oracle database using a persistent connection (int)
ociresult(int statement, mixed column) Returns column value for fetched row (mixed)
ocirollback(resource connection) Rolls back outstanding transactions (bool)
ocirowcount(resource statement) Gets the number of affected rows (int)
ocisavelob(object lob) Coming soon (bool)
ocisavelobfile(object lob) Coming soon (bool)
ociserverversion(resource conn) Return a string containing server version information (string)
ocisetprefetch(resource stmt, int rows) Sets number of rows to be prefetched (int)
ocistatementtype(resource stmt) Return the type of an OCI statement (string)
ociwritelobtofile(object lob [, string filename [, int start [, int lenght]]]) Coming soon (bool)
octdec(string octal_string) Octal to decimal (int)
odbc_autocommit(resource connection_id [, bool OnOff]) Toggle autocommit behaviour (bool)
odbc_binmode(resource result_id, int mode) Handling of binary column data (int)
odbc_close(resource connection_id) Close an ODBC connection (void)
odbc_close_all(void) Close all ODBC connections (void)
odbc_columnprivileges(resource connection_id [, string qualifier [, string owner [, string table_name [, string column_name]]]]) Returns a result identifier that can be used to fetch a list of columns and associated privileges (int)
odbc_columns(resource connection_id [, string qualifier [, string schema [, string table_name [, string column_name]]]]) Lists the column names in specified tables. Returns a result identifier containing the information. (resource)
odbc_commit(resource connection_id) Commit an ODBC transaction (bool)
odbc_connect(string dsn, string user, string password [, int cursor_type]) Connect to a datasource (resource)
odbc_cursor(resource result_id) Get cursorname (string)
odbc_data_source(resource connection_id, constant fetch_type) Returns information about a current connection (resource)
odbc_do(resource conn_id, string query) Synonym for odbc_exec() (resource)
odbc_error([resource connection_id]) Get the last error code (string)
odbc_errormsg([resource connection_id]) Get the last error message (string)
odbc_exec(resource connection_id, string query_string) Prepare and execute a SQL statement (resource)
odbc_execute(resource result_id [, array parameters_array]) Execute a prepared statement (bool)
odbc_fetch_array(resource result [, int rownumber]) Fetch a result row as an associative array (array)
odbc_fetch_into(resource result_id [, int rownumber, array result_array]) Fetch one result row into array (bool)
odbc_fetch_object(resource result [, int rownumber]) Fetch a result row as an object (object)
odbc_fetch_row(resource result_id [, int row_number]) Fetch a row (bool)
odbc_field_len(resource result_id, int field_number) Get the length (precision) of a field (int)
odbc_field_name(resource result_id, int field_number) Get the columnname (string)
odbc_field_num(resource result_id, string field_name) Return column number (int)
odbc_field_precision(resource result_id, int field_number) Synonym for odbc_field_len() (string)
odbc_field_scale(resource result_id, int field_number) Get the scale of a field (string)
odbc_field_type(resource result_id, int field_number) Datatype of a field (string)
odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table) Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table (resource)
odbc_free_result(resource result_id) Free resources associated with a result (bool)
odbc_gettypeinfo(resource connection_id [, int data_type]) Returns a result identifier containing information about data types supported by the data source. (int)
odbc_longreadlen(resource result_id, int length) Handling of LONG columns (int)
odbc_next_result(resource result_id) Checks if multiple results are avaiable (bool)
odbc_num_fields(resource result_id) Number of columns in a result (int)
odbc_num_rows(resource result_id) Number of rows in a result (int)
odbc_pconnect(string dsn, string user, string password [, int cursor_type]) Open a persistent database connection (resource)
odbc_prepare(resource connection_id, string query_string) Prepares a statement for execution (resource)
odbc_primarykeys(resource connection_id, string qualifier, string owner, string table) Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table (resource)
odbc_procedurecolumns(resource connection_id [, string qualifier [, string owner [, string proc [, string column]]]]) Retrieve information about parameters to procedures (resource)
odbc_procedures(resource connection_id [, string qualifier [, string owner [, string name]]]) Get the list of procedures stored in a specific data source. Returns a result identifier containing the information. (resource)
odbc_result(resource result_id, mixed field) Get result data (string)
odbc_result_all(resource result_id [, string format]) Print result as HTML table (int)
odbc_rollback(resource connection_id) Rollback a transaction (int)
odbc_setoption(resource id, int function, int option, int param) Adjust ODBC settings. Returns FALSE if an error occurs, otherwise TRUE. (int)
odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable) Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction (resource)
odbc_statistics(resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy) Retrieve statistics about a table (resource)
odbc_tableprivileges(resource connection_id [, string qualifier [, string owner [, string name]]]) Lists tables and the privileges associated with each table (int)
odbc_tables(resource connection_id [, string qualifier [, string owner [, string name [, string types]]]]) Get the list of table names stored in a specific data source. Returns a result identifier containing the information. (int)
opendir(string path) open directory handle (resource)
openlog(string ident, int option, int facility) Open connection to system logger (int)
openssl_csr_export(resource csr, string &out [, bool notext]) Exports a CSR as a string (bool)
openssl_csr_export_to_file(resource csr, string outfilename [, bool notext]) Exports a CSR to a file (bool)
openssl_csr_new(array dn, resource privkey [, array configargs [, array extraattribs]]) Generates a CSR (bool)
openssl_csr_sign(mixed csr, mixed cacert, mixed priv_key, int days) Sign a CSR with another certificate (or itself) and generate a certificate (resource)
openssl_error_string(void) Return openSSL error message (mixed)
openssl_free_key(resource key_identifier) Free key resource (void)
openssl_get_privatekey(mixed key [, string passphrase]) Get a private key (resource)
openssl_get_publickey(mixed certificate) Extract public key from certificate and prepare it for use (resource)
openssl_open(string sealed_data, string open_data, string env_key, mixed priv_key_id) Open sealed data (bool)
openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [, mixed recipkey]) Decrypts an S/MIME encrypted message (bool)
openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, int flags]) Encrypt an S/MIME message (bool)
openssl_pkcs7_sign(string infilename, string outfilename, mixed signcert, mixed privkey, array headers [, int flags [, string extracerts]]) sign an S/MIME message (bool)
openssl_pkcs7_verify(string filename, int flags [, string outfilename [, array cainfo [, string extracerts]]]) Verifies the signature of an S/MIME signed message (bool)
openssl_pkey_export(mixed key, string &out [, string passphrase [, array configargs]]) Gets an exportable representation of a key into a string (bool)
openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase [, array configargs]]) Gets an exportable representation of a key into a file (bool)
openssl_pkey_get_private(mixed key [, string passphrase]) Get a private key (resource)
openssl_pkey_get_public(mixed certificate) Extract public key from certificate and prepare it for use (resource)
openssl_pkey_new([array configargs]) Generates a new private key (resource)
openssl_private_decrypt(string data, string &decrypted, mixed key [, int padding]) Decrypts data with private key (bool)
openssl_private_encrypt(string data, string crypted, mixed key [, int padding]) Encrypts data with private key (bool)
openssl_public_decrypt(string data, string crypted, resource key [, int padding]) Decrypts data with public key (bool)
openssl_public_encrypt(string data, string crypted, mixed key [, int padding]) Encrypts data with public key (bool)
openssl_seal(string data, string sealed_data, array env_keys, array pub_key_ids) Seal (encrypt) data (int)
openssl_sign(string data, string signature, mixed priv_key_id) Generate signature (bool)
openssl_verify(string data, string signature, mixed pub_key_id) Verify signature (int)
openssl_x509_check_private_key(mixed cert, mixed key) Checks if a private key corresponds to a certificate (bool)
openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile]) Verifies if a certificate can be used for a particular purpose (bool)
openssl_x509_export(mixed x509, string &output [, bool notext]) Exports a certificate as a string (bool)
openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext]) Exports a certificate to file (bool)
openssl_x509_free(resource x509cert) Free certificate resource (void)
openssl_x509_parse(mixed x509cert [, bool shortnames]) Parse an X509 certificate and return the information as an array (array)
openssl_x509_read(mixed x509certdata) Parse an X.509 certificate and return a resource identifier for it (resource)
ora_columnname(int cursor, int column) Get name of Oracle result column (string)
ora_columnsize(int cursor, int column) get size of Oracle result column (int)
ora_columntype(resource cursor, int column) Get type of Oracle result column (string)
ora_commit(int conn) commit an Oracle transaction (int)
ora_commitoff(int conn) disable automatic commit (int)
ora_error(int cursor_or_connection) get Oracle error message (string)
ora_errorcode(int cursor_or_connection) get Oracle error code (int)
ora_exec(resource cursor) Execute parsed statement on an Oracle cursor (bool)
ora_getcolumn(int cursor, mixed column) Get data from a fetched column (mixed)
ora_logoff(int connection) Close an Oracle connection (int)
ora_logon(string user, string password) Open an Oracle connection (resource)
ora_numcols(int cursor_ind) Returns the number of columns (int)
ora_numrows(int cursor_ind) Returns the number of rows (int)
ora_open(int connection) open an Oracle cursor (int)
ora_parse(int cursor_ind, string sql_statement, int defer) Parse an SQL statement with Oracle (int)
ora_plogon(string user, string password) Open a persistent Oracle connection (int)
ord(string string) Return ASCII value of character (int)
overload([string class_name]) Enable property and method call overloading for a class (void)
ovrimos_close(int connection) Closes the connection to ovrimos (void)
ovrimos_commit(int connection_id) Commits the transaction (int)
ovrimos_connect(string host, string db, string user, string password) Connect to the specified database (int)
ovrimos_cursor(int result_id) Returns the name of the cursor (int)
ovrimos_exec(int connection_id, string query) Executes an SQL statement (int)
ovrimos_execute(int result_id [, array parameters_array]) Executes a prepared SQL statement (bool)
ovrimos_fetch_into(int result_id, array result_array [, string how [, int rownumber]]) Fetches a row from the result set (bool)
ovrimos_fetch_row(int result_id [, int how [, int row_number]]) Fetches a row from the result set (bool)
ovrimos_field_len(int result_id, int field_number) Returns the length of the output column (int)
ovrimos_field_name(int result_id, int field_number) Returns the output column name (int)
ovrimos_field_num(int result_id, string field_name) Returns the (1-based) index of the output column (int)
ovrimos_field_type(int result_id, int field_number) Returns the (numeric) type of the output column (int)
ovrimos_free_result(int result_id) Frees the specified result_id (bool)
ovrimos_longreadlen(int result_id, int length) Specifies how many bytes are to be retrieved from long datatypes (int)
ovrimos_num_fields(int result_id) Returns the number of columns (int)
ovrimos_num_rows(int result_id) Returns the number of rows affected by update operations (int)
ovrimos_prepare(int connection_id, string query) Prepares an SQL statement (int)
ovrimos_result(int result_id, mixed field) Retrieves the output column (int)
ovrimos_result_all(int result_id [, string format]) Prints the whole result set as an HTML table (bool)
ovrimos_rollback(int connection_id) Rolls back the transaction (int)
pack(string format [, mixed args]) Pack data into binary string. (string)
parse_ini_file(string filename [, bool process_sections]) Parse a configuration file (array)
parse_str(string str [, array arr]) Parses the string into variables (void)
parse_url(string url) Parse a URL and return its components (array)
passthru(string command [, int return_var]) Execute an external program and display raw output (void)
pathinfo(string path) Returns information about a file path (array)
pclose(resource handle) Closes process file pointer (int)
pcntl_exec(string path [, array args [, array envs]]) Executes specified program in current process space (bool)
pcntl_fork(void) Forks the currently running process (int)
pcntl_signal(int signo, mixed handle [, bool restart_syscalls]) Installs a signal handler (bool)
pcntl_waitpid(int pid, int status, int options) Waits on or returns the status of a forked child (int)
pcntl_wexitstatus(int status) Returns the return code of a terminated child (int)
pcntl_wifexited(int status) Returns TRUE if status code represents a successful exit (int)
pcntl_wifsignaled(int status) Returns TRUE if status code represents a termination due to a signal (int)
pcntl_wifstopped(int status) Returns TRUE if child process is currently stopped (int)
pcntl_wstopsig(int status) Returns the signal which caused the child to stop (int)
pcntl_wtermsig(int status) Returns the signal which caused the child to terminate (int)
pdf_add_annotation(?) Deprecated: Adds annotation (?)
pdf_add_bookmark(int pdf_object, string text [, int parent [, int open]]) Adds bookmark for current page (int)
pdf_add_launchlink(int pdf_object, float llx, float lly, float urx, float ury, string filename) Add a launch annotation for current page (int)
pdf_add_locallink(int pdf_object, float llx, float lly, float urx, float ury, int page, string dest) Add a link annotation for current page (int)
pdf_add_note(int pdf_object, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open) Add a note annotation for current page (int)
pdf_add_outline(?) Deprecated: Adds bookmark for current page (?)
pdf_add_pdflink(int pdf_object, float llx, float lly, float urx, float ury, string filename, int page, string dest) Adds file link annotation for current page (int)
pdf_add_thumbnail(int pdf_object, int image) Adds thumbnail for current page (int)
pdf_add_weblink(int pdf_object, float llx, float lly, float urx, float ury, string url) Adds weblink for current page (int)
pdf_arc(resource pdf_object, float x, float y, float r, float alpha, float beta) Draws an arc (counterclockwise) (void)
pdf_arcn(resource pdf_object, float x, float y, float r, float alpha, float beta) Draws an arc (clockwise) (void)
pdf_attach_file(int pdf_object, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon) Adds a file attachement for current page (int)
pdf_begin_page(int pdf_object, float width, float height) Starts new page (void)
pdf_begin_pattern(int pdf_object, float width, float height, float xstep, float ystep, int painttype) Starts new pattern (int)
pdf_begin_template(int pdf_object, float width, float height) Starts new template (int)
pdf_circle(int pdf_object, float x, float y, float r) Draws a circle (void)
pdf_clip(int pdf_object) Clips to current path (void)
pdf_close(int pdf_object) Closes a pdf object (void)
pdf_close_image(int pdf_object, int image) Closes an image (void)
pdf_close_pdi(int pdf_object, int dochandle) Close the input PDF document (void)
pdf_close_pdi_page(int pdf_object, int pagehandle) Close the page handle (void)
pdf_closepath(int pdf_object) Closes path (void)
pdf_closepath_fill_stroke(int pdf_object) Closes, fills and strokes current path (void)
pdf_closepath_stroke(int pdf_object) Closes path and draws line along path (void)
pdf_concat(int pdf_object, float a, float b, float c, float d, float e, float f) Concatenate a matrix to the CTM (void)
pdf_continue_text(int pdf_object, string text) Outputs text in next line (void)
pdf_curveto(int pdf_object, float x1, float y1, float x2, float y2, float x3, float y3) Draws a curve (void)
pdf_delete(int pdf_object) Deletes a PDF object (void)
pdf_end_page(int pdf_object) Ends a page (void)
pdf_end_pattern(int pdf_object) Finish pattern (void)
pdf_end_template(int pdf_object) Finish template (void)
pdf_endpath(?) Deprecated: Ends current path (?)
pdf_fill(int pdf_object) Fills current path (void)
pdf_fill_stroke(int pdf_object) Fills and strokes current path (void)
pdf_findfont(int pdf_object, string fontname, string encoding, int embed) Prepare font for later use with pdf_setfont(). (int)
pdf_get_buffer(int pdf_object) Fetch the buffer containig the generated PDF data. (string)
pdf_get_font(?) Deprecated: font handling (?)
pdf_get_fontname(?) Deprecated: font handling (?)
pdf_get_fontsize(?) Deprecated: font handling (?)
pdf_get_image_height(int pdf_object, int image) Returns height of an image (string)
pdf_get_image_width(int pdf_object, int image) Returns width of an image (string)
pdf_get_majorversion(void) Returns the major version number of the PDFlib (int)
pdf_get_minorversion(void) Returns the minor version number of the PDFlib (int)
pdf_get_parameter(int pdf_object, string key [, float modifier]) Gets certain parameters (string)
pdf_get_pdi_parameter(int pdf_object, string key, int doc, int page, int index) Get some PDI string parameters (string)
pdf_get_pdi_value(int pdf_object, string key, int doc, int page, int index) Gets some PDI numerical parameters (string)
pdf_get_value(int pdf_object, string key [, float modifier]) Gets certain numerical value (float)
pdf_initgraphics(int pdf_object) Resets graphic state (void)
pdf_lineto(int pdf_object, float x, float y) Draws a line (void)
pdf_makespotcolor(int pdf_object, string spotname) Makes a spotcolor (void)
pdf_moveto(int pdf_object, float x, float y) Sets current point (void)
pdf_new() Creates a new pdf object (int)
pdf_open(?) Deprecated: Open a new pdf object (?)
pdf_open_CCITT(int pdf_object, string filename, int width, int height, int BitReverse, int k, int Blackls1) Opens a new image file with raw CCITT data (int)
pdf_open_file(int pdf_object [, string filename]) Opens a new pdf object (int)
pdf_open_gif(?) Deprecated: Opens a GIF image (?)
pdf_open_image(int PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params) Versatile function for images (int)
pdf_open_image_file(int PDF-document, string imagetype, string filename [, string stringparam [, string intparam]]) Reads an image from a file (int)
pdf_open_jpeg(?) Deprecated: Opens a JPEG image (?)
pdf_open_memory_image(int pdf_object, int image) Opens an image created with PHP's image functions (int)
pdf_open_pdi(int pdf_object, string filename, string stringparam, int intparam) Opens a PDF file (int)
pdf_open_pdi_page(int pdf_object, int dochandle, int pagenumber, string pagelabel) Prepare a page (int)
pdf_open_png(?) Deprecated: Opens a PNG image (?)
pdf_open_tiff(int PDF-document, string filename) Deprecated: Opens a TIFF image (int)
pdf_place_image(int pdf_object, int image, float x, float y, float scale) Places an image on the page (void)
pdf_place_pdi_page(int pdf_object, int page, float x, float y, float sx, float sy) Places an image on the page (void)
pdf_rect(int pdf_object, float x, float y, float width, float height) Draws a rectangle (void)
pdf_restore(int pdf_object) Restores formerly saved environment (void)
pdf_rotate(int pdf_object, float phi) Sets rotation (void)
pdf_save(int pdf_object) Saves the current environment (void)
pdf_scale(int pdf_object, float x-scale, float y-scale) Sets scaling (void)
pdf_set_border_color(int pdf_object, float red, float green, float blue) Sets color of border around links and annotations (void)
pdf_set_border_dash(int pdf_object, float black, float white) Sets dash style of border around links and annotations (void)
pdf_set_border_style(int pdf_object, string style, float width) Sets style of border around links and annotations (void)
pdf_set_char_spacing(?) Deprecated: Sets character spacing (?)
pdf_set_duration(?) Deprecated: Sets duration between pages (?)
pdf_set_font(?) Deprecated: Selects a font face and size (?)
pdf_set_horiz_scaling(int pdf_object, float scale) Sets horizontal scaling of text (void)
pdf_set_info(int pdf_object, string key, string value) Fills a field of the document information (void)
pdf_set_info_author(int pdfdoc, string author) Fills the author field of the document (bool)
pdf_set_info_creator(int pdfdoc, string creator) Fills the creator field of the document (bool)
pdf_set_info_keywords(int pdfdoc, string keywords) Fills the keywords field of the document (bool)
pdf_set_info_subject(int pdfdoc, string subject) Fills the subject field of the document (bool)
pdf_set_info_title(int pdfdoc, string title) Fills the title field of the document (bool)
pdf_set_leading(?) Deprecated: Sets distance between text lines (?)
pdf_set_parameter(int pdf_object, string key, string value) Sets certain parameters (void)
pdf_set_text_matrix(?) Deprecated: Sets the text matrix (?)
pdf_set_text_pos(int pdf_object, float x, float y) Sets text position (void)
pdf_set_text_rendering(?) Deprecated: Determines how text is rendered (?)
pdf_set_text_rise(?) Deprecated: Sets the text rise (?)
pdf_set_value(int pdf_object, string key, float value) Sets certain numerical value (void)
pdf_set_word_spacing(?) Depriciated: Sets spacing between words (?)
pdf_setcolor(int pdf_object, string type, string colorspace, float c1 [, float c2 [, float c3 [, float c4]]]) Sets fill and stroke color (void)
pdf_setdash(int pdf_object, float b, float w) Sets dash pattern (void)
pdf_setflat(int pdf_object, float flatness) Sets flatness (void)
pdf_setfont(int pdf_object, int font, float size) Set the current font (void)
pdf_setgray(int pdf_object, float gray) Sets drawing and filling color to gray value (void)
pdf_setgray_fill(int pdf_object, float gray) Sets filling color to gray value (void)
pdf_setgray_stroke(int pdf_object, float gray) Sets drawing color to gray value (void)
pdf_setlinecap(int pdf_object, int linecap) Sets linecap parameter (void)
pdf_setlinejoin(int pdf_object, int value) Sets linejoin parameter (void)
pdf_setlinewidth(int pdf_object, float width) Sets line width (void)
pdf_setmatrix(int pdf_object, float a, float b, float c, float d, float e, float f) Sets current transformation matrix (void)
pdf_setmiterlimit(int pdf_object, float miter) Sets miter limit (void)
pdf_setpolydash(int pdf_object, float * dasharray) Sets complicated dash pattern (void)
pdf_setrgbcolor(int pdf_object, float red value, float green value, float blue value) Sets drawing and filling color to rgb color value (void)
pdf_setrgbcolor_fill(int pdf_object, float red value, float green value, float blue value) Sets filling color to rgb color value (void)
pdf_setrgbcolor_stroke(int pdf_object, float red value, float green value, float blue value) Sets drawing color to rgb color value (void)
pdf_show(int pdf_object, string text) Output text at current position (void)
pdf_show_boxed(int pdf_object, string text, float left, float top, float width, float height, string hmode [, string feature]) Output text in a box (int)
pdf_show_xy(int pdf_object, string text, float x, float y) Output text at given position (void)
pdf_skew(int pdf_object, float alpha, float beta) Skews the coordinate system (void)
pdf_stringwidth(int pdf_object, string text [, int font [, float size]]) Returns width of text using current font (float)
pdf_stroke(int pdf_object) Draws line along path (void)
pdf_translate(int pdf_object, float tx, float ty) Sets origin of coordinate system (void)
pfpro_cleanup(void) Shuts down the Payflow Pro library (void)
pfpro_init(void) Initialises the Payflow Pro library (void)
pfpro_process(array parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]]) Process a transaction with Payflow Pro (array)
pfpro_process_raw(string parameters [, string address [, int port [, int timeout [, string proxy address [, int proxy port [, string proxy logon [, string proxy password]]]]]]]) Process a raw transaction with Payflow Pro (string)
pfpro_version(void) Returns the version of the Payflow Pro software (string)
pfsockopen(string hostname, int port [, int errno [, string errstr [, int timeout]]]) Open persistent Internet or Unix domain socket connection (int)
pg_affected_rows(resource result) Returns number of affected records(tuples) (int)
pg_cancel_query(resource connection) Cancel async query (bool)
pg_client_encoding([resource connection]) Get the client encoding (string)
pg_close(resource connection) Close a PostgreSQL connection (bool)
pg_connect(string connection_string) Open a PostgreSQL connection (resource)
pg_connection_busy(resource connection) Get connection is busy or not (bool)
pg_connection_reset(resource connection) Reset connection (reconnect) (bool)
pg_connection_status(resource connection) Get connection status (int)
pg_convert(resource connection, string table_name, array assoc_array [, int options]) Convert associative array value into suitable for SQL statement. (array)
pg_copy_from(resource connection, string table_name, array rows [, string delimiter [, string null_as]]) Insert records into a table from an array (bool)
pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as]]) Copy a table to an array (array)
pg_dbname(resource connection) Get the database name (string)
pg_delete(resource connection, string table_name, array assoc_array [, int options]) Delete records. (mixed)
pg_end_copy([resource connection]) Sync with PostgreSQL backend (bool)
pg_escape_bytea(string data) Escape binary for bytea type (string)
pg_escape_string(string data) Escape string for text/char type (string)
pg_fetch_all(resource result [, int row]) Fetch a row as an array (array)
pg_fetch_array(resource result [, int row [, int result_type]]) Fetch a row as an array (array)
pg_fetch_assoc(resource result [, int row]) Fetch a row as an array (array)
pg_fetch_object(resource result [, int row [, int result_type]]) Fetch a row as an object (object)
pg_fetch_result(resource result, int row, mixed field) Returns values from a result resource (mixed)
pg_fetch_row(resource result, int row) Get a row as an enumerated array (array)
pg_field_is_null(resource result, int row, mixed field) Test if a field is NULL (int)
pg_field_name(resource result, int field_number) Returns the name of a field (string)
pg_field_num(resource result, string field_name) Returns the field number of the named field (int)
pg_field_prtlen(resource result, int row_number, string field_name) Returns the printed length (int)
pg_field_size(resource result, int field_number) Returns the internal storage size of the named field (int)
pg_field_type(resource result, int field_number) Returns the type name for the corresponding field number (string)
pg_free_result(resource result) Free result memory (bool)
pg_get_notify(resource connection [, int result_type]) Ping database connection (array)
pg_get_pid(resource connection) Ping database connection (int)
pg_get_result([resource connection]) Get asynchronous query result (resource)
pg_host(resource connection) Returns the host name associated with the connection (string)
pg_insert(resource connection, string table_name, array assoc_array [, int options]) Insert array into table. (bool)
pg_last_error([resource connection]) Get the last error message string of a connection (string)
pg_last_notice(resource connection) Returns the last notice message from PostgreSQL server (string)
pg_last_oid(resource result) Returns the last object's oid (int)
pg_lo_close(resource large_object) Close a large object (bool)
pg_lo_create(resource connection) Create a large object (int)
pg_lo_export(int oid, string pathname [, resource connection]) Export a large object to file (bool)
pg_lo_import([resource connection, string pathname]) Import a large object from file (int)
pg_lo_open(resource connection, int oid, string mode) Open a large object (resource)
pg_lo_read(resource large_object, int len) Read a large object (string)
pg_lo_read_all(resource large_object) Read a entire large object and send straight to browser (int)
pg_lo_seek(resource large_object, int offset [, int whence]) Seeks position of large object (bool)
pg_lo_tell(resource large_object) Returns current position of large object (int)
pg_lo_unlink(resource connection, int oid) Delete a large object (bool)
pg_lo_write(resource large_object, string data) Write a large object (int)
pg_meta_data(resource connection, string table_name) Get meta data for table. (array)
pg_num_fields(resource result) Returns the number of fields (int)
pg_num_rows(resource result) Returns the number of rows (int)
pg_options(resource connection) Get the options associated with the connection (string)
pg_pconnect(string connection_string) Open a persistent PostgreSQL connection (resource)
pg_ping(resource connection) Ping database connection (bool)
pg_port(resource connection) Return the port number associated with the connection (int)
pg_put_line([resource connection, string data]) Send a NULL-terminated string to PostgreSQL backend (bool)
pg_query(resource connection, string query) Execute a query (resource)
pg_result_error(resource result) Get error message associated with result (string)
pg_result_seek(resource result, int offset) Set internal row offset in result resource (array)
pg_result_status(resource result) Get status of query result (int)
pg_select(resource connection, string table_name, array assoc_array [, int options]) Select records. (array)
pg_send_query(resource connection, string query) Send asynchronous query (bool)
pg_set_client_encoding([resource connection, string encoding]) Set the client encoding (int)
pg_trace(string pathname [, string mode [, resource connection]]) Enable tracing a PostgreSQL connection (bool)
pg_tty(resource connection) Return the tty name associated with the connection (string)
pg_unescape_bytea(string data) Escape binary for bytea type (string)
pg_untrace([resource connection]) Disable tracing of a PostgreSQL connection (bool)
pg_update(resource connection, string table_name, array condition, array data [, int options]) Update table. (mixed)
php_ini_scanned_files(void) Return a list of .ini files parsed from the additional ini dir (string)
php_logo_guid(void) Gets the logo guid (string)
php_sapi_name(void) Returns the type of interface between web server and PHP (string)
php_uname(void) Returns information about the operating system PHP was built on (string)
phpcredits([int flag]) Prints out the credits for PHP (void)
phpinfo([int what]) Outputs lots of PHP information (int)
phpversion(void) Gets the current PHP version (string)
pi(void) Get value of pi (float)
png2wbmp(string pngname, string wbmpname, int d_height, int d_width, int threshold) Convert PNG image file to WBMP image file (int)
popen(string command, string mode) Opens process file pointer (resource)
pos(array array) Get the current element from an array (mixed)
posix_ctermid(void) Get path name of controlling terminal (string)
posix_getcwd(void) Pathname of current directory (string)
posix_getegid(void) Return the effective group ID of the current process (int)
posix_geteuid(void) Return the effective user ID of the current process (int)
posix_getgid(void) Return the real group ID of the current process (int)
posix_getgrgid(int gid) Return info about a group by group id (array)
posix_getgrnam(string name) Return info about a group by name (array)
posix_getgroups(void) Return the group set of the current process (array)
posix_getlogin(void) Return login name (string)
posix_getpgid(int pid) Get process group id for job control (int)
posix_getpgrp(void) Return the current process group identifier (int)
posix_getpid(void) Return the current process identifier (int)
posix_getppid(void) Return the parent process identifier (int)
posix_getpwnam(string username) Return info about a user by username (array)
posix_getpwuid(int uid) Return info about a user by user id (array)
posix_getrlimit(void) Return info about system ressource limits (array)
posix_getsid(int pid) Get the current sid of the process (int)
posix_getuid(void) Return the real user ID of the current process (int)
posix_isatty(int fd) Determine if a file descriptor is an interactive terminal (bool)
posix_kill(int pid, int sig) Send a signal to a process (bool)
posix_mkfifo(string pathname, int mode) Create a fifo special file (a named pipe) (bool)
posix_setegid(int gid) Set the effective GID of the current process (bool)
posix_seteuid(int uid) Set the effective UID of the current process (bool)
posix_setgid(int gid) Set the GID of the current process (bool)
posix_setpgid(int pid, int pgid) set process group id for job control (int)
posix_setsid(void) Make the current process a session leader (int)
posix_setuid(int uid) Set the UID of the current process (bool)
posix_times(void) Get process times (array)
posix_ttyname(int fd) Determine terminal device name (string)
posix_uname(void) Get system name (array)
pow(number base, number exp) Exponential expression (number)
preg_grep(string pattern, array input) Return array entries that match the pattern (array)
preg_match(string pattern, string subject [, array matches [, int flags]]) Perform a regular expression match (int)
preg_match_all(string pattern, string subject, array matches [, int flags]) Perform a global regular expression match (int)
preg_quote(string str [, string delimiter]) Quote regular expression characters (string)
preg_replace(mixed pattern, mixed replacement, mixed subject [, int limit]) Perform a regular expression search and replace (mixed)
preg_replace_callback(mixed pattern, callback callback, mixed subject [, int limit]) Perform a regular expression search and replace using a callback (mixed)
preg_split(string pattern, string subject [, int limit [, int flags]]) Split string by a regular expression (array)
prev(array array) Rewind the internal array pointer (mixed)
print(string arg) Output a string (void)
print_r(mixed expression [, bool return]) Prints human-readable information about a variable (bool)
printer_abort(resource handle) Deletes the printer's spool file (void)
printer_close(resource handle) Close an open printer connection (void)
printer_create_brush(int style, string color) Create a new brush (mixed)
printer_create_dc(resource handle) Create a new device context (void)
printer_create_font(string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton) Create a new font (mixed)
printer_create_pen(int style, int width, string color) Create a new pen (mixed)
printer_delete_brush(resource handle) Delete a brush (bool)
printer_delete_dc(resource handle) Delete a device context (bool)
printer_delete_font(resource handle) Delete a font (bool)
printer_delete_pen(resource handle) Delete a pen (bool)
printer_draw_bmp(resource handle, string filename, int x, int y) Draw a bmp (void)
printer_draw_chord(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1) Draw a chord (void)
printer_draw_elipse(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) Draw an ellipse (void)
printer_draw_line(resource printer_handle, int from_x, int from_y, int to_x, int to_y) Draw a line (void)
printer_draw_pie(resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y) Draw a pie (void)
printer_draw_rectangle(resource handle, int ul_x, int ul_y, int lr_x, int lr_y) Draw a rectangle (void)
printer_draw_roundrect(resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height) Draw a rectangle with rounded corners (void)
printer_draw_text(resource printer_handle, string text, int x, int y) Draw text (void)
printer_end_doc(resource handle) Close document (bool)
printer_end_page(resource handle) Close active page (bool)
printer_get_option(resource handle, string option) Retrieve printer configuration data (mixed)
printer_list(int enumtype [, string name [, int level]]) Return an array of printers attached to the server (array)
printer_logical_fontheight(resource handle, int height) Get logical font height (int)
printer_open([string devicename]) Open connection to a printer (mixed)
printer_select_brush(resource printer_handle, resource brush_handle) Select a brush (void)
printer_select_font(resource printer_handle, resource font_handle) Select a font (void)
printer_select_pen(resource printer_handle, resource pen_handle) Select a pen (void)
printer_set_option(resource handle, int option, mixed value) Configure the printer connection (bool)
printer_start_doc(resource handle [, string document]) Start a new document (bool)
printer_start_page(resource handle) Start a new page (bool)
printer_write(resource handle, string content) Write data to the printer (bool)
printf(string format [, mixed args]) Output a formatted string (void)
proc_close(resource process) Close a process opened by proc_open and return the exit code of that process. (int)
proc_get_status(resource process) Get information about a process opened by proc_open() (int)
proc_open(string cmd, array descriptorspec, array pipes) Execute a command and open file pointers for input/output (resource)
pspell_add_to_personal(int dictionary_link, string word) Add the word to a personal wordlist (int)
pspell_add_to_session(int dictionary_link, string word) Add the word to the wordlist in the current session (int)
pspell_check(int dictionary_link, string word) Check a word (bool)
pspell_clear_session(int dictionary_link) Clear the current session (int)
pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]]) Create a config used to open a dictionary (int)
pspell_config_ignore(int dictionary_link, int n) Ignore words less than N characters long (int)
pspell_config_mode(int dictionary_link, int mode) Change the mode number of suggestions returned (int)
pspell_config_personal(int dictionary_link, string file) Set a file that contains personal wordlist (int)
pspell_config_repl(int dictionary_link, string file) Set a file that contains replacement pairs (int)
pspell_config_runtogether(int dictionary_link, bool flag) Consider run-together words as valid compounds (int)
pspell_config_save_repl(int dictionary_link, bool flag) Determine whether to save a replacement pairs list along with the wordlist (int)
pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) Load a new dictionary (int)
pspell_new_config(int config) Load a new dictionary with settings based on a given config (int)
pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]]) Load a new dictionary with personal wordlist (int)
pspell_save_wordlist(int dictionary_link) Save the personal wordlist to a file (int)
pspell_store_replacement(int dictionary_link, string misspelled, string correct) Store a replacement pair for a word (int)
pspell_suggest(int dictionary_link, string word) Suggest spellings of a word (array)
putenv(string setting) Sets the value of an environment variable (void)
qdom_error(void) Returns the error string from the last QDOM operation or FALSE if no errors occured (string)
qdom_tree(string ) creates a tree of an xml string (object)
quoted_printable_decode(string str) Convert a quoted-printable string to an 8 bit string (string)
quotemeta(string str) Quote meta characters (string)
rad2deg(float number) Converts the radian number to the equivalent number in degrees (float)
rand([int min, int max]) Generate a random value (int)
range(int low, int high [, int step]) Create an array containing a range of elements (array)
rawurldecode(string str) Decode URL-encoded strings (string)
rawurlencode(string str) URL-encode according to RFC 1738 (string)
read_exif_data(?) Alias of exif_read_data() (?)
readdir(resource dir_handle) read entry from directory handle (string)
readfile(string filename [, bool use_include_path [, resource context]]) Outputs a file (int)
readgzfile(string filename [, int use_include_path]) Output a gz-file (int)
readline([string prompt]) Reads a line (string)
readline_add_history(string line) Adds a line to the history (void)
readline_clear_history(void) Clears the history (bool)
readline_completion_function(string line) Registers a completion function (bool)
readline_info([string varname [, string newvalue]]) Gets/sets various internal readline variables (mixed)
readline_list_history(void) Lists the history (array)
readline_read_history(string filename) Reads the history (bool)
readline_write_history(string filename) Writes the history (bool)
readlink(string path) Returns the target of a symbolic link (string)
realpath(string path) Returns canonicalized absolute pathname (string)
recode(?) Alias for recode_string() (?)
recode_file(string request, resource input, resource output) Recode from file to file according to recode request (bool)
recode_string(string request, string string) Recode a string according to a recode request (string)
register_shutdown_function(callback function) Register a function for execution on shutdown (int)
register_tick_function(callback function [, mixed arg]) Register a function for execution on each tick (void)
rename(string oldname, string newname) Renames a file (bool)
reset(array array) Set the internal pointer of an array to its first element (mixed)
restore_error_handler(void) Restores the previous error handler function (void)
rewind(resource handle) Rewind the position of a file pointer (int)
rewinddir(resource dir_handle) rewind directory handle (void)
rmdir(string dirname) Removes directory (int)
round(float val [, int precision]) Rounds a float (float)
rsort(array array [, int sort_flags]) Sort an array in reverse order (void)
rtrim(string str [, string charlist]) Strip whitespace from the end of a string (string)
sem_acquire(int sem_identifier) Acquire a semaphore (bool)
sem_get(int key [, int max_acquire [, int perm]]) Get a semaphore id (int)
sem_release(int sem_identifier) Release a semaphore (bool)
sem_remove(int sem_identifier) Remove a semaphore (bool)
serialize(mixed value) Generates a storable representation of a value (string)
sesam_affected_rows(string result_id) Get number of rows affected by an immediate query (int)
sesam_commit(void) Commit pending updates to the SESAM database (bool)
sesam_connect(string catalog, string schema, string user) Open SESAM database connection (bool)
sesam_diagnostic(void) Return status information for last SESAM call (array)
sesam_disconnect(void) Detach from SESAM connection (bool)
sesam_errormsg(void) Returns error message of last SESAM call (string)
sesam_execimm(string query) Execute an "immediate" SQL-statement (string)
sesam_fetch_array(string result_id [, int whence [, int offset]]) Fetch one row as an associative array (array)
sesam_fetch_result(string result_id [, int max_rows]) Return all or part of a query result (mixed)
sesam_fetch_row(string result_id [, int whence [, int offset]]) Fetch one row as an array (array)
sesam_field_array(string result_id) Return meta information about individual columns in a result (array)
sesam_field_name(string result_id, int index) Return one column name of the result set (int)
sesam_free_result(string result_id) Releases resources for the query (int)
sesam_num_fields(string result_id) Return the number of fields/columns in a result set (int)
sesam_query(string query [, bool scrollable]) Perform a SESAM SQL query and prepare the result (string)
sesam_rollback(void) Discard any pending updates to the SESAM database (bool)
sesam_seek_row(string result_id, int whence [, int offset]) Set scrollable cursor mode for subsequent fetches (bool)
sesam_settransaction(int isolation_level, int read_only) Set SESAM transaction parameters (bool)
session_cache_expire([int new_cache_expire]) Return current cache expire (int)
session_cache_limiter([string cache_limiter]) Get and/or set the current cache limiter (string)
session_decode(string data) Decodes session data from a string (bool)
session_destroy(void) Destroys all data registered to a session (bool)
session_encode(void) Encodes the current session data as a string (string)
session_get_cookie_params(void) Get the session cookie parameters (array)
session_id([string id]) Get and/or set the current session id (string)
session_is_registered(string name) Find out whether a global variable is registered in a session (bool)
session_module_name([string module]) Get and/or set the current session module (string)
session_name([string name]) Get and/or set the current session name (string)
session_readonly(void) Begin session - reinitializes frozen variables, but no writeback on request end (void)
session_register(mixed name [, mixed ...]) Register one or more global variables with the current session (bool)
session_save_path([string path]) Get and/or set the current session save path (string)
session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]]) Set the session cookie parameters (void)
session_set_save_handler(string open, string close, string read, string write, string destroy, string gc) Sets user-level session storage functions (bool)
session_start(void) Initialize session data (bool)
session_unregister(string name) Unregister a global variable from the current session (bool)
session_unset(void) Free all session variables (void)
session_write_close(void) Write session data and end session (void)
set_error_handler(callback error_handler) Sets a user-defined error handler function. (string)
set_file_buffer(?) Alias of stream_set_write_buffer() (?)
set_magic_quotes_runtime(int new_setting) Sets the current active configuration setting of magic_quotes_runtime (bool)
set_time_limit(int seconds) Limits the maximum execution time (void)
setcookie(string name [, string value [, int expire [, string path [, string domain [, int secure]]]]]) Send a cookie (bool)
setlocale(mixed category, string locale [, string ...]) Set locale information (string)
settype(mixed var, string type) Set the type of a variable (bool)
sha1(string str [, bool raw_output]) Calculate the sha1 hash of a string (string)
sha1_file(string filename [, bool raw_output]) Calculate the sha1 hash of a file (string)
shell_exec(string cmd) Execute command via shell and return complete output as string (string)
shm_attach(int key [, int memsize [, int perm]]) Creates or open a shared memory segment (int)
shm_detach(int shm_identifier) Disconnects from shared memory segment (bool)
shm_get_var(int id, int variable_key) Returns a variable from shared memory (mixed)
shm_put_var(int shm_identifier, int variable_key, mixed variable) Inserts or updates a variable in shared memory (int)
shm_remove(int shm_identifier) Removes shared memory from Unix systems (int)
shm_remove_var(int id, int variable_key) Removes a variable from shared memory (int)
shmop_close(int shmid) Close shared memory block (int)
shmop_delete(int shmid) Delete shared memory block (int)
shmop_open(int key, string flags, int mode, int size) Create or open shared memory block (int)
shmop_read(int shmid, int start, int count) Read data from shared memory block (string)
shmop_size(int shmid) Get size of shared memory block (int)
shmop_write(int shmid, string data, int offset) Write data into shared memory block (int)
show_source(?) Alias of highlight_file() (?)
shuffle(array array) Shuffle an array (void)
similar_text(string first, string second [, float percent]) Calculate the similarity between two strings (int)
sin(float arg) Sine (float)
sinh(float arg) Hyperbolic sine (float)
sizeof(?) Alias of count() (?)
sleep(int seconds) Delay execution (void)
snmp_get_quick_print(void) Fetch the current value of the UCD library's quick_print setting (bool)
snmp_set_quick_print(bool quick_print) Set the value of quick_print within the UCD SNMP library (void)
snmpget(string hostname, string community, string object_id [, int timeout [, int retries]]) Fetch an SNMP object (string)
snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]]) Return all objects including their respective object ID within the specified one (array)
snmpset(string hostname, string community, string object_id, string type, mixed value [, int timeout [, int retries]]) Set an SNMP object (bool)
snmpwalk(string hostname, string community, string object_id [, int timeout [, int retries]]) Fetch all the SNMP objects from an agent (array)
snmpwalkoid(string hostname, string community, string object_id [, int timeout [, int retries]]) Query for a tree of information about a network entity (array)
socket_accept(resource socket) Accepts a connection on a socket (resource)
socket_bind(resource socket, string address [, int port]) Binds a name to a socket (bool)
socket_clear_error([resource socket]) Clears the error on the socket or the last error code (void)
socket_close(resource socket) Closes a socket resource (void)
socket_connect(resource socket, string address [, int port]) Initiates a connection on a socket (bool)
socket_create(int domain, int type, int protocol) Create a socket (endpoint for communication) (resource)
socket_create_listen(int port [, int backlog]) Opens a socket on port to accept connections (resource)
socket_create_pair(int domain, int type, int protocol, array &fd) Creates a pair of indistinguishable sockets and stores them in fds. (bool)
socket_get_option(resource socket, int level, int optname) Gets socket options for the socket (mixed)
socket_get_status(?) Alias of stream_get_meta_data(). (?)
socket_getpeername(resource socket, string &addr [, int &port]) Queries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type. (bool)
socket_getsockname(resource socket, string &addr [, int &port]) Queries the local side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type. (bool)
socket_iovec_add(resource iovec, int iov_len) Adds a new vector to the scatter/gather array (bool)
socket_iovec_alloc(int num_vectors [, int ]) ...]) Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv (resource)
socket_iovec_delete(resource iovec, int iov_pos) Deletes a vector from an array of vectors (bool)
socket_iovec_fetch(resource iovec, int iovec_position) Returns the data held in the iovec specified by iovec_id[iovec_position] (string)
socket_iovec_free(resource iovec) Frees the iovec specified by iovec_id (bool)
socket_iovec_set(resource iovec, int iovec_position, string new_val) Sets the data held in iovec_id[iovec_position] to new_val (bool)
socket_last_error([resource socket]) Returns the last error on the socket (int)
socket_listen(resource socket [, int backlog]) Listens for a connection on a socket (bool)
socket_read(resource socket, int length [, int type]) Reads a maximum of length bytes from a socket (string)
socket_readv(resource socket, resource iovec_id) Reads from an fd, using the scatter-gather array defined by iovec_id (bool)
socket_recv(resource socket, string &buf, int len, int flags) Receives data from a connected socket (int)
socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port]) Receives data from a socket, connected or not (int)
socket_recvmsg(resource socket, resource iovec, array &control, int &controllen, int &flags, string &addr [, int &port]) Used to receive messages on a socket, whether connection-oriented or not (bool)
socket_select(resource &read, resource &write, resource &except, int tv_sec [, int tv_usec]) Runs the select() system call on the given arrays of sockets with a timeout specified by tv_sec and tv_usec (int)
socket_send(resource socket, string buf, int len, int flags) Sends data to a connected socket (int)
socket_sendmsg(resource socket, resource iovec, int flags, string addr [, int port]) Sends a message to a socket, regardless of whether it is connection-oriented or not (bool)
socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port]) Sends a message to a socket, whether it is connected or not (int)
socket_set_blocking(?) Alias for stream_set_blocking() (?)
socket_set_nonblock(resource socket) Sets nonblocking mode for file descriptor fd (bool)
socket_set_option(resource socket, int level, int optname, mixed optval) Sets socket options for the socket (bool)
socket_set_timeout(?) Alias for stream_set_timeout() (?)
socket_shutdown(resource socket [, int how]) Shuts down a socket for receiving, sending, or both. (bool)
socket_strerror(int errno) Return a string describing a socket error (string)
socket_write(resource socket, string buffer [, int length]) Write to a socket (int)
socket_writev(resource socket, resource iovec_id) Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id (bool)
sort(array array [, int sort_flags]) Sort an array (void)
soundex(string str) Calculate the soundex key of a string (string)
split(string pattern, string string [, int limit]) split string into array by regular expression (array)
spliti(string pattern, string string [, int limit]) Split string into array by regular expression case insensitive (array)
sprintf(string format [, mixed args]) Return a formatted string (string)
sql_regcase(string string) Make regular expression for case insensitive match (string)
sqrt(float arg) Square root (float)
srand(int seed) Seed the random number generator (void)
sscanf(string str, string format [, string var1]) Parses input from a string according to a format (mixed)
stat(string filename) Gives information about a file (array)
str_ireplace(mixed search, mixed replace, mixed subject [, int &count]) Case-insensitive version of str_replace(). (mixed)
str_pad(string input, int pad_length [, string pad_string [, int pad_type]]) Pad a string to a certain length with another string (string)
str_repeat(string input, int multiplier) Repeat a string (string)
str_replace(mixed search, mixed replace, mixed subject [, int &count]) Replace all occurrences of the search string with the replacement string (mixed)
str_rot13(string str) Perform the rot13 transform on a string (string)
str_shuffle(string str) Randomly shuffles a string (string)
str_word_count(string string [, int format]) Return information about words used in a string (mixed)
strcasecmp(string str1, string str2) Binary safe case-insensitive string comparison (int)
strchr(?) Alias for strstr() (?)
strcmp(string str1, string str2) Binary safe string comparison (int)
strcoll(string str1, string str2) Locale based string comparison (int)
strcspn(string str1, string str2) Find length of initial segment not matching mask (int)
stream_context_create(array options) Create a streams context (resource)
stream_context_get_options(resource stream|context) Retrieve options for a stream/wrapper/context (bool)
stream_context_set_option(resource context|stream, string wrapper, string option, mixed value) Sets an option for a stream/wrapper/context (bool)
stream_context_set_params(resource stream|context, array params) Set parameters for a stream/wrapper/context (bool)
stream_copy_to_stream(resource|string source, resource|string dest [, int maxlength]) Copies data from one stream to another (int)
stream_filter_append(resource stream, string filtername [, int read_write [, string params]]) Attach a filter to a stream. (bool)
stream_filter_prepend(resource stream, string filtername [, int read_write [, string params]]) Attach a filter to a stream. (bool)
stream_get_filters(void) Retrieve list of registered filters (array)
stream_get_line(resource handle, int length, string ending) Gets line from stream resource up to a given delimiter (string)
stream_get_meta_data(resource stream) Retrieves header/meta data from streams/file pointers (array)
stream_get_transports(void) Retrieve list of registered socket transports (array)
stream_get_wrappers(void) Retrieve list of registered streams (array)
stream_register_filter(string filtername, string classname) Register a stream filter implemented as a PHP class derived from php_user_filter (bool)
stream_register_wrapper(string protocol, string classname) Register a URL wrapper implemented as a PHP class (bool)
stream_select(resource &read, resource &write, resource &except, int tv_sec [, int tv_usec]) Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec (int)
stream_set_blocking(resource stream, int mode) Set blocking/non-blocking mode on a stream (bool)
stream_set_timeout(resource stream, int seconds, int microseconds) Set timeout period on a stream (bool)
stream_set_write_buffer(resource stream, int buffer) Sets file buffering on the given stream (int)
stream_socket_accept(resource server_socket [, int timeout [, string &peername]]) Accept a connection on a socket created by stream_socket_server() (resource)
stream_socket_client(string remote_socket [, int &errno [, string &errstr [, float timeout [, int flags [, resource context]]]]]) Open Internet or Unix domain socket connection (resource)
stream_socket_get_name(resource handle, boolean want_peer) Retrieve the name of the local or remote sockets (string)
stream_socket_server(string local_socket [, int &errno [, string &errstr [, int flags [, resource context]]]]) Create an Internet or Unix domain server socket (resource)
strftime(string format [, int timestamp]) Format a local time/date according to locale settings (string)
strip_tags(string str [, string allowable_tags]) Strip HTML and PHP tags from a string (string)
stripcslashes(string str) Un-quote string quoted with addcslashes() (string)
stripos(string haystack, string needle [, int offset]) Find position of first occurrence of a case-insensitive string (int)
stripslashes(string str) Un-quote string quoted with addslashes() (string)
stristr(string haystack, string needle) Case-insensitive strstr() (string)
strlen(string str) Get string length (int)
strnatcasecmp(string str1, string str2) Case insensitive string comparisons using a "natural order" algorithm (int)
strnatcmp(string str1, string str2) String comparisons using a "natural order" algorithm (int)
strncasecmp(string str1, string str2, int len) Binary safe case-insensitive string comparison of the first n characters (int)
strncmp(string str1, string str2, int len) Binary safe string comparison of the first n characters (int)
strpos(string haystack, string needle [, int offset]) Find position of first occurrence of a string (int)
strrchr(string haystack, string needle) Find the last occurrence of a character in a string (string)
strrev(string string) Reverse a string (string)
strrpos(string haystack, char needle) Find position of last occurrence of a char in a string (int)
strspn(string str1, string str2) Find length of initial segment matching mask (int)
strstr(string haystack, string needle) Find first occurrence of a string (string)
strtok(string arg1, string arg2) Tokenize string (string)
strtolower(string str) Make a string lowercase (string)
strtotime(string time [, int now]) Parse about any English textual datetime description into a UNIX timestamp (int)
strtoupper(string string) Make a string uppercase (string)
strtr(string str, string from, string to) Translate certain characters (string)
strval(mixed var) Get string value of a variable (string)
substr(string string, int start [, int length]) Return part of a string (string)
substr_count(string haystack, string needle) Count the number of substring occurrences (int)
substr_replace(string string, string replacement, int start [, int length]) Replace text within a portion of a string (string)
swf_actiongeturl(string url, string target) Get a URL from a Shockwave Flash movie (void)
swf_actiongotoframe(int framenumber) Play a frame and then stop (void)
swf_actiongotolabel(string label) Display a frame with the specified label (void)
swf_actionnextframe(void) Go foward one frame (void)
swf_actionplay(void) Start playing the flash movie from the current frame (void)
swf_actionprevframe(void) Go backwards one frame (void)
swf_actionsettarget(string target) Set the context for actions (void)
swf_actionstop(void) Stop playing the flash movie at the current frame (void)
swf_actiontogglequality(void) Toggle between low and high quality (void)
swf_actionwaitforframe(int framenumber, int skipcount) Skip actions if a frame has not been loaded (void)
swf_addbuttonrecord(int states, int shapeid, int depth) Controls location, appearance and active area of the current button (void)
swf_addcolor(float r, float g, float b, float a) Set the global add color to the rgba value specified (void)
swf_closefile([int return_file]) Close the current Shockwave Flash file (void)
swf_definebitmap(int objid, string image_name) Define a bitmap (void)
swf_definefont(int fontid, string fontname) Defines a font (void)
swf_defineline(int objid, float x1, float y1, float x2, float y2, float width) Define a line (void)
swf_definepoly(int objid, array coords, int npoints, float width) Define a polygon (void)
swf_definerect(int objid, float x1, float y1, float x2, float y2, float width) Define a rectangle (void)
swf_definetext(int objid, string str, int docenter) Define a text string (void)
swf_endbutton(void) End the definition of the current button (void)
swf_enddoaction(void) End the current action (void)
swf_endshape(void) Completes the definition of the current shape (void)
swf_endsymbol(void) End the definition of a symbol (void)
swf_fontsize(float size) Change the font size (void)
swf_fontslant(float slant) Set the font slant (void)
swf_fonttracking(float tracking) Set the current font tracking (void)
swf_getbitmapinfo(int bitmapid) Get information about a bitmap (array)
swf_getfontinfo(void) The height in pixels of a capital A and a lowercase x (array)
swf_getframe(void) Get the frame number of the current frame (int)
swf_labelframe(string name) Label the current frame (void)
swf_lookat(float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist) Define a viewing transformation (void)
swf_modifyobject(int depth, int how) Modify an object (void)
swf_mulcolor(float r, float g, float b, float a) Sets the global multiply color to the rgba value specified (void)
swf_nextid(void) Returns the next free object id (int)
swf_oncondition(int transition) Describe a transition used to trigger an action list (void)
swf_openfile(string filename, float width, float height, float framerate, float r, float g, float b) Open a new Shockwave Flash file (void)
swf_ortho(float xmin, float xmax, float ymin, float ymax, float zmin, float zmax) Defines an orthographic mapping of user coordinates onto the current viewport (void)
swf_ortho2(float xmin, float xmax, float ymin, float ymax) Defines 2D orthographic mapping of user coordinates onto the current viewport (void)
swf_perspective(float fovy, float aspect, float near, float far) Define a perspective projection transformation (void)
swf_placeobject(int objid, int depth) Place an object onto the screen (void)
swf_polarview(float dist, float azimuth, float incidence, float twist) Define the viewer's position with polar coordinates (void)
swf_popmatrix(void) Restore a previous transformation matrix (void)
swf_posround(int round) Enables or Disables the rounding of the translation when objects are placed or moved (void)
swf_pushmatrix(void) Push the current transformation matrix back unto the stack (void)
swf_removeobject(int depth) Remove an object (void)
swf_rotate(float angle, string axis) Rotate the current transformation (void)
swf_scale(float x, float y, float z) Scale the current transformation (void)
swf_setfont(int fontid) Change the current font (void)
swf_setframe(int framenumber) Switch to a specified frame (void)
swf_shapearc(float x, float y, float r, float ang1, float ang2) Draw a circular arc (void)
swf_shapecurveto(float x1, float y1, float x2, float y2) Draw a quadratic bezier curve between two points (void)
swf_shapecurveto3(float x1, float y1, float x2, float y2, float x3, float y3) Draw a cubic bezier curve (void)
swf_shapefillbitmapclip(int bitmapid) Set current fill mode to clipped bitmap (void)
swf_shapefillbitmaptile(int bitmapid) Set current fill mode to tiled bitmap (void)
swf_shapefilloff(void) Turns off filling (void)
swf_shapefillsolid(float r, float g, float b, float a) Set the current fill style to the specified color (void)
swf_shapelinesolid(float r, float g, float b, float a, float width) Set the current line style (void)
swf_shapelineto(float x, float y) Draw a line (void)
swf_shapemoveto(float x, float y) Move the current position (void)
swf_showframe(void) Display the current frame (void)
swf_startbutton(int objid, int type) Start the definition of a button (void)
swf_startdoaction(void) Start a description of an action list for the current frame (void)
swf_startshape(int objid) Start a complex shape (void)
swf_startsymbol(int objid) Define a symbol (void)
swf_textwidth(string str) Get the width of a string (float)
swf_translate(float x, float y, float z) Translate the current transformations (void)
swf_viewport(float xmin, float xmax, float ymin, float ymax) Select an area for future drawing (void)
swfbutton_keypress(string str) Returns the action flag for keyPress(char) (int)
swffont->getwidth(string string) Returns the string's width (int)
swfmovie->remove(resource instance) Removes the object instance from the display list. (void)
swfsprite->add(resource object) Adds an object to a sprite (void)
sybase_affected_rows([int link_identifier]) get number of affected rows in last query (int)
sybase_close([int link_identifier]) close Sybase connection (bool)
sybase_connect(string servername, string username, string password [, string charset]) open Sybase server connection (int)
sybase_data_seek(int result_identifier, int row_number) move internal row pointer (bool)
sybase_deadlock_retry_count(int retry_count) set the deadlock retry count (void)
sybase_fetch_array(int result) fetch row as array (array)
sybase_fetch_assoc(resource result) fetch row as associative array (array)
sybase_fetch_field(int result [, int field_offset]) get field information (object)
sybase_fetch_object(int result [, mixed object]) fetch row as object (int)
sybase_fetch_row(int result) get row as enumerated array (array)
sybase_field_seek(int result, int field_offset) set field offset (int)
sybase_free_result(int result) free result memory (bool)
sybase_get_last_message(void) Returns the last message from the server (string)
sybase_min_client_severity(int severity) Sets minimum client severity (void)
sybase_min_error_severity(int severity) Sets minimum error severity (void)
sybase_min_message_severity(int severity) Sets minimum message severity (void)
sybase_min_server_severity(int severity) Sets minimum server severity (void)
sybase_num_fields(int result) get number of fields in result (int)
sybase_num_rows(int result) Get number of rows in result (int)
sybase_pconnect(string servername, string username, string password [, string charset]) open persistent Sybase connection (int)
sybase_query(string query, int link_identifier) Send Sybase query (int)
sybase_result(int result, int row, mixed field) get result data (string)
sybase_select_db(string database_name, int link_identifier) select Sybase database (bool)
sybase_set_message_handler(callback handler) set handler called when a server message is raised (bool)
sybase_unbuffered_query(string query, int link_identifier) send Sybase query and do not block (resource)
symlink(string target, string link) Creates a symbolic link (int)
syslog(int priority, string message) Generate a system log message (int)
system(string command [, int return_var]) Execute an external program and display output (string)
tan(float arg) Tangent (float)
tanh(float arg) Hyperbolic tangent (float)
tempnam(string dir, string prefix) Create file with unique file name (string)
textdomain(string text_domain) Sets the default domain (string)
time(void) Return current UNIX timestamp (int)
tmpfile(void) Creates a temporary file (resource)
token_get_all(string source) Split given source into PHP tokens (array)
token_name(int token) Get the symbolic name of a given PHP token (string)
touch(string filename [, int time [, int atime]]) Sets access and modification time of file (int)
trigger_error(string error_msg [, int error_type]) Generates a user-level error/warning/notice message (void)
trim(string str [, string charlist]) Strip whitespace from the beginning and end of a string (string)
uasort(array array, callback cmp_function) Sort an array with a user-defined comparison function and maintain index association (void)
ucfirst(string str) Make a string's first character uppercase (string)
ucwords(string str) Uppercase the first character of each word in a string (string)
udm_add_search_limit(int agent, int var, string val) Add various search limits (int)
udm_alloc_agent(string dbaddr [, string dbmode]) Allocate mnoGoSearch session (int)
udm_api_version(void) Get mnoGoSearch API version. (int)
udm_cat_list(int agent, string category) Get all the categories on the same level with the current one. (array)
udm_cat_path(int agent, string category) Get the path to the current category. (array)
udm_check_charset(int agent, string charset) Check if the given charset is known to mnogosearch (int)
udm_check_stored(int agent, int link, string doc_id) Check connection to stored (int)
udm_clear_search_limits(int agent) Clear all mnoGoSearch search restrictions (int)
udm_close_stored(int agent, int link) Close connection to stored (int)
udm_crc32(int agent, string str) Return CRC32 checksum of gived string (int)
udm_errno(int agent) Get mnoGoSearch error number (int)
udm_error(int agent) Get mnoGoSearch error message (string)
udm_find(int agent, string query) Perform search (int)
udm_free_agent(int agent) Free mnoGoSearch session (int)
udm_free_ispell_data(int agent) Free memory allocated for ispell data (int)
udm_free_res(int res) Free mnoGoSearch result (int)
udm_get_doc_count(int agent) Get total number of documents in database. (int)
udm_get_res_field(int res, int row, int field) Fetch mnoGoSearch result field (string)
udm_get_res_param(int res, int param) Get mnoGoSearch result parameters (string)
udm_load_ispell_data(int agent, int var, string val1, string val2, int flag) Load ispell data (int)
udm_open_stored(int agent, string storedaddr) Open connection to stored (int)
udm_set_agent_param(int agent, int var, string val) Set mnoGoSearch agent session parameters (int)
uksort(array array, callback cmp_function) Sort an array by keys using a user-defined comparison function (void)
umask([int mask]) Changes the current umask (int)
uniqid(string prefix [, bool lcg]) Generate a unique ID (string)
unixtojd([int timestamp]) Convert UNIX timestamp to Julian Day (int)
unlink(string filename) Deletes a file (int)
unpack(string format, string data) Unpack data from binary string (array)
unregister_tick_function(string function_name) De-register a function for execution on each tick (void)
unserialize(string str [, string callback]) Creates a PHP value from a stored representation (mixed)
unset(mixed var [, mixed var [, ...]]) Unset a given variable (void)
urldecode(string str) Decodes URL-encoded string (string)
urlencode(string str) URL-encodes string (string)
user_error(?) Alias of trigger_error() (?)
usleep(int micro_seconds) Delay execution in microseconds (void)
usort(array array, callback cmp_function) Sort an array by values using a user-defined comparison function (void)
utf8_decode(string data) Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1. (string)
utf8_encode(string data) encodes an ISO-8859-1 string to UTF-8 (string)
var_dump(mixed expression [, mixed expression [, ...]]) Dumps information about a variable (void)
var_export(mixed expression [, bool return]) Outputs or returns a string representation of a variable (mixed)
version_compare(string version1, string version2 [, string operator]) Compares two "PHP-standardized" version number strings (int)
virtual(string filename) Perform an Apache sub-request (int)
vpopmail_add_alias_domain(string domain, string aliasdomain) Add an alias for a virtual domain (bool)
vpopmail_add_alias_domain_ex(string olddomain, string newdomain) Add alias to an existing virtual domain (bool)
vpopmail_add_domain(string domain, string dir, int uid, int gid) Add a new virtual domain (bool)
vpopmail_add_domain_ex(string domain, string passwd [, string quota [, string bounce [, bool apop]]]) Add a new virtual domain (bool)
vpopmail_add_user(string user, string domain, string password [, string gecos [, bool apop]]) Add a new user to the specified virtual domain (bool)
vpopmail_alias_add(string user, string domain, string alias) insert a virtual alias (bool)
vpopmail_alias_del(string user, string domain) deletes all virtual aliases of a user (bool)
vpopmail_alias_del_domain(string domain) deletes all virtual aliases of a domain (bool)
vpopmail_alias_get(string alias, string domain) get all lines of an alias for a domain (array)
vpopmail_alias_get_all(string domain) get all lines of an alias for a domain (array)
vpopmail_auth_user(string user, string domain, string password [, string apop]) Attempt to validate a username/domain/password. Returns true/false (bool)
vpopmail_del_domain(string domain) Delete a virtual domain (bool)
vpopmail_del_domain_ex(string domain) Delete a virtual domain (bool)
vpopmail_del_user(string user, string domain) Delete a user from a virtual domain (bool)
vpopmail_error(void) Get text message for last vpopmail error. Returns string (string)
vpopmail_passwd(string user, string domain, string password) Change a virtual user's password (bool)
vpopmail_set_user_quota(string user, string domain, string quota) Sets a virtual user's quota (bool)
vprintf(string format, array args) Output a formatted string (void)
vsprintf(string format, array args) Return a formatted string (string)
w32api_deftype(string typename, string member1_type, string member1_name [, string ... [, string ...]]) Defines a type for use with other w32api_functions (bool)
w32api_init_dtype(string typename, mixed value [, mixed ...]) Creates an instance of the data type typename and fills it with the values passed (resource)
w32api_invoke_function(string funcname, mixed argument [, mixed ...]) Invokes function funcname with the arguments passed after the function name (mixed)
w32api_register_function(string library, string function_name, string return_type) Registers function function_name from library with PHP (bool)
w32api_set_call_method(int method) Sets the calling method used (void)
wddx_add_vars(int packet_id, mixed name_var [, mixed ...]) Add variables to a WDDX packet with the specified ID (bool)
wddx_deserialize(string packet) Deserializes a WDDX packet (mixed)
wddx_packet_end(int packet_id) Ends a WDDX packet with the specified ID (string)
wddx_packet_start([string comment]) Starts a new WDDX packet with structure inside it (int)
wddx_serialize_value(mixed var [, string comment]) Serialize a single value into a WDDX packet (string)
wddx_serialize_vars(mixed var_name [, mixed ...]) Serialize variables into a WDDX packet (string)
wordwrap(string str [, int width [, string break [, boolean cut]]]) Wraps a string to a given number of characters using a string break character. (string)
xml_error_string(int code) get XML parser error string (string)
xml_get_current_byte_index(resource parser) get current byte index for an XML parser (int)
xml_get_current_column_number(resource parser) Get current column number for an XML parser (int)
xml_get_current_line_number(resource parser) get current line number for an XML parser (int)
xml_get_error_code(resource parser) get XML parser error code (int)
xml_parse(resource parser, string data [, bool is_final]) start parsing an XML document (bool)
xml_parse_into_struct(resource parser, string data, array &values [, array &index]) Parse XML data into an array structure (int)
xml_parser_create([string encoding]) create an XML parser (resource)
xml_parser_create_ns([string encoding [, string separator]]) Create an XML parser (resource)
xml_parser_free(resource parser) Free an XML parser (bool)
xml_parser_get_option(resource parser, int option) get options from an XML parser (mixed)
xml_parser_set_option(resource parser, int option, mixed value) set options in an XML parser (bool)
xml_set_character_data_handler(resource parser, callback handler) set up character data handler (bool)
xml_set_default_handler(resource parser, callback handler) set up default handler (bool)
xml_set_element_handler(resource parser, callback start_element_handler, callback end_element_handler) set up start and end element handlers (bool)
xml_set_end_namespace_decl_handler(resource pind, callback handler) Set up character data handler (bool)
xml_set_external_entity_ref_handler(resource parser, callback handler) set up external entity reference handler (bool)
xml_set_notation_decl_handler(resource parser, callback handler) set up notation declaration handler (bool)
xml_set_object(resource parser, object object) Use XML Parser within an object (void)
xml_set_processing_instruction_handler(resource parser, callback handler) Set up processing instruction (PI) handler (bool)
xml_set_start_namespace_decl_handler(resource pind, callback hdl) Set up character data handler (bool)
xml_set_unparsed_entity_decl_handler(resource parser, callback handler) Set up unparsed entity declaration handler (bool)
xmlrpc_decode(string xml [, string encoding]) Decodes XML into native PHP types (array)
xmlrpc_decode_request(string xml, string method [, string encoding]) Decodes XML into native PHP types (array)
xmlrpc_encode(mixed value) Generates XML for a PHP value (string)
xmlrpc_encode_request(string method, mixed params) Generates XML for a method request (string)
xmlrpc_get_type(mixed value) Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings (string)
xmlrpc_parse_method_descriptions(string xml) Decodes XML into a list of method descriptions (array)
xmlrpc_server_add_introspection_data(resource server, array desc) Adds introspection documentation (int)
xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options]) Parses XML requests and call methods (mixed)
xmlrpc_server_create(void) Creates an xmlrpc server (resource)
xmlrpc_server_destroy(resource server) Destroys server resources (void)
xmlrpc_server_register_introspection_callback(resource server, string function) Register a PHP function to generate documentation (bool)
xmlrpc_server_register_method(resource server, string method_name, string function) Register a PHP function to resource method matching method_name (bool)
xmlrpc_set_type(string value, string type) Sets xmlrpc type, base64 or datetime, for a PHP string value (bool)
xpath_eval(object xpath context, string xpath expression [, object contextnode]) Evaluates the XPath Location Path in the given string (array)
xpath_eval_expression(object xpath_context) Evaluates the XPath Location Path in the given string (array)
xpath_new_context(object dom document) Creates new xpath context (object)
xptr_eval([object xpath_context, string eval_str]) Evaluate the XPtr Location Path in the given string (int)
xptr_new_context([object doc_handle]) Create new XPath Context (string)
xslt_create(void) Create a new XSLT processor (resource)
xslt_errno(resource xh) Return a error number (int)
xslt_error(resource xh) Return a error string (mixed)
xslt_free(resource xh) Free XSLT processor (void)
xslt_process(resource xh, string xmlcontainer, string xslcontainer [, string resultcontainer [, array arguments [, array parameters]]]) Perform an XSLT transformation (mixed)
xslt_set_base(resource xh, string uri) Set the base URI for all XSLT transformations (void)
xslt_set_encoding(resource xh, string encoding) Set the encoding for the parsing of XML documents (void)
xslt_set_error_handler(resource xh, mixed handler) Set an error handler for a XSLT processor (void)
xslt_set_log(resource xh, mixed log) Set the log file to write log messages to (void)
xslt_set_sax_handler(resource xh, array handlers) Set SAX handlers for a XSLT processor (void)
xslt_set_sax_handlers(resource processor, array handlers) Set the SAX handlers to be called when the XML document gets processed (void)
xslt_set_scheme_handler(resource xh, array handlers) Set Scheme handlers for a XSLT processor (void)
xslt_set_scheme_handlers(resource processor, array handlers) Set the scheme handlers for the XSLT processor (void)
yaz_addinfo(resource id) Returns additional error information (string)
yaz_ccl_conf(resource id, array config) Configure CCL parser (int)
yaz_ccl_parse(resource id, string query, array & result) Invoke CCL Parser (int)
yaz_close(resource id) Close YAZ connection (int)
yaz_connect(string zurl [, mixed options]) Prepares for a connection to a Z39.50 target (server). (resource)
yaz_database(resource id, string databases) Specifies the databases within a session (int)
yaz_element(resource id, string elementset) Specifies Element-Set Name for retrieval (int)
yaz_errno(resource id) Returns error number (int)
yaz_error(resource id) Returns error description (string)
yaz_get_option(resource id, string name) Returns value of option for connection (string)
yaz_hits(resource id) Returns number of hits for last search (int)
yaz_itemorder(resource id, array args) Prepares for Z39.50 Item Order with an ILL-Request package (int)
yaz_present(resource id) Prepares for retrieval (Z39.50 present). (int)
yaz_range(resource id, int start, int number) Specifies the maximum number of records to retrieve (int)
yaz_record(resource id, int pos, string type) Returns a record (string)
yaz_scan(resource id, string type, string startterm [, array flags]) Prepares for a scan (int)
yaz_scan_result(resource id [, array & result]) Returns Scan Response result (array)
yaz_schema(resource id, string schema) Specifies schema for retrieval. (int)
yaz_search(resource id, string type, string query) Prepares for a search (int)
yaz_set_option(resource id, string name, string value) Sets one or more options for connection (string)
yaz_sort(resource id, string criteria) Sets sorting criteria (int)
yaz_syntax(resource id, string syntax) Specifies the preferred record syntax for retrieval. (int)
yaz_wait([array options]) Wait for Z39.50 requests to complete (int)
yp_all(string domain, string map, string callback) Traverse the map and call a function on each entry (void)
yp_cat(string domain, string map) Return an array containing the entire map (array)
yp_err_string(void) Returns the error string associated with the previous operation (string)
yp_errno(void) Returns the error code of the previous operation (int)
yp_first(string domain, string map) Returns the first key-value pair from the named map (array)
yp_get_default_domain(void) Fetches the machine's default NIS domain (int)
yp_master(string domain, string map) Returns the machine name of the master NIS server for a map (string)
yp_match(string domain, string map, string key) Returns the matched line (string)
yp_next(string domain, string map, string key) Returns the next key-value pair in the named map. (array)
yp_order(string domain, string map) Returns the order number for a map (int)
zend_logo_guid(void) Gets the zend guid (string)
zend_version(void) Gets the version of the current Zend engine (string)
zip_close(resource zip) Close a Zip File Archive (void)
zip_entry_close(resource zip_entry) Close a Directory Entry (void)
zip_entry_compressedsize(resource zip_entry) Retrieve the Compressed Size of a Directory Entry (int)
zip_entry_compressionmethod(resource zip_entry) Retrieve the Compression Method of a Directory Entry (string)
zip_entry_filesize(resource zip_entry) Retrieve the Actual File Size of a Directory Entry (int)
zip_entry_name(resource zip_entry) Retrieve the Name of a Directory Entry (string)
zip_entry_open(resource zip, resource zip_entry [, string mode]) Open a Directory Entry for Reading (bool)
zip_entry_read(resource zip_entry [, int length]) Read From an Open Directory Entry (string)
zip_open(string filename) Open a Zip File Archive (resource)
zip_read(resource zip) Read Next Entry in a Zip File Archive (resource)
